$ pypy -V
Python 2.7.10 (0e2d9a73f5a1818d0245d75daccdbe21b2d5c3ef, Sep 09 2016, 08:57:59)
[PyPy 5.4.1 with GCC 6.1.1 20160621 (Red Hat 6.1.1-3)]

$ pypy runtests.py -v
test_frozen (numba.tests.npyufunc.test_dufunc.TestDUFunc) ... ok
test_npm_call (numba.tests.npyufunc.test_dufunc.TestDUFunc) ... ok
test_npm_call_implicit_output (numba.tests.npyufunc.test_dufunc.TestDUFunc) ... ERROR
test_scalar (numba.tests.npyufunc.test_dufunc.TestDUFunc) ... ok
test_ufunc_props (numba.tests.npyufunc.test_dufunc.TestDUFunc) ... ok
test_gufunc_raise (numba.tests.npyufunc.test_errors.TestExceptions) ... ok
test_gufunc_raise_objmode (numba.tests.npyufunc.test_errors.TestExceptions) ... ERROR
test_ufunc_raise (numba.tests.npyufunc.test_errors.TestExceptions) ... ok
test_ufunc_raise_objmode (numba.tests.npyufunc.test_errors.TestExceptions) ... ERROR
test_floordiv_float (numba.tests.npyufunc.test_errors.TestFloatingPointExceptions) ... ok
test_floordiv_int (numba.tests.npyufunc.test_errors.TestFloatingPointExceptions) ... ok
test_power_float (numba.tests.npyufunc.test_errors.TestFloatingPointExceptions) ... ok
test_power_integer (numba.tests.npyufunc.test_errors.TestFloatingPointExceptions) ... ok
test_remainder_float (numba.tests.npyufunc.test_errors.TestFloatingPointExceptions) ... ok
test_remainder_int (numba.tests.npyufunc.test_errors.TestFloatingPointExceptions) ... ok
test_truediv_float (numba.tests.npyufunc.test_errors.TestFloatingPointExceptions) ... ok
test_truediv_integer (numba.tests.npyufunc.test_errors.TestFloatingPointExceptions) ... ok
test_gil_reacquire_deadlock (numba.tests.npyufunc.test_parallel_ufunc_issues.TestParUfuncIssues) ... ERROR
test_thread_response (numba.tests.npyufunc.test_parallel_ufunc_issues.TestParUfuncIssues) ... ok
test_cpu_1 (numba.tests.npyufunc.test_vectorize_decor.TestVectorizeDecor) ... ok
test_cpu_2 (numba.tests.npyufunc.test_vectorize_decor.TestVectorizeDecor) ... ok
test_cpu_3 (numba.tests.npyufunc.test_vectorize_decor.TestVectorizeDecor) ... ok
test_cpu_4 (numba.tests.npyufunc.test_vectorize_decor.TestVectorizeDecor) ... ok
test_parallel_1 (numba.tests.npyufunc.test_vectorize_decor.TestVectorizeDecor) ... ok
test_parallel_2 (numba.tests.npyufunc.test_vectorize_decor.TestVectorizeDecor) ... ok
test_parallel_3 (numba.tests.npyufunc.test_vectorize_decor.TestVectorizeDecor) ... ok
test_parallel_4 (numba.tests.npyufunc.test_vectorize_decor.TestVectorizeDecor) ... ok
test_basic_gufunc (numba.tests.npyufunc.test_ufuncbuilding.TestGUfuncBuilding) ... ok
test_gufunc_struct (numba.tests.npyufunc.test_ufuncbuilding.TestGUfuncBuilding) ... ok
test_gufunc_struct_forceobj (numba.tests.npyufunc.test_ufuncbuilding.TestGUfuncBuilding) ... ERROR
test_basic_gufunc (numba.tests.npyufunc.test_ufuncbuilding.TestGUfuncBuildingJitDisabled) ... ok
test_gufunc_struct (numba.tests.npyufunc.test_ufuncbuilding.TestGUfuncBuildingJitDisabled) ... ok
test_gufunc_struct_forceobj (numba.tests.npyufunc.test_ufuncbuilding.TestGUfuncBuildingJitDisabled) ... ERROR
test_basic_ufunc (numba.tests.npyufunc.test_ufuncbuilding.TestUfuncBuilding) ... ok
test_nested_call (numba.tests.npyufunc.test_ufuncbuilding.TestUfuncBuilding) ... ok
test_nested_call_explicit (numba.tests.npyufunc.test_ufuncbuilding.TestUfuncBuilding) ... ok
test_ufunc_forceobj (numba.tests.npyufunc.test_ufuncbuilding.TestUfuncBuilding) ... ok
test_ufunc_struct (numba.tests.npyufunc.test_ufuncbuilding.TestUfuncBuilding) ... ok
test_basic_ufunc (numba.tests.npyufunc.test_ufuncbuilding.TestUfuncBuildingJitDisabled) ... ok
test_nested_call (numba.tests.npyufunc.test_ufuncbuilding.TestUfuncBuildingJitDisabled) ... ok
test_nested_call_explicit (numba.tests.npyufunc.test_ufuncbuilding.TestUfuncBuildingJitDisabled) ... ok
test_ufunc_forceobj (numba.tests.npyufunc.test_ufuncbuilding.TestUfuncBuildingJitDisabled) ... ok
test_ufunc_struct (numba.tests.npyufunc.test_ufuncbuilding.TestUfuncBuildingJitDisabled) ... ok
test_guvectorize (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecor) ... ok
test_guvectorize_error_in_objectmode (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecor) ... ERROR
test_guvectorize_identity (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecor) ... ok
test_guvectorize_invalid_layout (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecor) ... ok
test_guvectorize_no_output (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecor) ... ok
test_guvectorize_objectmode (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecor) ... ERROR
test_guvectorize_scalar_objectmode (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecor) ... ERROR
test_vectorize (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecor) ... ok
test_vectorize_bool_return (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecor) ... ok
test_vectorize_identity (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecor) ... ok
test_vectorize_no_args (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecor) ... ok
test_vectorize_objmode (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecor) ... ok
test_vectorize_only_kws (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecor) ... ok
test_vectorize_output_kwarg (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecor) ... ok
test_guvectorize (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecorJitDisabled) ... ok
test_guvectorize_error_in_objectmode (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecorJitDisabled) ... ERROR
test_guvectorize_identity (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecorJitDisabled) ... ok
test_guvectorize_invalid_layout (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecorJitDisabled) ... ok
test_guvectorize_no_output (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecorJitDisabled) ... ok
test_guvectorize_objectmode (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecorJitDisabled) ... ERROR
test_guvectorize_scalar_objectmode (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecorJitDisabled) ... ERROR
test_vectorize (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecorJitDisabled) ... ok
test_vectorize_bool_return (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecorJitDisabled) ... ok
test_vectorize_identity (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecorJitDisabled) ... ok
test_vectorize_no_args (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecorJitDisabled) ... ok
test_vectorize_objmode (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecorJitDisabled) ... ok
test_vectorize_only_kws (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecorJitDisabled) ... ok
test_vectorize_output_kwarg (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecorJitDisabled) ... ok
test_gufunc (numba.tests.npyufunc.test_gufunc.TestGUFunc) ... ok
test_guvectorize_decor (numba.tests.npyufunc.test_gufunc.TestGUFunc) ... ok
test_ufunc_like (numba.tests.npyufunc.test_gufunc.TestGUFunc) ... ok
test_gufunc (numba.tests.npyufunc.test_gufunc.TestGUFuncParallel) ... ok
test_guvectorize_decor (numba.tests.npyufunc.test_gufunc.TestGUFuncParallel) ... ok
test_ufunc_like (numba.tests.npyufunc.test_gufunc.TestGUFuncParallel) ... ok
test_ndim_mismatch (numba.tests.npyufunc.test_gufunc.TestGUVectorizeScalar) ... ok
test_scalar_input (numba.tests.npyufunc.test_gufunc.TestGUVectorizeScalar) ... ok
test_scalar_input_core_type (numba.tests.npyufunc.test_gufunc.TestGUVectorizeScalar) ... ok
test_scalar_input_core_type_error (numba.tests.npyufunc.test_gufunc.TestGUVectorizeScalar) ... ok
test_scalar_output (numba.tests.npyufunc.test_gufunc.TestGUVectorizeScalar) ... ok
test_ndim_mismatch (numba.tests.npyufunc.test_gufunc.TestGUVectorizeScalarParallel) ... ok
test_scalar_input (numba.tests.npyufunc.test_gufunc.TestGUVectorizeScalarParallel) ... ok
test_scalar_input_core_type (numba.tests.npyufunc.test_gufunc.TestGUVectorizeScalarParallel) ... ok
test_scalar_input_core_type_error (numba.tests.npyufunc.test_gufunc.TestGUVectorizeScalarParallel) ... ok
test_scalar_output (numba.tests.npyufunc.test_gufunc.TestGUVectorizeScalarParallel) ... ok
test_num_threads_variable (numba.tests.npyufunc.test_parallel_env_variable.TestParallelEnvVariable) ... ok
test_low_workcount (numba.tests.npyufunc.test_parallel_low_work.TestParallelLowWorkCount) ... ok
test_broadcasting (numba.tests.npyufunc.test_ufunc.TestUFuncs) ... ok
test_implicit_broadcasting (numba.tests.npyufunc.test_ufunc.TestUFuncs) ... ok
test_ufunc_attributes (numba.tests.npyufunc.test_ufunc.TestUFuncs) ... ok
test_getitem_array (numba.tests.test_fancy_indexing.TestFancyIndexing) ... ERROR
test_getitem_tuple (numba.tests.test_fancy_indexing.TestFancyIndexing) ... ERROR
test_getitem_tuple_and_ellipsis (numba.tests.test_fancy_indexing.TestFancyIndexing) ... ERROR
test_setitem_array (numba.tests.test_fancy_indexing.TestFancyIndexing) ... ok
test_setitem_tuple (numba.tests.test_fancy_indexing.TestFancyIndexing) ... ok
test_setitem_tuple_and_ellipsis (numba.tests.test_fancy_indexing.TestFancyIndexing) ... ok
test_andor (numba.tests.test_usecases.TestUsecases) ... ok
test_blackscholes_cnd (numba.tests.test_usecases.TestUsecases) ... ok
test_copy_arrays (numba.tests.test_usecases.TestUsecases) ... ok
test_copy_arrays2d (numba.tests.test_usecases.TestUsecases) ... ok
test_string_comparisons (numba.tests.test_usecases.TestUsecases) ... ok
test_string_concat (numba.tests.test_usecases.TestUsecases) ... ok
test_string_conversion (numba.tests.test_usecases.TestUsecases) ... ok
test_string_len (numba.tests.test_usecases.TestUsecases) ... ok
test_string_slicing (numba.tests.test_usecases.TestUsecases) ... ok
test_sum1d (numba.tests.test_usecases.TestUsecases) ... ok
test_sum1d_pyobj (numba.tests.test_usecases.TestUsecases) ... ok
test_sum2d (numba.tests.test_usecases.TestUsecases) ... ok
test_while_count (numba.tests.test_usecases.TestUsecases) ... ok
test_assert_statement_nopython (numba.tests.test_exceptions.TestRaising) ... ERROR
test_assert_statement_objmode (numba.tests.test_exceptions.TestRaising) ... ERROR
test_raise_class_nopython (numba.tests.test_exceptions.TestRaising) ... ok
test_raise_class_objmode (numba.tests.test_exceptions.TestRaising) ... ok
test_raise_instance_nopython (numba.tests.test_exceptions.TestRaising) ... ok
test_raise_instance_objmode (numba.tests.test_exceptions.TestRaising) ... ok
test_raise_invalid_class_nopython (numba.tests.test_exceptions.TestRaising) ... ok
test_raise_invalid_class_objmode (numba.tests.test_exceptions.TestRaising) ... ERROR
test_raise_nested (numba.tests.test_exceptions.TestRaising) ... ok
test_raise_nested_npm (numba.tests.test_exceptions.TestRaising) ... ok
test_reraise_nopython (numba.tests.test_exceptions.TestRaising) ... ERROR
test_reraise_objmode (numba.tests.test_exceptions.TestRaising) ... ERROR
test_unituple_index_error (numba.tests.test_exceptions.TestRaising) ... ok
test_issue_455 (numba.tests.test_dyn_func.TestDynFunc) ... ok
test_loop1_int16 (numba.tests.test_range.TestRange) ... ok
test_loop2_int16 (numba.tests.test_range.TestRange) ... ok
test_loop3_int32 (numba.tests.test_range.TestRange) ... ok
test_xrange (numba.tests.test_range.TestRange) ... ok
test_cc_properties (numba.tests.test_pycc.TestCC) ... skipped 'PYPY FIXME - no support for pycc on pypy'
test_compile (numba.tests.test_pycc.TestCC) ... skipped 'PYPY FIXME - no support for pycc on pypy'
test_compile_for_cpu (numba.tests.test_pycc.TestCC) ... skipped 'PYPY FIXME - no support for pycc on pypy'
test_compile_for_cpu_host (numba.tests.test_pycc.TestCC) ... skipped 'PYPY FIXME - no support for pycc on pypy'
test_compile_helperlib (numba.tests.test_pycc.TestCC) ... skipped 'PYPY FIXME - no support for pycc on pypy'
test_compile_nrt (numba.tests.test_pycc.TestCC) ... skipped 'PYPY FIXME - no support for pycc on pypy'
test_setup_py_distutils (numba.tests.test_pycc.TestDistutilsSupport) ... skipped 'PYPY FIXME - no support for pycc on pypy'
test_setup_py_setuptools (numba.tests.test_pycc.TestDistutilsSupport) ... skipped 'PYPY FIXME - no support for pycc on pypy'
test_pycc_bitcode (numba.tests.test_pycc.TestLegacyAPI) ... skipped 'PYPY FIXME - no support for pycc on pypy'
test_pycc_ctypes_lib (numba.tests.test_pycc.TestLegacyAPI) ... skipped 'PYPY FIXME - no support for pycc on pypy'
test_pycc_pymodule (numba.tests.test_pycc.TestLegacyAPI) ... skipped 'PYPY FIXME - no support for pycc on pypy'
test_1d (numba.tests.test_numberctor.TestArrayNumberCtor) ... ERROR
test_2d (numba.tests.test_numberctor.TestArrayNumberCtor) ... ERROR
test_bool (numba.tests.test_numberctor.TestScalarNumberCtor) ... ok
test_complex (numba.tests.test_numberctor.TestScalarNumberCtor) ... ok
test_complex2 (numba.tests.test_numberctor.TestScalarNumberCtor) ... ok
test_float (numba.tests.test_numberctor.TestScalarNumberCtor) ... ok
test_int (numba.tests.test_numberctor.TestScalarNumberCtor) ... ok
test_numba_types (numba.tests.test_numberctor.TestScalarNumberCtor) ... ok
test_numpy_types (numba.tests.test_numberctor.TestScalarNumberCtor) ... ok
test_cache (numba.tests.test_compile_cache.TestCompileCache) ... ok
test_closures (numba.tests.test_compile_cache.TestCompileCache) ... ok
test_error_model (numba.tests.test_compile_cache.TestCompileCache) ... ok
test_angle (numba.tests.test_np_functions.TestNPFunctions) ... ok
test_bincount1 (numba.tests.test_np_functions.TestNPFunctions) ... ERROR
test_bincount2 (numba.tests.test_np_functions.TestNPFunctions) ... ERROR
test_diff1 (numba.tests.test_np_functions.TestNPFunctions) ... ok
test_diff2 (numba.tests.test_np_functions.TestNPFunctions) ... ok
test_digitize (numba.tests.test_np_functions.TestNPFunctions) ... ERROR
test_histogram (numba.tests.test_np_functions.TestNPFunctions) ... ok
test_searchsorted (numba.tests.test_np_functions.TestNPFunctions) ... ERROR
test_sinc (numba.tests.test_np_functions.TestNPFunctions) ... ok
test_add_sub_timedelta (numba.tests.test_npdatetime.TestDatetimeArithmetic) ... /home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/unittest/case.py:505: FutureWarning: In the future, 'NAT == x' and 'x == NAT' will always be False.
  if not first == second:
ok
test_comparisons (numba.tests.test_npdatetime.TestDatetimeArithmetic) ... /home/graham/pypy/numba/numba/tests/test_npdatetime.py:680: FutureWarning: In the future, 'NAT < x' and 'x < NAT' will always be False.
  self.assertPreciseEqual(lt(a, b), expected, (a, b, expected))
/home/graham/pypy/numba/numba/tests/test_npdatetime.py:681: FutureWarning: In the future, 'NAT > x' and 'x > NAT' will always be False.
  self.assertPreciseEqual(gt(b, a), expected, (a, b, expected))
/home/graham/pypy/numba/numba/tests/test_npdatetime.py:662: FutureWarning: In the future, NAT != NAT will be True rather than False.
  self.assertPreciseEqual(ne(a, b), not expected, (a, b, expected))
/home/graham/pypy/numba/numba/tests/test_npdatetime.py:688: FutureWarning: In the future, 'NAT < x' and 'x < NAT' will always be False.
  self.assertPreciseEqual(a < b, expected)
/home/graham/pypy/numba/numba/tests/test_npdatetime.py:660: FutureWarning: In the future, 'NAT == x' and 'x == NAT' will always be False.
  self.assertPreciseEqual(eq(a, b), expected, (a, b, expected))
/home/graham/pypy/numba/numba/tests/test_npdatetime.py:661: FutureWarning: In the future, 'NAT == x' and 'x == NAT' will always be False.
  self.assertPreciseEqual(eq(b, a), expected, (a, b, expected))
/home/graham/pypy/numba/numba/tests/test_npdatetime.py:663: FutureWarning: In the future, NAT != NAT will be True rather than False.
  self.assertPreciseEqual(ne(b, a), not expected, (a, b, expected))
/home/graham/pypy/numba/numba/tests/test_npdatetime.py:666: FutureWarning: In the future, 'NAT <= x' and 'x <= NAT' will always be False.
  self.assertTrue(le(a, b), (a, b))
/home/graham/pypy/numba/numba/tests/test_npdatetime.py:667: FutureWarning: In the future, 'NAT >= x' and 'x >= NAT' will always be False.
  self.assertTrue(ge(a, b), (a, b))
/home/graham/pypy/numba/numba/tests/test_npdatetime.py:668: FutureWarning: In the future, 'NAT <= x' and 'x <= NAT' will always be False.
  self.assertTrue(le(b, a), (a, b))
/home/graham/pypy/numba/numba/tests/test_npdatetime.py:669: FutureWarning: In the future, 'NAT >= x' and 'x >= NAT' will always be False.
  self.assertTrue(ge(b, a), (a, b))
/home/graham/pypy/numba/numba/tests/test_npdatetime.py:676: FutureWarning: In the future, 'NAT == x' and 'x == NAT' will always be False.
  self.assertPreciseEqual(a == b, expected)
ok
test_datetime_difference (numba.tests.test_npdatetime.TestDatetimeArithmetic) ... ok
test_add_sub_timedelta (numba.tests.test_npdatetime.TestDatetimeArithmeticNoPython) ... ok
test_comparisons (numba.tests.test_npdatetime.TestDatetimeArithmeticNoPython) ... ok
test_datetime_difference (numba.tests.test_npdatetime.TestDatetimeArithmeticNoPython) ... ok
test_datetime (numba.tests.test_npdatetime.TestMetadataScalingFactor) ... ok
test_datetime_npm (numba.tests.test_npdatetime.TestMetadataScalingFactor) ... ok
test_timedelta (numba.tests.test_npdatetime.TestMetadataScalingFactor) ... ok
test_timedelta_npm (numba.tests.test_npdatetime.TestMetadataScalingFactor) ... ok
test_constant_datetime (numba.tests.test_npdatetime.TestMiscCompiling) ... ok
test_constant_timedelta (numba.tests.test_npdatetime.TestMiscCompiling) ... ok
test_jit_explicit_signature (numba.tests.test_npdatetime.TestMiscCompiling) ... ok
test_vectorize_explicit_signature (numba.tests.test_npdatetime.TestMiscCompiling) ... ok
test_can_cast_timedelta (numba.tests.test_npdatetime.TestModuleHelpers) ... ok
test_combine_datetime_timedelta_units (numba.tests.test_npdatetime.TestModuleHelpers) ... ok
test_datetime_timedelta_scaling (numba.tests.test_npdatetime.TestModuleHelpers) ... ok
test_same_kind (numba.tests.test_npdatetime.TestModuleHelpers) ... ok
test_timedelta_conversion (numba.tests.test_npdatetime.TestModuleHelpers) ... ok
test_abs (numba.tests.test_npdatetime.TestTimedeltaArithmetic) ... ok
test_add (numba.tests.test_npdatetime.TestTimedeltaArithmetic) ... ok
test_div (numba.tests.test_npdatetime.TestTimedeltaArithmetic) ... /home/graham/pypy/numba/numba/tests/test_npdatetime.py:336: RuntimeWarning: divide by zero encountered in divide
  self.assertPreciseEqual(div(a, b), expected)
/home/graham/pypy/numba/numba/tests/test_npdatetime.py:337: RuntimeWarning: divide by zero encountered in floor_divide
  self.assertPreciseEqual(floordiv(a, b), expected)
ok
test_eq_ne (numba.tests.test_npdatetime.TestTimedeltaArithmetic) ... /home/graham/pypy/numba/numba/tests/test_npdatetime.py:383: FutureWarning: In the future, 'NAT == x' and 'x == NAT' will always be False.
  self.assertPreciseEqual(eq(a, b), expected)
/home/graham/pypy/numba/numba/tests/test_npdatetime.py:384: FutureWarning: In the future, 'NAT == x' and 'x == NAT' will always be False.
  self.assertPreciseEqual(eq(b, a), expected)
/home/graham/pypy/numba/numba/tests/test_npdatetime.py:385: FutureWarning: In the future, NAT != NAT will be True rather than False.
  self.assertPreciseEqual(ne(a, b), not expected)
/home/graham/pypy/numba/numba/tests/test_npdatetime.py:386: FutureWarning: In the future, NAT != NAT will be True rather than False.
  self.assertPreciseEqual(ne(b, a), not expected)
ok
test_homogenous_div (numba.tests.test_npdatetime.TestTimedeltaArithmetic) ... /home/graham/pypy/numba/numba/tests/test_npdatetime.py:359: RuntimeWarning: divide by zero encountered in divide
  self.assertPreciseEqual(div(a, b), expected)
/home/graham/pypy/numba/numba/tests/test_npdatetime.py:359: RuntimeWarning: invalid value encountered in divide
  self.assertPreciseEqual(div(a, b), expected)
ok
test_le_gt (numba.tests.test_npdatetime.TestTimedeltaArithmetic) ... /home/graham/pypy/numba/numba/tests/test_npdatetime.py:439: FutureWarning: In the future, 'NAT <= x' and 'x <= NAT' will always be False.
  self.assertPreciseEqual(le(a, b), expected)
ok
test_lt_ge (numba.tests.test_npdatetime.TestTimedeltaArithmetic) ... /home/graham/pypy/numba/numba/tests/test_npdatetime.py:410: FutureWarning: In the future, 'NAT >= x' and 'x >= NAT' will always be False.
  self.assertPreciseEqual(ge(a, b), not expected)
/home/graham/pypy/numba/numba/tests/test_npdatetime.py:409: FutureWarning: In the future, 'NAT < x' and 'x < NAT' will always be False.
  self.assertPreciseEqual(lt(a, b), expected)
ok
test_mul (numba.tests.test_npdatetime.TestTimedeltaArithmetic) ... ok
test_neg (numba.tests.test_npdatetime.TestTimedeltaArithmetic) ... ok
test_pos (numba.tests.test_npdatetime.TestTimedeltaArithmetic) ... ok
test_sub (numba.tests.test_npdatetime.TestTimedeltaArithmetic) ... ok
test_abs (numba.tests.test_npdatetime.TestTimedeltaArithmeticNoPython) ... ok
test_add (numba.tests.test_npdatetime.TestTimedeltaArithmeticNoPython) ... ok
test_div (numba.tests.test_npdatetime.TestTimedeltaArithmeticNoPython) ... ok
test_eq_ne (numba.tests.test_npdatetime.TestTimedeltaArithmeticNoPython) ... ok
test_homogenous_div (numba.tests.test_npdatetime.TestTimedeltaArithmeticNoPython) ... ok
test_le_gt (numba.tests.test_npdatetime.TestTimedeltaArithmeticNoPython) ... ok
test_lt_ge (numba.tests.test_npdatetime.TestTimedeltaArithmeticNoPython) ... ok
test_mul (numba.tests.test_npdatetime.TestTimedeltaArithmeticNoPython) ... ok
test_neg (numba.tests.test_npdatetime.TestTimedeltaArithmeticNoPython) ... ok
test_pos (numba.tests.test_npdatetime.TestTimedeltaArithmeticNoPython) ... ok
test_sub (numba.tests.test_npdatetime.TestTimedeltaArithmeticNoPython) ... ok
test_argsort_float (numba.tests.test_sort.TestNumpySort) ... ERROR
test_argsort_int (numba.tests.test_sort.TestNumpySort) ... ERROR
test_array_sort_float (numba.tests.test_sort.TestNumpySort) ... ERROR
test_array_sort_int (numba.tests.test_sort.TestNumpySort) ... ERROR
test_np_sort_float (numba.tests.test_sort.TestNumpySort) ... ERROR
test_np_sort_int (numba.tests.test_sort.TestNumpySort) ... ERROR
test_list_sort (numba.tests.test_sort.TestPythonSort) ... ERROR
test_list_sort_reverse (numba.tests.test_sort.TestPythonSort) ... ERROR
test_sorted (numba.tests.test_sort.TestPythonSort) ... ERROR
test_sorted_reverse (numba.tests.test_sort.TestPythonSort) ... ERROR
test_insertion_sort (numba.tests.test_sort.TestQuicksortArrays) ... ERROR
test_partition (numba.tests.test_sort.TestQuicksortArrays) ... ERROR
test_partition3 (numba.tests.test_sort.TestQuicksortArrays) ... ok
test_run_quicksort (numba.tests.test_sort.TestQuicksortArrays) ... ERROR
test_run_quicksort_lt (numba.tests.test_sort.TestQuicksortArrays) ... ERROR
test_insertion_sort (numba.tests.test_sort.TestQuicksortPurePython) ... ok
test_partition (numba.tests.test_sort.TestQuicksortPurePython) ... ok
test_partition3 (numba.tests.test_sort.TestQuicksortPurePython) ... ok
test_run_quicksort (numba.tests.test_sort.TestQuicksortPurePython) ... ok
test_run_quicksort_lt (numba.tests.test_sort.TestQuicksortPurePython) ... ok
test_binarysort (numba.tests.test_sort.TestTimsortArrays) ... ERROR
test_binarysort_with_values (numba.tests.test_sort.TestTimsortArrays) ... ERROR
test_count_run (numba.tests.test_sort.TestTimsortArrays) ... ERROR
test_gallop_left (numba.tests.test_sort.TestTimsortArrays) ... ERROR
test_gallop_right (numba.tests.test_sort.TestTimsortArrays) ... ERROR
test_merge_compute_minrun (numba.tests.test_sort.TestTimsortArrays) ... ERROR
test_merge_lo_hi (numba.tests.test_sort.TestTimsortArrays) ... ERROR
test_run_timsort (numba.tests.test_sort.TestTimsortArrays) ... ERROR
test_run_timsort_with_values (numba.tests.test_sort.TestTimsortArrays) ... ERROR
test_binarysort (numba.tests.test_sort.TestTimsortArraysPurePython) ... skipped 'PYPY FIXME... disabled as it seems to take a long time.'
test_binarysort_with_values (numba.tests.test_sort.TestTimsortArraysPurePython) ... skipped 'PYPY FIXME... disabled as it seems to take a long time.'
test_count_run (numba.tests.test_sort.TestTimsortArraysPurePython) ... skipped 'PYPY FIXME... disabled as it seems to take a long time.'
test_gallop_left (numba.tests.test_sort.TestTimsortArraysPurePython) ... skipped 'PYPY FIXME... disabled as it seems to take a long time.'
test_gallop_right (numba.tests.test_sort.TestTimsortArraysPurePython) ... skipped 'PYPY FIXME... disabled as it seems to take a long time.'
test_merge_at (numba.tests.test_sort.TestTimsortArraysPurePython) ... skipped 'PYPY FIXME... disabled as it seems to take a long time.'
test_merge_compute_minrun (numba.tests.test_sort.TestTimsortArraysPurePython) ... skipped 'PYPY FIXME... disabled as it seems to take a long time.'
test_merge_force_collapse (numba.tests.test_sort.TestTimsortArraysPurePython) ... skipped 'PYPY FIXME... disabled as it seems to take a long time.'
test_merge_lo_hi (numba.tests.test_sort.TestTimsortArraysPurePython) ... skipped 'PYPY FIXME... disabled as it seems to take a long time.'
test_run_timsort (numba.tests.test_sort.TestTimsortArraysPurePython) ... skipped 'PYPY FIXME... disabled as it seems to take a long time.'
test_run_timsort_with_values (numba.tests.test_sort.TestTimsortArraysPurePython) ... skipped 'PYPY FIXME... disabled as it seems to take a long time.'
test_binarysort (numba.tests.test_sort.TestTimsortPurePython) ... skipped 'PYPY FIXME... disabled as it seems to take a long time.'
test_binarysort_with_values (numba.tests.test_sort.TestTimsortPurePython) ... skipped 'PYPY FIXME... disabled as it seems to take a long time.'
test_count_run (numba.tests.test_sort.TestTimsortPurePython) ... skipped 'PYPY FIXME... disabled as it seems to take a long time.'
test_gallop_left (numba.tests.test_sort.TestTimsortPurePython) ... skipped 'PYPY FIXME... disabled as it seems to take a long time.'
test_gallop_right (numba.tests.test_sort.TestTimsortPurePython) ... skipped 'PYPY FIXME... disabled as it seems to take a long time.'
test_merge_at (numba.tests.test_sort.TestTimsortPurePython) ... skipped 'PYPY FIXME... disabled as it seems to take a long time.'
test_merge_compute_minrun (numba.tests.test_sort.TestTimsortPurePython) ... skipped 'PYPY FIXME... disabled as it seems to take a long time.'
test_merge_force_collapse (numba.tests.test_sort.TestTimsortPurePython) ... skipped 'PYPY FIXME... disabled as it seems to take a long time.'
test_merge_lo_hi (numba.tests.test_sort.TestTimsortPurePython) ... skipped 'PYPY FIXME... disabled as it seems to take a long time.'
test_run_timsort (numba.tests.test_sort.TestTimsortPurePython) ... skipped 'PYPY FIXME... disabled as it seems to take a long time.'
test_run_timsort_with_values (numba.tests.test_sort.TestTimsortPurePython) ... skipped 'PYPY FIXME... disabled as it seems to take a long time.'
test_array_return (numba.tests.test_array_return.TestArrayReturn) ... ok
test_array_return_start_with_loop (numba.tests.test_array_return.TestArrayReturn) ... ok
test_del_at_beginning_of_loop (numba.tests.test_nrt_refct.TestNrtRefCt) ... ok
test_escaping_var_init_in_loop (numba.tests.test_nrt_refct.TestNrtRefCt) ... ok
test_invalid_computation_of_lifetime (numba.tests.test_nrt_refct.TestNrtRefCt) ... FAIL
test_no_return (numba.tests.test_nrt_refct.TestNrtRefCt) ... ok
test_len (numba.tests.test_extending.TestHighLevelExtending) ... ERROR
test_no_cpython_wrapper (numba.tests.test_extending.TestHighLevelExtending) ... ok
test_print (numba.tests.test_extending.TestHighLevelExtending) ... ok
test_where (numba.tests.test_extending.TestHighLevelExtending) ... ok
test_deserialization (numba.tests.test_extending.TestIntrinsic) ... FAIL
test_ll_pointer_cast (numba.tests.test_extending.TestIntrinsic) ... skipped 'FIXME PYPY'
test_serialization (numba.tests.test_extending.TestIntrinsic) ... ok
test_cast_mydummy (numba.tests.test_extending.TestLowLevelExtending) ... ok
test_func1 (numba.tests.test_extending.TestLowLevelExtending) ... ok
test_func1_isolated (numba.tests.test_extending.TestLowLevelExtending) ... ok
test_index_get_data (numba.tests.test_extending.TestPandasLike) ... ok
test_index_getitem (numba.tests.test_extending.TestPandasLike) ... ok
test_index_is_monotonic (numba.tests.test_extending.TestPandasLike) ... ok
test_index_len (numba.tests.test_extending.TestPandasLike) ... ok
test_index_ufunc (numba.tests.test_extending.TestPandasLike) ... ok
test_series_clip (numba.tests.test_extending.TestPandasLike) ... ok
test_series_constructor (numba.tests.test_extending.TestPandasLike) ... ok
test_series_get_index (numba.tests.test_extending.TestPandasLike) ... ok
test_series_len (numba.tests.test_extending.TestPandasLike) ... ok
test_series_ufunc (numba.tests.test_extending.TestPandasLike) ... ok
test_identity (numba.tests.test_array_methods.TestArrayComparisons) ... ok
test_around_array (numba.tests.test_array_methods.TestArrayMethods) ... ok
test_around_scalar (numba.tests.test_array_methods.TestArrayMethods) ... ok
test_array_T (numba.tests.test_array_methods.TestArrayMethods) ... ERROR
test_array_astype (numba.tests.test_array_methods.TestArrayMethods) ... ERROR
test_array_copy (numba.tests.test_array_methods.TestArrayMethods) ... ERROR
test_array_nonzero (numba.tests.test_array_methods.TestArrayMethods) ... ERROR
test_array_sliced_view (numba.tests.test_array_methods.TestArrayMethods) ... ok
test_array_transpose (numba.tests.test_array_methods.TestArrayMethods) ... ERROR
test_array_view (numba.tests.test_array_methods.TestArrayMethods) ... FAIL
ERROR
test_item (numba.tests.test_array_methods.TestArrayMethods) ... ok
test_itemset (numba.tests.test_array_methods.TestArrayMethods) ... ok
test_np_asfortranarray (numba.tests.test_array_methods.TestArrayMethods) ... ERROR
test_np_copy (numba.tests.test_array_methods.TestArrayMethods) ... ERROR
test_np_frombuffer (numba.tests.test_array_methods.TestArrayMethods) ... ERROR
test_np_frombuffer_allocated (numba.tests.test_array_methods.TestArrayMethods) ... ERROR
test_np_frombuffer_dtype (numba.tests.test_array_methods.TestArrayMethods) ... ERROR
test_np_nonzero (numba.tests.test_array_methods.TestArrayMethods) ... ERROR
test_np_where_1 (numba.tests.test_array_methods.TestArrayMethods) ... ERROR
test_np_where_3 (numba.tests.test_array_methods.TestArrayMethods) ... ERROR
test_round_array (numba.tests.test_array_methods.TestArrayMethods) ... ok
test_round_scalar (numba.tests.test_array_methods.TestArrayMethods) ... ok
test_type_inference (numba.tests.test_vectorization_type_inference.TestVectTypeInfer)
This is testing numpy ufunc dispatch machinery ... ok
test_chained_unpack_assign (numba.tests.test_unpack_sequence.TestUnpack) ... ok
test_chained_unpack_assign_npm (numba.tests.test_unpack_sequence.TestUnpack) ... ok
test_conditional_swap (numba.tests.test_unpack_sequence.TestUnpack) ... ok
test_conditional_swap_npm (numba.tests.test_unpack_sequence.TestUnpack) ... ok
test_unpack_heterogenous_tuple (numba.tests.test_unpack_sequence.TestUnpack) ... ok
test_unpack_heterogenous_tuple_npm (numba.tests.test_unpack_sequence.TestUnpack) ... ok
test_unpack_list (numba.tests.test_unpack_sequence.TestUnpack) ... ok
test_unpack_nested_heterogenous_tuple (numba.tests.test_unpack_sequence.TestUnpack) ... ok
test_unpack_nested_heterogenous_tuple_npm (numba.tests.test_unpack_sequence.TestUnpack) ... ok
test_unpack_nrt (numba.tests.test_unpack_sequence.TestUnpack) ... ERROR
test_unpack_range (numba.tests.test_unpack_sequence.TestUnpack) ... ok
test_unpack_range_npm (numba.tests.test_unpack_sequence.TestUnpack) ... ok
test_unpack_range_too_large (numba.tests.test_unpack_sequence.TestUnpack) ... ok
test_unpack_range_too_large_npm (numba.tests.test_unpack_sequence.TestUnpack) ... ok
test_unpack_range_too_small (numba.tests.test_unpack_sequence.TestUnpack) ... ok
test_unpack_range_too_small_npm (numba.tests.test_unpack_sequence.TestUnpack) ... ok
test_unpack_shape (numba.tests.test_unpack_sequence.TestUnpack) ... ok
test_unpack_shape_npm (numba.tests.test_unpack_sequence.TestUnpack) ... ok
test_unpack_tuple (numba.tests.test_unpack_sequence.TestUnpack) ... ok
test_unpack_tuple_npm (numba.tests.test_unpack_sequence.TestUnpack) ... ok
test_unpack_tuple_of_arrays (numba.tests.test_unpack_sequence.TestUnpack) ... ok
test_unpack_tuple_too_large (numba.tests.test_unpack_sequence.TestUnpack) ... ok
test_unpack_tuple_too_large_npm (numba.tests.test_unpack_sequence.TestUnpack) ... ok
test_unpack_tuple_too_small (numba.tests.test_unpack_sequence.TestUnpack) ... ok
test_unpack_tuple_too_small_npm (numba.tests.test_unpack_sequence.TestUnpack) ... ok
test_add_axis1 (numba.tests.test_array_manipulation.TestArrayManipulation) ... ok
test_add_axis1_npm (numba.tests.test_array_manipulation.TestArrayManipulation) ... ok
test_add_axis2 (numba.tests.test_array_manipulation.TestArrayManipulation) ... ok
test_add_axis2_npm (numba.tests.test_array_manipulation.TestArrayManipulation) ... ok
test_array_reshape (numba.tests.test_array_manipulation.TestArrayManipulation) ... FAIL
ERROR
test_as_strided (numba.tests.test_array_manipulation.TestArrayManipulation) ... ERROR
test_bad_float_index_npm (numba.tests.test_array_manipulation.TestArrayManipulation) ... ok
test_bad_index_npm (numba.tests.test_array_manipulation.TestArrayManipulation) ... ok
test_flatten_array (numba.tests.test_array_manipulation.TestArrayManipulation) ... ok
test_flatten_array_npm (numba.tests.test_array_manipulation.TestArrayManipulation) ... ERROR
test_ravel_array (numba.tests.test_array_manipulation.TestArrayManipulation) ... ok
test_ravel_array_npm (numba.tests.test_array_manipulation.TestArrayManipulation) ... ERROR
test_ravel_array_size (numba.tests.test_array_manipulation.TestArrayManipulation) ... ok
test_ravel_array_size_npm (numba.tests.test_array_manipulation.TestArrayManipulation) ... ok
test_squeeze_array (numba.tests.test_array_manipulation.TestArrayManipulation) ... ok
test_squeeze_array_npm (numba.tests.test_array_manipulation.TestArrayManipulation) ... ok
test_transpose_array (numba.tests.test_array_manipulation.TestArrayManipulation) ... ok
test_transpose_array_npm (numba.tests.test_array_manipulation.TestArrayManipulation) ... ERROR
test_1d_integer_indexing (numba.tests.test_indexing.TestGetItem) ... ok
test_1d_integer_indexing_npm (numba.tests.test_indexing.TestGetItem) ... ok
test_1d_slicing (numba.tests.test_indexing.TestGetItem) ... ok
test_1d_slicing2 (numba.tests.test_indexing.TestGetItem) ... ok
test_1d_slicing2_npm (numba.tests.test_indexing.TestGetItem) ... ok
test_1d_slicing3 (numba.tests.test_indexing.TestGetItem) ... ok
test_1d_slicing3_npm (numba.tests.test_indexing.TestGetItem) ... ok
test_1d_slicing4 (numba.tests.test_indexing.TestGetItem) ... ok
test_1d_slicing4_npm (numba.tests.test_indexing.TestGetItem) ... ok
test_1d_slicing5 (numba.tests.test_indexing.TestGetItem) ... ok
test_1d_slicing5_npm (numba.tests.test_indexing.TestGetItem) ... ok
test_1d_slicing6 (numba.tests.test_indexing.TestGetItem) ... ok
test_1d_slicing6_npm (numba.tests.test_indexing.TestGetItem) ... ok
test_1d_slicing7 (numba.tests.test_indexing.TestGetItem) ... ok
test_1d_slicing7_npm (numba.tests.test_indexing.TestGetItem) ... ok
test_1d_slicing8 (numba.tests.test_indexing.TestGetItem) ... ok
test_1d_slicing8_npm (numba.tests.test_indexing.TestGetItem) ... ok
test_1d_slicing_npm (numba.tests.test_indexing.TestGetItem) ... ok
test_2d_float_indexing (numba.tests.test_indexing.TestGetItem) ... ok
test_2d_integer_indexing (numba.tests.test_indexing.TestGetItem) ... ok
test_2d_integer_indexing2 (numba.tests.test_indexing.TestGetItem) ... ok
test_2d_integer_indexing_npm (numba.tests.test_indexing.TestGetItem) ... ok
test_2d_integer_indexing_via_call (numba.tests.test_indexing.TestGetItem) ... ok
test_2d_slicing (numba.tests.test_indexing.TestGetItem) ... ok
test_2d_slicing2 (numba.tests.test_indexing.TestGetItem) ... ok
test_2d_slicing2_npm (numba.tests.test_indexing.TestGetItem) ... ok
test_2d_slicing3 (numba.tests.test_indexing.TestGetItem) ... ok
test_2d_slicing3_npm (numba.tests.test_indexing.TestGetItem) ... ok
test_2d_slicing_npm (numba.tests.test_indexing.TestGetItem) ... ok
test_3d_slicing (numba.tests.test_indexing.TestGetItem) ... ok
test_3d_slicing2 (numba.tests.test_indexing.TestGetItem) ... ok
test_3d_slicing2_npm (numba.tests.test_indexing.TestGetItem) ... ok
test_3d_slicing_npm (numba.tests.test_indexing.TestGetItem) ... ok
test_ellipsis1 (numba.tests.test_indexing.TestGetItem) ... ok
test_ellipsis1_npm (numba.tests.test_indexing.TestGetItem) ... ok
test_ellipsis2 (numba.tests.test_indexing.TestGetItem) ... ok
test_ellipsis2_npm (numba.tests.test_indexing.TestGetItem) ... ok
test_ellipsis3 (numba.tests.test_indexing.TestGetItem) ... ok
test_ellipsis3_npm (numba.tests.test_indexing.TestGetItem) ... ok
test_ellipsis_issue1498 (numba.tests.test_indexing.TestGetItem) ... ok
test_ellipsis_issue1499 (numba.tests.test_indexing.TestGetItem) ... ok
test_empty_tuple_indexing (numba.tests.test_indexing.TestGetItem) ... ok
test_empty_tuple_indexing_npm (numba.tests.test_indexing.TestGetItem) ... ok
test_integer_indexing_1d_for_2d (numba.tests.test_indexing.TestGetItem) ... ok
test_integer_indexing_1d_for_2d_npm (numba.tests.test_indexing.TestGetItem) ... ok
test_none_index (numba.tests.test_indexing.TestGetItem) ... ok
test_none_index_npm (numba.tests.test_indexing.TestGetItem) ... ok
test_partial_1d_indexing (numba.tests.test_indexing.TestGetItem) ... ok
test_1d_slicing_add (numba.tests.test_indexing.TestSetItem) ... ok
test_1d_slicing_add_npm (numba.tests.test_indexing.TestSetItem) ... ok
test_1d_slicing_broadcast (numba.tests.test_indexing.TestSetItem) ... ok
test_1d_slicing_broadcast_npm (numba.tests.test_indexing.TestSetItem) ... ok
test_1d_slicing_set (numba.tests.test_indexing.TestSetItem) ... ok
test_1d_slicing_set_list (numba.tests.test_indexing.TestSetItem) ... ok
test_1d_slicing_set_list_npm (numba.tests.test_indexing.TestSetItem) ... ERROR
test_1d_slicing_set_npm (numba.tests.test_indexing.TestSetItem) ... ok
test_1d_slicing_set_tuple (numba.tests.test_indexing.TestSetItem) ... ok
test_1d_slicing_set_tuple_npm (numba.tests.test_indexing.TestSetItem) ... ok
test_2d_slicing_broadcast (numba.tests.test_indexing.TestSetItem) ... ok
test_2d_slicing_broadcast_npm (numba.tests.test_indexing.TestSetItem) ... ok
test_2d_slicing_set (numba.tests.test_indexing.TestSetItem) ... ok
test_2d_slicing_set_npm (numba.tests.test_indexing.TestSetItem) ... ok
test_conversion_setitem (numba.tests.test_indexing.TestSetItem)
this used to work, and was used in one of the tutorials ... ok
test_setitem (numba.tests.test_indexing.TestSetItem) ... ok
test_setitem_readonly (numba.tests.test_indexing.TestSetItem) ... ok
test_layout (numba.tests.test_indexing.TestTyping) ... ok
test_chain1 (numba.tests.test_chained_assign.TestChainedAssign) ... ERROR
test_chain2 (numba.tests.test_chained_assign.TestChainedAssign) ... ok
test_chain3 (numba.tests.test_chained_assign.TestChainedAssign) ... ok
test_unpack1 (numba.tests.test_chained_assign.TestChainedAssign) ... ok
test_unpack2 (numba.tests.test_chained_assign.TestChainedAssign) ... ok
test_unpack3 (numba.tests.test_chained_assign.TestChainedAssign) ... ok
test_unpack4 (numba.tests.test_chained_assign.TestChainedAssign) ... ok
test_unpack5 (numba.tests.test_chained_assign.TestChainedAssign) ... ok
test_unpack6 (numba.tests.test_chained_assign.TestChainedAssign) ... ok
test_global_complex_arr (numba.tests.test_globals.TestGlobals) ... ERROR
test_global_complex_arr_npm (numba.tests.test_globals.TestGlobals) ... ok
test_global_module (numba.tests.test_globals.TestGlobals) ... ok
test_global_ndarray (numba.tests.test_globals.TestGlobals) ... ERROR
test_global_ndarray_npm (numba.tests.test_globals.TestGlobals) ... ok
test_global_rec_arr (numba.tests.test_globals.TestGlobals) ... ERROR
test_global_rec_arr_extract (numba.tests.test_globals.TestGlobals) ... skipped 'PYPY FIXME (error in cpy compat layer)'
test_global_rec_arr_extract_npm (numba.tests.test_globals.TestGlobals) ... ERROR
test_global_rec_arr_npm (numba.tests.test_globals.TestGlobals) ... ERROR
test_global_record (numba.tests.test_globals.TestGlobals) ... ERROR
test_two_global_rec_arrs (numba.tests.test_globals.TestGlobals) ... ERROR
test_two_global_rec_arrs_npm (numba.tests.test_globals.TestGlobals) ... ERROR
test_bool (numba.tests.test_hashing.TestNumberHashing) ... ok
test_complex (numba.tests.test_hashing.TestNumberHashing) ... /home/graham/pypy/numba/numba/tests/test_hashing.py:83: RuntimeWarning: invalid value encountered in multiply
  a = real + typ(1j) * imag
ok
test_floats (numba.tests.test_hashing.TestNumberHashing) ... ok
test_ints (numba.tests.test_hashing.TestNumberHashing) ... ok
test_heterogenous_tuples (numba.tests.test_hashing.TestTupleHashing) ... ok
test_homogenous_tuples (numba.tests.test_hashing.TestTupleHashing) ... ok
test_del_list_item_func (numba.tests.test_del.TestLists) ... ok
test_del_ref_func (numba.tests.test_del.TestLists) ... ok
test_print_array_item (numba.tests.test_print.TestPrint) ... ok
test_print_empty (numba.tests.test_print.TestPrint) ... ok
test_print_multiple_values (numba.tests.test_print.TestPrint) ... ok
test_print_nogil (numba.tests.test_print.TestPrint) ... ok
test_print_strings (numba.tests.test_print.TestPrint) ... ok
test_print_values (numba.tests.test_print.TestPrint) ... ERROR
test_print_vararg (numba.tests.test_print.TestPrint) ... ok
test_unsupported_array_dtype (numba.tests.test_typingerror.TestArgumentTypingError) ... ok
test_unsupported_type (numba.tests.test_typingerror.TestArgumentTypingError) ... ok
test_readonly_array (numba.tests.test_typingerror.TestCallError) ... ok
test_bad_hypot_usage (numba.tests.test_typingerror.TestTypingError) ... ok
test_imprecise_list (numba.tests.test_typingerror.TestTypingError) ... ok
test_issue_868 (numba.tests.test_typingerror.TestTypingError) ... ok
test_return_type_unification (numba.tests.test_typingerror.TestTypingError) ... ok
test_unknown_attrs (numba.tests.test_typingerror.TestTypingError) ... ok
test_unknown_function (numba.tests.test_typingerror.TestTypingError) ... ok
test_unknown_module (numba.tests.test_typingerror.TestTypingError) ... ok
test_conversions (numba.tests.test_tuples.TestConversions) ... ok
test_bool (numba.tests.test_tuples.TestNamedTuple) ... ok
test_construct (numba.tests.test_tuples.TestNamedTuple) ... ok
test_eq (numba.tests.test_tuples.TestNamedTuple) ... ok
test_ge (numba.tests.test_tuples.TestNamedTuple) ... ok
test_getattr (numba.tests.test_tuples.TestNamedTuple) ... ok
test_gt (numba.tests.test_tuples.TestNamedTuple) ... ok
test_index (numba.tests.test_tuples.TestNamedTuple) ... ok
test_le (numba.tests.test_tuples.TestNamedTuple) ... ok
test_len (numba.tests.test_tuples.TestNamedTuple) ... ok
test_lt (numba.tests.test_tuples.TestNamedTuple) ... ok
test_ne (numba.tests.test_tuples.TestNamedTuple) ... ok
test_type (numba.tests.test_tuples.TestNamedTuple) ... ok
test_unpack (numba.tests.test_tuples.TestNamedTuple) ... ok
test_return (numba.tests.test_tuples.TestNamedTupleNRT) ... ok
test_add (numba.tests.test_tuples.TestOperations) ... ok
test_bool (numba.tests.test_tuples.TestOperations) ... ok
test_eq (numba.tests.test_tuples.TestOperations) ... ok
test_ge (numba.tests.test_tuples.TestOperations) ... ok
test_gt (numba.tests.test_tuples.TestOperations) ... ok
test_in (numba.tests.test_tuples.TestOperations) ... ok
test_index (numba.tests.test_tuples.TestOperations) ... ok
test_le (numba.tests.test_tuples.TestOperations) ... ok
test_len (numba.tests.test_tuples.TestOperations) ... ok
test_lt (numba.tests.test_tuples.TestOperations) ... ok
test_ne (numba.tests.test_tuples.TestOperations) ... ok
test_slice2 (numba.tests.test_tuples.TestOperations) ... ok
test_slice3 (numba.tests.test_tuples.TestOperations) ... ok
test_tuple_add (numba.tests.test_tuples.TestTupleNRT) ... ok
test_hetero_tuple (numba.tests.test_tuples.TestTuplePassing) ... ok
test_size_mismatch (numba.tests.test_tuples.TestTuplePassing) ... skipped 'PYPY FIXME: Mysterious interpeter death. Whodunnit?'
test_unituple (numba.tests.test_tuples.TestTuplePassing) ... ok
test_array_tuple (numba.tests.test_tuples.TestTupleReturn) ... ok
test_hetero_tuple (numba.tests.test_tuples.TestTupleReturn) ... ok
test_scalar_tuple (numba.tests.test_tuples.TestTupleReturn) ... ok
test_numba_module (numba.tests.test_api.TestNumbaModule) ... ok
test_float32_to_float64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_float32_to_int16 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_float32_to_int32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_float32_to_int64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_float32_to_int8 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_float32_to_uint16 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_float32_to_uint32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_float32_to_uint64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_float32_to_uint8 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_float64_to_float32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_float64_to_int16 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_float64_to_int32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_float64_to_int64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_float64_to_int8 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_float64_to_uint16 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_float64_to_uint32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_float64_to_uint64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_float64_to_uint8 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int16_to_float32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int16_to_float64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int16_to_int32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int16_to_int64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int16_to_int8 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int16_to_uint16 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int16_to_uint32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int16_to_uint64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int16_to_uint8 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int32_to_float32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int32_to_float64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int32_to_int16 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int32_to_int64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int32_to_int8 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int32_to_uint16 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int32_to_uint32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int32_to_uint64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int32_to_uint8 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int64_to_float32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int64_to_float64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int64_to_int16 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int64_to_int32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int64_to_int8 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int64_to_uint16 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int64_to_uint32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int64_to_uint64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int64_to_uint8 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int8_to_float32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int8_to_float64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int8_to_int16 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int8_to_int32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int8_to_int64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int8_to_uint16 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int8_to_uint32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int8_to_uint64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_int8_to_uint8 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint16_to_float32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint16_to_float64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint16_to_int16 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint16_to_int32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint16_to_int64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint16_to_int8 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint16_to_uint32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint16_to_uint64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint16_to_uint8 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint32_to_float32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint32_to_float64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint32_to_int16 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint32_to_int32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint32_to_int64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint32_to_int8 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint32_to_uint16 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint32_to_uint64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint32_to_uint8 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint64_to_float32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint64_to_float64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint64_to_int16 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint64_to_int32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint64_to_int64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint64_to_int8 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint64_to_uint16 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint64_to_uint32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint64_to_uint8 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint8_to_float32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint8_to_float64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint8_to_int16 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint8_to_int32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint8_to_int64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint8_to_int8 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint8_to_uint16 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint8_to_uint32 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_uint8_to_uint64 (numba.tests.test_numconv.TestNumberConversion) ... ok
test_carray (numba.tests.test_cfunc.TestCArray) ... ERROR
test_farray (numba.tests.test_cfunc.TestCArray) ... ERROR
test_numba_carray (numba.tests.test_cfunc.TestCArray) ... ERROR
test_numba_farray (numba.tests.test_cfunc.TestCArray) ... ERROR
test_basic (numba.tests.test_cfunc.TestCFunc) ... ok
test_cffi (numba.tests.test_cfunc.TestCFunc) ... ok
test_errors (numba.tests.test_cfunc.TestCFunc) ... ok
test_llvm_ir (numba.tests.test_cfunc.TestCFunc) ... ok
test_locals (numba.tests.test_cfunc.TestCFunc) ... ok
test_object_mode (numba.tests.test_cfunc.TestCFunc) ... ok
test_caching (numba.tests.test_cfunc.TestCFuncCache) ... ok
test_multi3 (numba.tests.test_multi3.TestMulti3) ... ok
test_jit_function_code_object (numba.tests.test_func_interface.TestFuncInterface) ... ok
test_jit_function_docstring (numba.tests.test_func_interface.TestFuncInterface) ... ok
test_jit_function_module (numba.tests.test_func_interface.TestFuncInterface) ... ok
test_jit_function_name (numba.tests.test_func_interface.TestFuncInterface) ... ok
test_acquire_release (numba.tests.test_utils.TestNonReentrantLock) ... ok
test_multithreaded (numba.tests.test_utils.TestNonReentrantLock) ... ok
test_with (numba.tests.test_utils.TestNonReentrantLock) ... ok
test_is_inherited (numba.tests.test_utils.TestTotalOrdering) ... ok
test_total_ordering (numba.tests.test_utils.TestTotalOrdering) ... ok
test_total_ordering_derived (numba.tests.test_utils.TestTotalOrdering) ... ok
test_build_map (numba.tests.test_dicts.DictTestCase) ... ok
test_build_map_from_local_vars (numba.tests.test_dicts.DictTestCase) ... ok
test_getitem (numba.tests.test_buffer_protocol.TestBufferProtocol) ... ERROR
test_getslice (numba.tests.test_buffer_protocol.TestBufferProtocol) ... ok
test_iter (numba.tests.test_buffer_protocol.TestBufferProtocol) ... ERROR
test_len (numba.tests.test_buffer_protocol.TestBufferProtocol) ... ERROR
test_setitem (numba.tests.test_buffer_protocol.TestBufferProtocol) ... ERROR
test_contiguous (numba.tests.test_buffer_protocol.TestMemoryView) ... skipped "memoryview.*contiguous doesn't exist on 2.7"
test_itemsize (numba.tests.test_buffer_protocol.TestMemoryView) ... ERROR
test_nbytes (numba.tests.test_buffer_protocol.TestMemoryView) ... ERROR
test_ndim (numba.tests.test_buffer_protocol.TestMemoryView) ... ERROR
test_readonly (numba.tests.test_buffer_protocol.TestMemoryView) ... ERROR
test_shape (numba.tests.test_buffer_protocol.TestMemoryView) ... ERROR
test_strides (numba.tests.test_buffer_protocol.TestMemoryView) ... ERROR
test_unique (numba.tests.test_sets.TestExamples) ... skipped 'PYPY FIXME - annoyingly slow'
test_constructor (numba.tests.test_sets.TestFloatSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_iterator (numba.tests.test_sets.TestFloatSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_update (numba.tests.test_sets.TestFloatSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_build_heterogenous_set (numba.tests.test_sets.TestSetLiterals) ... skipped 'PYPY FIXME - annoyingly slow'
test_build_set (numba.tests.test_sets.TestSetLiterals) ... skipped 'PYPY FIXME - annoyingly slow'
test_build_set_nopython (numba.tests.test_sets.TestSetLiterals) ... skipped 'PYPY FIXME - annoyingly slow'
test_reflect_clean (numba.tests.test_sets.TestSetReflection) ... skipped 'PYPY FIXME - some set code disabled due to missing C API?'
test_reflect_conditional (numba.tests.test_sets.TestSetReflection) ... skipped 'PYPY FIXME - some set code disabled due to missing C API?'
test_reflect_exception (numba.tests.test_sets.TestSetReflection) ... skipped 'PYPY FIXME - some set code disabled due to missing C API?'
test_reflect_same_set (numba.tests.test_sets.TestSetReflection) ... skipped 'PYPY FIXME - some set code disabled due to missing C API?'
test_reflect_simple (numba.tests.test_sets.TestSetReflection) ... skipped 'PYPY FIXME - some set code disabled due to missing C API?'
test_add_discard (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_and (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_clear (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_constructor (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_contains (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_copy (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_difference (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_difference_update (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_discard (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_eq (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_ge (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_gt (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_iand (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_intersection (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_intersection_update (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_ior (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_isdisjoint (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_issubset (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_issuperset (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_isub (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_iterator (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_ixor (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_le (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_lt (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_ne (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_or (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_pop (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_remove (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_remove_error (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_set_return (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_sub (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_symmetric_difference (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_symmetric_difference_update (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_union (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_update (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_xor (numba.tests.test_sets.TestSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_constructor (numba.tests.test_sets.TestTupleSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_iterator (numba.tests.test_sets.TestTupleSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_update (numba.tests.test_sets.TestTupleSets) ... skipped 'PYPY FIXME - annoyingly slow'
test_errors (numba.tests.test_sets.TestUnboxing) ... skipped 'PYPY FIXME - Mysterious interpreter death'
test_numbers (numba.tests.test_sets.TestUnboxing) ... skipped 'PYPY FIXME - Mysterious interpreter death'
test_set_inside_tuple (numba.tests.test_sets.TestUnboxing) ... skipped 'PYPY FIXME - Mysterious interpreter death'
test_set_of_tuples_inside_tuple (numba.tests.test_sets.TestUnboxing) ... skipped 'PYPY FIXME - Mysterious interpreter death'
test_tuples (numba.tests.test_sets.TestUnboxing) ... skipped 'PYPY FIXME - Mysterious interpreter death'
test_array_of_object (numba.tests.test_object_mode.TestObjectMode) ... ok
test_complex_constant (numba.tests.test_object_mode.TestObjectMode) ... ok
test_delitem (numba.tests.test_object_mode.TestObjectMode) ... ok
test_long_constant (numba.tests.test_object_mode.TestObjectMode) ... ok
test_loop_nest (numba.tests.test_object_mode.TestObjectMode) ... ok
test_sequence_contains (numba.tests.test_object_mode.TestObjectMode) ... ok
test_IRScope (numba.tests.test_ir.TestIR) ... ok
test_var_propagate1 (numba.tests.test_ir.TestIRDump) ... ok
test_var_swapping (numba.tests.test_ir.TestIRDump) ... FAIL
test_add (numba.tests.test_wrapper.TestWrapper) ... ok
test_array_overhead (numba.tests.test_wrapper.TestWrapper) ... ok
test_overhead (numba.tests.test_wrapper.TestWrapper) ... ok
test_from_buffer_error (numba.tests.test_cffi.TestCFFI) ... FAIL
test_from_buffer_float32 (numba.tests.test_cffi.TestCFFI) ... ERROR
test_from_buffer_float64 (numba.tests.test_cffi.TestCFFI) ... ERROR
test_from_buffer_pyarray (numba.tests.test_cffi.TestCFFI) ... skipped 'buffer protocol on array.array needs Python 3+'
test_from_buffer_struct (numba.tests.test_cffi.TestCFFI) ... ERROR
test_function_pointer (numba.tests.test_cffi.TestCFFI) ... ERROR
test_sin_function (numba.tests.test_cffi.TestCFFI) ... ok
test_sin_function_npm (numba.tests.test_cffi.TestCFFI) ... ok
test_sin_function_npm_ool (numba.tests.test_cffi.TestCFFI) ... ERROR
test_sin_function_ool (numba.tests.test_cffi.TestCFFI) ... ok
test_two_funcs (numba.tests.test_cffi.TestCFFI) ... ok
test_two_funcs_ool (numba.tests.test_cffi.TestCFFI) ... ok
test_type_map (numba.tests.test_cffi.TestCFFI) ... ok
test_user_defined_symbols (numba.tests.test_cffi.TestCFFI) ... ERROR
test_lift1 (numba.tests.test_looplifting.TestLoopLifting) ... skipped 'PYPY FIXME - CPY internal error'
test_lift2 (numba.tests.test_looplifting.TestLoopLifting) ... skipped 'PYPY FIXME - CPY internal error'
test_lift3 (numba.tests.test_looplifting.TestLoopLifting) ... skipped 'PYPY FIXME - CPY internal error'
test_lift4 (numba.tests.test_looplifting.TestLoopLifting) ... skipped 'PYPY FIXME - CPY internal error'
test_lift5 (numba.tests.test_looplifting.TestLoopLifting) ... skipped 'PYPY FIXME - CPY internal error'
test_lift_gen1 (numba.tests.test_looplifting.TestLoopLifting) ... skipped 'PYPY FIXME - CPY internal error'
test_reject1 (numba.tests.test_looplifting.TestLoopLifting) ... skipped 'PYPY FIXME - CPY internal error'
test_reject_gen1 (numba.tests.test_looplifting.TestLoopLifting) ... skipped 'PYPY FIXME - CPY internal error'
test_reject_gen2 (numba.tests.test_looplifting.TestLoopLifting) ... skipped 'PYPY FIXME - CPY internal error'
test_reject_npm1 (numba.tests.test_looplifting.TestLoopLifting) ... skipped 'PYPY FIXME - CPY internal error'
test_annotate_1 (numba.tests.test_looplifting.TestLoopLiftingAnnotate) ... skipped 'PYPY FIXME - CPY internal error'
test_annotate_2 (numba.tests.test_looplifting.TestLoopLiftingAnnotate) ... skipped 'PYPY FIXME - CPY internal error'
test_conditionally_defined_in_loop (numba.tests.test_looplifting.TestLoopLiftingInAction) ... skipped 'PYPY FIXME - CPY internal error'
test_invalid_argument (numba.tests.test_looplifting.TestLoopLiftingInAction)
Test a problem caused by invalid discovery of loop argument ... skipped 'PYPY FIXME - CPY internal error'
test_issue_734 (numba.tests.test_looplifting.TestLoopLiftingInAction) ... skipped 'PYPY FIXME - CPY internal error'
test_issue_812 (numba.tests.test_looplifting.TestLoopLiftingInAction) ... skipped 'PYPY FIXME - CPY internal error'
test_no_iteration (numba.tests.test_looplifting.TestLoopLiftingInAction) ... skipped 'PYPY FIXME - CPY internal error'
test_stack_offset_error_when_has_no_return (numba.tests.test_looplifting.TestLoopLiftingInAction) ... skipped 'PYPY FIXME - CPY internal error'
test_array_flat_3d (numba.tests.test_array_iterators.TestArrayIterators) ... ok
test_array_flat_empty (numba.tests.test_array_iterators.TestArrayIterators) ... ok
test_array_flat_getitem (numba.tests.test_array_iterators.TestArrayIterators) ... ok
test_array_flat_len (numba.tests.test_array_iterators.TestArrayIterators) ... ok
test_array_flat_setitem (numba.tests.test_array_iterators.TestArrayIterators) ... ok
test_array_iter (numba.tests.test_array_iterators.TestArrayIterators) ... ok
test_array_ndenumerate_2d (numba.tests.test_array_iterators.TestArrayIterators) ... ok
test_array_ndenumerate_empty (numba.tests.test_array_iterators.TestArrayIterators) ... ok
test_array_view_iter (numba.tests.test_array_iterators.TestArrayIterators) ... ok
test_iter_next (numba.tests.test_array_iterators.TestArrayIterators) ... ok
test_np_ndindex (numba.tests.test_array_iterators.TestArrayIterators) ... ok
test_np_ndindex_array (numba.tests.test_array_iterators.TestArrayIterators) ... ok
test_np_ndindex_empty (numba.tests.test_array_iterators.TestArrayIterators) ... ok
test_errors (numba.tests.test_array_iterators.TestNdIter) ... ok
test_nditer1 (numba.tests.test_array_iterators.TestNdIter) ... ok
test_nditer2 (numba.tests.test_array_iterators.TestNdIter) ... ok
test_nditer3 (numba.tests.test_array_iterators.TestNdIter) ... ok
test_interface (numba.tests.test_smart_array.TestInterface) ... ok
test_astype (numba.tests.test_smart_array.TestJIT) ... ok
test_getitem (numba.tests.test_smart_array.TestJIT) ... ok
test_identity (numba.tests.test_smart_array.TestJIT) ... ok
test_len (numba.tests.test_smart_array.TestJIT) ... ok
test_shape (numba.tests.test_smart_array.TestJIT) ... ok
test_ufunc (numba.tests.test_smart_array.TestJIT) ... ok
test_module_func (numba.tests.test_return_values.TestReturnValues) ... ok
test_module_func_npm (numba.tests.test_return_values.TestReturnValues) ... ok
test_nopython_func (numba.tests.test_return_values.TestReturnValues) ... ok
test_nopython_func_npm (numba.tests.test_return_values.TestReturnValues) ... ok
test_pyobj_func (numba.tests.test_return_values.TestReturnValues) ... ok
test_pyobj_func_npm (numba.tests.test_return_values.TestReturnValues) ... ok
test_mandelbrot (numba.tests.test_mandelbrot.TestMandelbrot) ... ok
test_a_is_b_intp (numba.tests.test_optional.TestOptional) ... ok
test_a_is_not_b_intp (numba.tests.test_optional.TestOptional) ... ok
test_assign_to_optional (numba.tests.test_optional.TestOptional) ... ok
test_is_this_a_none (numba.tests.test_optional.TestOptional) ... ok
test_is_this_a_none_objmode (numba.tests.test_optional.TestOptional) ... ok
test_optional_array (numba.tests.test_optional.TestOptional) ... ok
test_optional_array_attribute (numba.tests.test_optional.TestOptional) ... ok
test_optional_array_error (numba.tests.test_optional.TestOptional) ... ok
test_optional_float (numba.tests.test_optional.TestOptional) ... ok
test_optional_thru_omitted_arg (numba.tests.test_optional.TestOptional) ... ok
test_return_bool_optional_or_none (numba.tests.test_optional.TestOptional) ... ok
test_return_different_statement (numba.tests.test_optional.TestOptional) ... ok
test_return_double_or_none (numba.tests.test_optional.TestOptional) ... ok
test_annotations (numba.tests.test_jitclasses.TestJitClass) ... skipped 'Python 3-specific test'
test_base_class (numba.tests.test_jitclasses.TestJitClass) ... ERROR
test_c_structure (numba.tests.test_jitclasses.TestJitClass) ... ERROR
test_deferred_type (numba.tests.test_jitclasses.TestJitClass) ... ERROR
test_distinct_classes (numba.tests.test_jitclasses.TestJitClass) ... ERROR
test_docstring (numba.tests.test_jitclasses.TestJitClass) ... ERROR
test_globals (numba.tests.test_jitclasses.TestJitClass) ... FAIL
test_is (numba.tests.test_jitclasses.TestJitClass) ... ERROR
test_isinstance (numba.tests.test_jitclasses.TestJitClass) ... ERROR
test_jit_class_1 (numba.tests.test_jitclasses.TestJitClass) ... ERROR
test_jitclass_datalayout (numba.tests.test_jitclasses.TestJitClass) ... ERROR
test_jitclass_usage_from_python (numba.tests.test_jitclasses.TestJitClass) ... ERROR
test_list_spec (numba.tests.test_jitclasses.TestJitClass) ... ERROR
test_name_shadowing_error (numba.tests.test_jitclasses.TestJitClass) ... ok
test_ordereddict_spec (numba.tests.test_jitclasses.TestJitClass) ... ERROR
test_parameterized (numba.tests.test_jitclasses.TestJitClass) ... ERROR
test_protected_attrs (numba.tests.test_jitclasses.TestJitClass) ... ERROR
test_spec_errors (numba.tests.test_jitclasses.TestJitClass) ... ok
test_subclassing (numba.tests.test_jitclasses.TestJitClass) ... ERROR
test_user_deleter_error (numba.tests.test_jitclasses.TestJitClass) ... FAIL
test_user_getter_setter (numba.tests.test_jitclasses.TestJitClass) ... ERROR
test_get_set_state (numba.tests.test_random.TestInternals) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_init (numba.tests.test_random.TestInternals) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_perturb (numba.tests.test_random.TestInternals) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_shuffle (numba.tests.test_random.TestInternals) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_np_implicit_initialization (numba.tests.test_random.TestProcesses) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_py_implicit_initialization (numba.tests.test_random.TestProcesses) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_independent_generators (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_beta (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_binomial (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_chisquare (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_exponential (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_f (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_gamma (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_gauss_startup (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_geometric (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_gumbel (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_hypergeometric (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_laplace (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_logistic (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_lognormal (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_logseries (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_negative_binomial (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_normal (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_pareto (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_poisson (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_power (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_randint (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_randn (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_random (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_random_startup (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_rayleigh (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_shuffle (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_standard_cauchy (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_standard_exponential (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_standard_normal (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_standard_t (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_triangular (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_uniform (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_vonmises (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_wald (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_weibull (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_zipf (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_random_betavariate (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_random_expovariate (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_random_gammavariate (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_random_gauss (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_random_gauss_startup (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_random_getrandbits (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_random_lognormvariate (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_random_normalvariate (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_random_paretovariate (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_random_randint (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_random_random (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_random_random_startup (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_random_randrange (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_random_shuffle (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_random_triangular (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_random_uniform (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_random_vonmisesvariate (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_random_weibullvariate (numba.tests.test_random.TestRandom) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_binomial (numba.tests.test_random.TestRandomArrays) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_exponential (numba.tests.test_random.TestRandomArrays) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_gumbel (numba.tests.test_random.TestRandomArrays) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_laplace (numba.tests.test_random.TestRandomArrays) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_logistic (numba.tests.test_random.TestRandomArrays) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_lognormal (numba.tests.test_random.TestRandomArrays) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_logseries (numba.tests.test_random.TestRandomArrays) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_normal (numba.tests.test_random.TestRandomArrays) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_poisson (numba.tests.test_random.TestRandomArrays) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_power (numba.tests.test_random.TestRandomArrays) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_rand (numba.tests.test_random.TestRandomArrays) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_randint (numba.tests.test_random.TestRandomArrays) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_randn (numba.tests.test_random.TestRandomArrays) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_random_random (numba.tests.test_random.TestRandomArrays) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_rayleigh (numba.tests.test_random.TestRandomArrays) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_standard_cauchy (numba.tests.test_random.TestRandomArrays) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_standard_exponential (numba.tests.test_random.TestRandomArrays) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_standard_normal (numba.tests.test_random.TestRandomArrays) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_uniform (numba.tests.test_random.TestRandomArrays) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_wald (numba.tests.test_random.TestRandomArrays) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_numpy_zipf (numba.tests.test_random.TestRandomArrays) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_choice_array_1 (numba.tests.test_random.TestRandomChoice) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_choice_array_2 (numba.tests.test_random.TestRandomChoice) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_choice_array_3 (numba.tests.test_random.TestRandomChoice) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_choice_scalar_1 (numba.tests.test_random.TestRandomChoice) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_choice_scalar_2 (numba.tests.test_random.TestRandomChoice) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_choice_scalar_3 (numba.tests.test_random.TestRandomChoice) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_multinomial_2 (numba.tests.test_random.TestRandomMultinomial) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_multinomial_3_int (numba.tests.test_random.TestRandomMultinomial) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_multinomial_3_tuple (numba.tests.test_random.TestRandomMultinomial) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_np_implicit_initialization (numba.tests.test_random.TestThreads) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_np_thread_safety (numba.tests.test_random.TestThreads) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_py_implicit_initialization (numba.tests.test_random.TestThreads) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_py_thread_safety (numba.tests.test_random.TestThreads) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_gil_held (numba.tests.test_gil.TestGILRelease) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_gil_ignored_by_callee (numba.tests.test_gil.TestGILRelease) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_gil_released (numba.tests.test_gil.TestGILRelease) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_gil_released_by_caller (numba.tests.test_gil.TestGILRelease) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_gil_released_by_caller_and_callee (numba.tests.test_gil.TestGILRelease) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_gil_released_inside_lifted_loop (numba.tests.test_gil.TestGILRelease) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_object_mode (numba.tests.test_gil.TestGILRelease) ... skipped 'PYPY FIXME - new buffer interface not supported'
test_from_ctypes (numba.tests.test_ctypes.TestCTypesTypes) ... skipped 'PYPY FIXME - slow'
test_to_ctypes (numba.tests.test_ctypes.TestCTypesTypes) ... skipped 'PYPY FIXME - slow'
test_c_sin (numba.tests.test_ctypes.TestCTypesUseCases) ... skipped 'PYPY FIXME - slow..'
test_ctype_voidptr (numba.tests.test_ctypes.TestCTypesUseCases) ... skipped 'PYPY FIXME - slow..'
test_ctype_wrapping (numba.tests.test_ctypes.TestCTypesUseCases) ... skipped 'PYPY FIXME - slow..'
test_function_pointer (numba.tests.test_ctypes.TestCTypesUseCases) ... skipped 'PYPY FIXME - slow..'
test_passing_array_ctypes_data (numba.tests.test_ctypes.TestCTypesUseCases) ... skipped 'PYPY FIXME - slow..'
test_passing_array_ctypes_voidptr (numba.tests.test_ctypes.TestCTypesUseCases) ... skipped 'PYPY FIXME - slow..'
test_python_call_back (numba.tests.test_ctypes.TestCTypesUseCases) ... skipped 'PYPY FIXME - slow..'
test_python_call_back_threaded (numba.tests.test_ctypes.TestCTypesUseCases) ... skipped 'PYPY FIXME - slow..'
test_stdcall (numba.tests.test_ctypes.TestCTypesUseCases) ... skipped 'PYPY FIXME - slow..'
test_two_funcs (numba.tests.test_ctypes.TestCTypesUseCases) ... skipped 'PYPY FIXME - slow..'
test_untyped_function (numba.tests.test_ctypes.TestCTypesUseCases) ... skipped 'PYPY FIXME - slow..'
test_castgraph_propagate (numba.tests.test_typeconv.TestTypeConv) ... ok
test_default_rules (numba.tests.test_typeconv.TestTypeConv) ... ok
test_overload1 (numba.tests.test_typeconv.TestTypeConv) ... ok
test_overload2 (numba.tests.test_typeconv.TestTypeConv) ... ok
test_overload3 (numba.tests.test_typeconv.TestTypeConv) ... ok
test_type_casting_rules (numba.tests.test_typeconv.TestTypeConv) ... ok
test_typeconv (numba.tests.test_typeconv.TestTypeConv) ... ok
test_global_func_lifetime (numba.tests.test_func_lifetime.TestFuncLifetime) ... ERROR
test_global_func_lifetime_npm (numba.tests.test_func_lifetime.TestFuncLifetime) ... ERROR
test_global_obj_lifetime (numba.tests.test_func_lifetime.TestFuncLifetime) ... FAIL
test_inner_function_lifetime (numba.tests.test_func_lifetime.TestFuncLifetime) ... ERROR
test_inner_function_lifetime_npm (numba.tests.test_func_lifetime.TestFuncLifetime) ... ERROR
test_local_func_lifetime (numba.tests.test_func_lifetime.TestFuncLifetime) ... ERROR
test_local_func_lifetime_npm (numba.tests.test_func_lifetime.TestFuncLifetime) ... ERROR
test_double_free (numba.tests.test_func_lifetime.TestLifeTimeIssue) ... ok
test_properties (numba.tests.test_types.TestNdIter) ... ok
test_bitwidth (numba.tests.test_types.TestNumbers) ... ok
test_from_bidwidth (numba.tests.test_types.TestNumbers) ... ok
test_minval_maxval (numba.tests.test_types.TestNumbers) ... ok
test_ordering (numba.tests.test_types.TestNumbers) ... ok
test_arrays (numba.tests.test_types.TestPickling) ... ok
test_atomic_types (numba.tests.test_types.TestPickling) ... ok
test_enums (numba.tests.test_types.TestPickling) ... ok
test_external_function_pointers (numba.tests.test_types.TestPickling) ... expected failure
test_generator (numba.tests.test_types.TestPickling) ... ok
test_lists (numba.tests.test_types.TestPickling) ... ok
test_namedtuples (numba.tests.test_types.TestPickling) ... ok
test_optional (numba.tests.test_types.TestPickling) ... ok
test_predefined_types (numba.tests.test_types.TestPickling) ... ok
test_records (numba.tests.test_types.TestPickling) ... ok
test_tuples (numba.tests.test_types.TestPickling) ... ok
test_normalize_signature (numba.tests.test_types.TestSignatures) ... ok
test_array_notation (numba.tests.test_types.TestTypes) ... ok
test_cache_trimming (numba.tests.test_types.TestTypes) ... ok
test_call_notation (numba.tests.test_types.TestTypes) ... ok
test_equality (numba.tests.test_types.TestTypes) ... ok
test_interning (numba.tests.test_types.TestTypes) ... ok
test_weaktype (numba.tests.test_types.TestTypes) ... ok
test_cache_invalidate (numba.tests.test_dispatcher.TestCache) ... ok
test_cache_reuse (numba.tests.test_dispatcher.TestCache) ... /home/graham/pypy/numba/numba/tests/test_dispatcher.py:734: RuntimeWarning: PyImport_ImportModuleNoBlock() is not non-blocking
  mod.record_return(mod.packed_arr, 0)
/home/graham/pypy/numba/numba/tests/test_dispatcher.py:735: RuntimeWarning: PyImport_ImportModuleNoBlock() is not non-blocking
  mod.record_return(mod.aligned_arr, 1)
ok
test_caching (numba.tests.test_dispatcher.TestCache) ... /home/graham/pypy/numba/numba/tests/test_dispatcher.py:621: RuntimeWarning: PyImport_ImportModuleNoBlock() is not non-blocking
  rec = f(mod.aligned_arr, 1)
/home/graham/pypy/numba/numba/tests/test_dispatcher.py:623: RuntimeWarning: PyImport_ImportModuleNoBlock() is not non-blocking
  rec = f(mod.packed_arr, 1)
ok
test_closure (numba.tests.test_dispatcher.TestCache) ... ok
test_ctypes (numba.tests.test_dispatcher.TestCache) ... skipped 'PYPY FIXME'
test_inner_then_outer (numba.tests.test_dispatcher.TestCache) ... ok
test_ipython (numba.tests.test_dispatcher.TestCache) ... ok
test_looplifted (numba.tests.test_dispatcher.TestCache) ... skipped 'PYPY FIXME - error in cpyext'
test_no_caching (numba.tests.test_dispatcher.TestCache) ... ok
test_non_creatable_pycache (numba.tests.test_dispatcher.TestCache) ... ok
test_non_writable_pycache (numba.tests.test_dispatcher.TestCache) ... ok
test_outer_then_inner (numba.tests.test_dispatcher.TestCache) ... ok
test_recompile (numba.tests.test_dispatcher.TestCache) ... ok
test_same_names (numba.tests.test_dispatcher.TestCache) ... ok
test_ambiguous_new_version (numba.tests.test_dispatcher.TestDispatcher)
Test compiling new version in an ambiguous case ... ok
test_coerce_input_types (numba.tests.test_dispatcher.TestDispatcher) ... ok
test_disabled_compilation (numba.tests.test_dispatcher.TestDispatcher) ... ok
test_disabled_compilation_nested_call (numba.tests.test_dispatcher.TestDispatcher) ... ok
test_disabled_compilation_through_list (numba.tests.test_dispatcher.TestDispatcher) ... ok
test_explicit_signatures (numba.tests.test_dispatcher.TestDispatcher) ... ok
test_lock (numba.tests.test_dispatcher.TestDispatcher) ... ok
test_matching_error_message (numba.tests.test_dispatcher.TestDispatcher) ... ok
test_no_argument (numba.tests.test_dispatcher.TestDispatcher) ... ok
test_signature_mismatch (numba.tests.test_dispatcher.TestDispatcher) ... ok
test_inspect_asm (numba.tests.test_dispatcher.TestDispatcherMethods) ... ok
test_inspect_llvm (numba.tests.test_dispatcher.TestDispatcherMethods) ... ok
test_inspect_types (numba.tests.test_dispatcher.TestDispatcherMethods) ... ok
test_issue_with_array_layout_conflict (numba.tests.test_dispatcher.TestDispatcherMethods) ... ok
test_recompile (numba.tests.test_dispatcher.TestDispatcherMethods) ... ok
test_recompile_signatures (numba.tests.test_dispatcher.TestDispatcherMethods) ... ok
test_generated (numba.tests.test_dispatcher.TestGeneratedDispatcher) ... ok
test_signature_errors (numba.tests.test_dispatcher.TestGeneratedDispatcher) ... ok
test_multiprocessing (numba.tests.test_dispatcher.TestMultiprocessCache) ... skipped CUDA tests
skipped CUDA tests
           bm_python:       1000 loops, best of 3: 4.6us per loop
            bm_numba:        100 loops, best of 3: 612.1us per loop
           bm_pyfunc:      10000 loops, best of 3: 3.3us per loop
            bm_cfunc:       1000 loops, best of 3: 624.9us per loop
<function add at 0x000000000312f088>
              python:      10000 loops, best of 3: 19.1ns per loop
             pycfunc:      10000 loops, best of 3: 2.0us per loop
          overloaded:         10 loops, best of 3: 7.4us per loop
<function array_overhead at 0x000000000312f010>
              python:      10000 loops, best of 3: 5.1us per loop
             pycfunc:      10000 loops, best of 3: 920.3ns per loop
          overloaded:      10000 loops, best of 3: 2.4us per loop
<function overhead at 0x000000000312ef98>
              python:      10000 loops, best of 3: 32.8ns per loop
             pycfunc:      10000 loops, best of 3: 2.2us per loop
          overloaded:         10 loops, best of 3: 7.7us per loop
ipython version: 5.1.0
ok
test_default_args (numba.tests.test_dispatcher.TestSignatureHandling) ... ok
test_named_args (numba.tests.test_dispatcher.TestSignatureHandling) ... ok
test_star_args (numba.tests.test_dispatcher.TestSignatureHandling) ... ok
test_default_args (numba.tests.test_dispatcher.TestSignatureHandlingObjectMode) ... ok
test_named_args (numba.tests.test_dispatcher.TestSignatureHandlingObjectMode) ... ok
test_star_args (numba.tests.test_dispatcher.TestSignatureHandlingObjectMode) ... ok
test_incref_after_cast (numba.tests.test_nrt.TestNRTIssue) ... ERROR
test_issue_with_refct_op_pruning (numba.tests.test_nrt.TestNRTIssue) ... ERROR
test_refct_pruning_issue_1511 (numba.tests.test_nrt.TestNRTIssue) ... ERROR
test_refct_pruning_issue_1526 (numba.tests.test_nrt.TestNRTIssue) ... ok
test_buffer (numba.tests.test_nrt.TestNrtMemInfo) ... ok
test_fake_memoryview (numba.tests.test_nrt.TestNrtMemInfo) ... skipped 'memoryview not supported'
test_meminfo_refct_1 (numba.tests.test_nrt.TestNrtMemInfo) ... FAIL
test_meminfo_refct_2 (numba.tests.test_nrt.TestNrtMemInfo) ... FAIL
test_memoryview (numba.tests.test_nrt.TestNrtMemInfo) ... skipped 'memoryview not supported'
test_snapshot (numba.tests.test_nrt.TestTracemalloc) ... skipped 'need Python 3.4+ for the tracemalloc module'
test_as_arg (numba.tests.test_datamodel.Test0DArrayOfInt32) ... ok
test_as_data (numba.tests.test_datamodel.Test0DArrayOfInt32) ... ok
test_as_return (numba.tests.test_datamodel.Test0DArrayOfInt32) ... ok
test_as_arg (numba.tests.test_datamodel.Test1DArrayOfInt32) ... ok
test_as_data (numba.tests.test_datamodel.Test1DArrayOfInt32) ... ok
test_as_return (numba.tests.test_datamodel.Test1DArrayOfInt32) ... ok
test_as_arg (numba.tests.test_datamodel.Test2DArrayOfComplex128) ... ok
test_as_data (numba.tests.test_datamodel.Test2DArrayOfComplex128) ... ok
test_as_return (numba.tests.test_datamodel.Test2DArrayOfComplex128) ... ok
test_empty_tuples (numba.tests.test_datamodel.TestArgInfo) ... ok
test_int32_array_complex (numba.tests.test_datamodel.TestArgInfo) ... ok
test_nested_empty_tuples (numba.tests.test_datamodel.TestArgInfo) ... ok
test_tuples (numba.tests.test_datamodel.TestArgInfo) ... ok
test_two_0d_arrays (numba.tests.test_datamodel.TestArgInfo) ... ok
test_two_arrays (numba.tests.test_datamodel.TestArgInfo) ... ok
test_as_arg (numba.tests.test_datamodel.TestBool) ... ok
test_as_data (numba.tests.test_datamodel.TestBool) ... ok
test_as_return (numba.tests.test_datamodel.TestBool) ... ok
test_as_arg (numba.tests.test_datamodel.TestComplex) ... ok
test_as_data (numba.tests.test_datamodel.TestComplex) ... ok
test_as_return (numba.tests.test_datamodel.TestComplex) ... ok
test_as_arg (numba.tests.test_datamodel.TestDouble) ... ok
test_as_data (numba.tests.test_datamodel.TestDouble) ... ok
test_as_return (numba.tests.test_datamodel.TestDouble) ... ok
test_as_arg (numba.tests.test_datamodel.TestDoubleComplex) ... ok
test_as_data (numba.tests.test_datamodel.TestDoubleComplex) ... ok
test_as_return (numba.tests.test_datamodel.TestDoubleComplex) ... ok
test_as_arg (numba.tests.test_datamodel.TestFloat) ... ok
test_as_data (numba.tests.test_datamodel.TestFloat) ... ok
test_as_return (numba.tests.test_datamodel.TestFloat) ... ok
test_as_arg (numba.tests.test_datamodel.TestInt16) ... ok
test_as_data (numba.tests.test_datamodel.TestInt16) ... ok
test_as_return (numba.tests.test_datamodel.TestInt16) ... ok
test_as_arg (numba.tests.test_datamodel.TestInt32) ... ok
test_as_data (numba.tests.test_datamodel.TestInt32) ... ok
test_as_return (numba.tests.test_datamodel.TestInt32) ... ok
test_as_arg (numba.tests.test_datamodel.TestInt64) ... ok
test_as_data (numba.tests.test_datamodel.TestInt64) ... ok
test_as_return (numba.tests.test_datamodel.TestInt64) ... ok
test_as_arg (numba.tests.test_datamodel.TestInt8) ... ok
test_as_data (numba.tests.test_datamodel.TestInt8) ... ok
test_as_return (numba.tests.test_datamodel.TestInt8) ... ok
test_as_arg (numba.tests.test_datamodel.TestPointerOfInt32) ... ok
test_as_data (numba.tests.test_datamodel.TestPointerOfInt32) ... ok
test_as_return (numba.tests.test_datamodel.TestPointerOfInt32) ... ok
test_as_arg (numba.tests.test_datamodel.TestPyObject) ... ok
test_as_data (numba.tests.test_datamodel.TestPyObject) ... ok
test_as_return (numba.tests.test_datamodel.TestPyObject) ... ok
test_as_arg (numba.tests.test_datamodel.TestTupleEmpty) ... ok
test_as_data (numba.tests.test_datamodel.TestTupleEmpty) ... ok
test_as_return (numba.tests.test_datamodel.TestTupleEmpty) ... ok
test_as_arg (numba.tests.test_datamodel.TestTupleInt32Float32) ... ok
test_as_data (numba.tests.test_datamodel.TestTupleInt32Float32) ... ok
test_as_return (numba.tests.test_datamodel.TestTupleInt32Float32) ... ok
test_as_arg (numba.tests.test_datamodel.TestUInt16) ... ok
test_as_data (numba.tests.test_datamodel.TestUInt16) ... ok
test_as_return (numba.tests.test_datamodel.TestUInt16) ... ok
test_as_arg (numba.tests.test_datamodel.TestUInt32) ... ok
test_as_data (numba.tests.test_datamodel.TestUInt32) ... ok
test_as_return (numba.tests.test_datamodel.TestUInt32) ... ok
test_as_arg (numba.tests.test_datamodel.TestUInt64) ... ok
test_as_data (numba.tests.test_datamodel.TestUInt64) ... ok
test_as_return (numba.tests.test_datamodel.TestUInt64) ... ok
test_as_arg (numba.tests.test_datamodel.TestUInt8) ... ok
test_as_data (numba.tests.test_datamodel.TestUInt8) ... ok
test_as_return (numba.tests.test_datamodel.TestUInt8) ... ok
test_as_arg (numba.tests.test_datamodel.TestUniTupleEmpty) ... ok
test_as_data (numba.tests.test_datamodel.TestUniTupleEmpty) ... ok
test_as_return (numba.tests.test_datamodel.TestUniTupleEmpty) ... ok
test_as_arg (numba.tests.test_datamodel.TestUniTupleOf2xInt32) ... ok
test_as_data (numba.tests.test_datamodel.TestUniTupleOf2xInt32) ... ok
test_as_return (numba.tests.test_datamodel.TestUniTupleOf2xInt32) ... ok
test_acos (numba.tests.test_mathlib.TestMathLib) ... ok
test_acos_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_acosh (numba.tests.test_mathlib.TestMathLib) ... ok
test_acosh_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_asin (numba.tests.test_mathlib.TestMathLib) ... ok
test_asin_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_asinh (numba.tests.test_mathlib.TestMathLib) ... ok
test_asinh_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_atan (numba.tests.test_mathlib.TestMathLib) ... ok
test_atan2 (numba.tests.test_mathlib.TestMathLib) ... ok
test_atan2_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_atan_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_atanh (numba.tests.test_mathlib.TestMathLib) ... ok
test_atanh_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_ceil (numba.tests.test_mathlib.TestMathLib) ... ok
test_ceil_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_constants (numba.tests.test_mathlib.TestMathLib) ... ok
test_copysign (numba.tests.test_mathlib.TestMathLib) ... ok
test_copysign_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_cos (numba.tests.test_mathlib.TestMathLib) ... ok
test_cos_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_cosh (numba.tests.test_mathlib.TestMathLib) ... ok
test_cosh_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_degrees (numba.tests.test_mathlib.TestMathLib) ... ok
test_degrees_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_erf (numba.tests.test_mathlib.TestMathLib) ... ok
test_erf_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_erfc (numba.tests.test_mathlib.TestMathLib) ... ok
test_erfc_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_exp (numba.tests.test_mathlib.TestMathLib) ... ok
test_exp_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_expm1 (numba.tests.test_mathlib.TestMathLib) ... ok
test_expm1_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_floor (numba.tests.test_mathlib.TestMathLib) ... ok
test_floor_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_frexp (numba.tests.test_mathlib.TestMathLib) ... ok
test_frexp_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_gamma (numba.tests.test_mathlib.TestMathLib) ... ok
test_gamma_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_hypot (numba.tests.test_mathlib.TestMathLib) ... FAIL
test_hypot_npm (numba.tests.test_mathlib.TestMathLib) ... FAIL
test_isfinite (numba.tests.test_mathlib.TestMathLib) ... skipped 'needs Python 3.2+'
test_isfinite_npm (numba.tests.test_mathlib.TestMathLib) ... skipped 'needs Python 3.2+'
test_isinf (numba.tests.test_mathlib.TestMathLib) ... ok
test_isinf_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_isnan (numba.tests.test_mathlib.TestMathLib) ... ok
test_isnan_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_ldexp (numba.tests.test_mathlib.TestMathLib) ... ok
test_ldexp_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_lgamma (numba.tests.test_mathlib.TestMathLib) ... ok
test_lgamma_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_log (numba.tests.test_mathlib.TestMathLib) ... ok
test_log10 (numba.tests.test_mathlib.TestMathLib) ... ok
test_log10_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_log1p (numba.tests.test_mathlib.TestMathLib) ... ok
test_log1p_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_log_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_npy_sqrt (numba.tests.test_mathlib.TestMathLib) ... ok
test_npy_sqrt_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_pow (numba.tests.test_mathlib.TestMathLib) ... ok
test_pow_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_radians (numba.tests.test_mathlib.TestMathLib) ... ok
test_radians_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_sin (numba.tests.test_mathlib.TestMathLib) ... ok
test_sin_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_sinh (numba.tests.test_mathlib.TestMathLib) ... ok
test_sinh_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_sqrt (numba.tests.test_mathlib.TestMathLib) ... ok
test_sqrt_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_tan (numba.tests.test_mathlib.TestMathLib) ... ok
test_tan_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_tanh (numba.tests.test_mathlib.TestMathLib) ... ok
test_tanh_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_trunc (numba.tests.test_mathlib.TestMathLib) ... ok
test_trunc_npm (numba.tests.test_mathlib.TestMathLib) ... ok
test_slice_constructor (numba.tests.test_slices.TestSlices) ... ok
test_slice_passing (numba.tests.test_slices.TestSlices) ... ok
test_all (numba.tests.test_runtests.TestCase) ... /usr/bin/python: No module named llvmlite.binding
ERROR
test_cuda (numba.tests.test_runtests.TestCase) ... /usr/bin/python: No module named llvmlite.binding
ERROR
test_default (numba.tests.test_runtests.TestCase) ... /usr/bin/python: No module named llvmlite.binding
ERROR
test_module (numba.tests.test_runtests.TestCase) ... /usr/bin/python: No module named llvmlite.binding
ERROR
test_random (numba.tests.test_runtests.TestCase) ... skipped "'--random' only supported on Python 3.4 or higher"
test_subpackage (numba.tests.test_runtests.TestCase) ... /usr/bin/python: No module named llvmlite.binding
ERROR
test_tags (numba.tests.test_runtests.TestCase) ... skipped "'--tags' only supported on Python 3.4 or higher"
test_custom_type (numba.tests.test_itanium_mangler.TestItaniumManager) ... ok
test_function (numba.tests.test_itanium_mangler.TestItaniumManager) ... ok
test_ident (numba.tests.test_itanium_mangler.TestItaniumManager) ... ok
test_types (numba.tests.test_itanium_mangler.TestItaniumManager) ... ok
test_del_before_definition (numba.tests.test_obj_lifetime.TestObjLifetime) ... ok
test_generator1 (numba.tests.test_obj_lifetime.TestObjLifetime) ... ERROR
test_generator2 (numba.tests.test_obj_lifetime.TestObjLifetime) ... ERROR
test_inf_loop_multiple_back_edge (numba.tests.test_obj_lifetime.TestObjLifetime) ... FAIL
test_looping1 (numba.tests.test_obj_lifetime.TestObjLifetime) ... FAIL
test_looping2 (numba.tests.test_obj_lifetime.TestObjLifetime) ... FAIL
test_raising1 (numba.tests.test_obj_lifetime.TestObjLifetime) ... ERROR
test_raising2 (numba.tests.test_obj_lifetime.TestObjLifetime) ... ERROR
test_raising3 (numba.tests.test_obj_lifetime.TestObjLifetime) ... ERROR
test_simple1 (numba.tests.test_obj_lifetime.TestObjLifetime) ... FAIL
test_simple2 (numba.tests.test_obj_lifetime.TestObjLifetime) ... FAIL
test_class_method (numba.tests.test_tracing.TestTracing) ... ok
test_function (numba.tests.test_tracing.TestTracing) ... ok
test_injected (numba.tests.test_tracing.TestTracing) ... skipped 'recursive decoration not yet implemented'
test_method (numba.tests.test_tracing.TestTracing) ... ok
test_property (numba.tests.test_tracing.TestTracing) ... ok
test_static_method (numba.tests.test_tracing.TestTracing) ... ok
test_extent_1d (numba.tests.test_dummyarray.TestExtent) ... ok
test_extent_2d (numba.tests.test_dummyarray.TestExtent) ... ok
test_extent_iter_1d (numba.tests.test_dummyarray.TestExtent) ... ok
test_extent_iter_2d (numba.tests.test_dummyarray.TestExtent) ... ok
test_slice0_1d (numba.tests.test_dummyarray.TestSlicing) ... ok
test_slice0_2d (numba.tests.test_dummyarray.TestSlicing) ... ok
test_slice1_1d (numba.tests.test_dummyarray.TestSlicing) ... ok
test_slice1_2d (numba.tests.test_dummyarray.TestSlicing) ... ok
test_slice2_1d (numba.tests.test_dummyarray.TestSlicing) ... ok
test_slice2_2d (numba.tests.test_dummyarray.TestSlicing) ... ok
test_llvmlite_version (numba.tests.test_llvm_version_check.TestLlvmVersion) ... ok
test_decorated_function (numba.tests.test_jitmethod.TestDisabledJIT) ... ok
test_decorated_function_with_kwargs (numba.tests.test_jitmethod.TestDisabledJIT) ... ok
test_py_func (numba.tests.test_jitmethod.TestDisabledJIT) ... ok
test_py_func_with_kwargs (numba.tests.test_jitmethod.TestDisabledJIT) ... ok
test_bound_jit_method_with_loop_lift (numba.tests.test_jitmethod.TestJITMethod) ... ok
test_unbound_jit_method (numba.tests.test_jitmethod.TestJITMethod) ... ok
test_allocation_mt (numba.tests.test_dyn_array.TestDynArray) ... ERROR
test_array_pass_through (numba.tests.test_dyn_array.TestDynArray) ... ok
test_array_pass_through_sliced (numba.tests.test_dyn_array.TestDynArray) ... ERROR
test_empty_0d (numba.tests.test_dyn_array.TestDynArray) ... ERROR
test_empty_1d (numba.tests.test_dyn_array.TestDynArray) ... ERROR
test_empty_2d (numba.tests.test_dyn_array.TestDynArray) ... ERROR
test_empty_2d_sliced (numba.tests.test_dyn_array.TestDynArray) ... ERROR
test_empty_3d (numba.tests.test_dyn_array.TestDynArray) ... ERROR
test_issue_with_return_leak (numba.tests.test_dyn_array.TestDynArray) ... ERROR
test_refct_mt (numba.tests.test_dyn_array.TestDynArray) ... ERROR
test_return_global_array (numba.tests.test_dyn_array.TestDynArray) ... ERROR
test_return_global_array_sliced (numba.tests.test_dyn_array.TestDynArray) ... skipped 'PYPY FIXME - interpreter death'
test_return_tuple_of_array (numba.tests.test_dyn_array.TestDynArray) ... ERROR
test_return_tuple_of_array_created (numba.tests.test_dyn_array.TestDynArray) ... ERROR
ERROR
test_swap (numba.tests.test_dyn_array.TestDynArray) ... ERROR
test_ufunc_with_allocated_output (numba.tests.test_dyn_array.TestDynArray) ... ERROR
test_linspace_2 (numba.tests.test_dyn_array.TestNdArange) ... ok
test_linspace_3 (numba.tests.test_dyn_array.TestNdArange) ... ok
test_diag_extract (numba.tests.test_dyn_array.TestNdDiag) ... ok
test_diag_extract_kwarg (numba.tests.test_dyn_array.TestNdDiag) ... ok
test_diag_vect_create (numba.tests.test_dyn_array.TestNdDiag) ... ok
test_diag_vect_create_kwarg (numba.tests.test_dyn_array.TestNdDiag) ... ok
test_error_handling (numba.tests.test_dyn_array.TestNdDiag) ... ok
test_like (numba.tests.test_dyn_array.TestNdEmptyLike) ... ok
test_like_dtype (numba.tests.test_dyn_array.TestNdEmptyLike) ... ok
test_like_dtype_instance (numba.tests.test_dyn_array.TestNdEmptyLike) ... ok
test_like_dtype_kwarg (numba.tests.test_dyn_array.TestNdEmptyLike) ... ok
test_like_dtype_structured (numba.tests.test_dyn_array.TestNdEmptyLike) ... ok
test_like_structured (numba.tests.test_dyn_array.TestNdEmptyLike) ... ok
test_eye_n (numba.tests.test_dyn_array.TestNdEye) ... ok
test_eye_n_m (numba.tests.test_dyn_array.TestNdEye) ... ok
test_eye_n_m_k (numba.tests.test_dyn_array.TestNdEye) ... ok
test_eye_n_m_k_dtype (numba.tests.test_dyn_array.TestNdEye) ... ok
test_eye_n_m_k_dtype_instance (numba.tests.test_dyn_array.TestNdEye) ... ok
test_0d (numba.tests.test_dyn_array.TestNdFull) ... ERROR
test_1d (numba.tests.test_dyn_array.TestNdFull) ... ERROR
test_1d_dtype (numba.tests.test_dyn_array.TestNdFull) ... ERROR
test_1d_dtype_instance (numba.tests.test_dyn_array.TestNdFull) ... ERROR
test_2d (numba.tests.test_dyn_array.TestNdFull) ... ERROR
test_2d_dtype_kwarg (numba.tests.test_dyn_array.TestNdFull) ... ERROR
test_like (numba.tests.test_dyn_array.TestNdFullLike) ... ok
test_like_dtype (numba.tests.test_dyn_array.TestNdFullLike) ... ok
test_like_dtype_instance (numba.tests.test_dyn_array.TestNdFullLike) ... ok
test_like_dtype_kwarg (numba.tests.test_dyn_array.TestNdFullLike) ... ok
test_like_structured (numba.tests.test_dyn_array.TestNdFullLike) ... expected failure
test_identity (numba.tests.test_dyn_array.TestNdIdentity) ... ok
test_identity_dtype (numba.tests.test_dyn_array.TestNdIdentity) ... ok
test_0d (numba.tests.test_dyn_array.TestNdOnes) ... ERROR
test_1d (numba.tests.test_dyn_array.TestNdOnes) ... ERROR
test_1d_dtype (numba.tests.test_dyn_array.TestNdOnes) ... ERROR
test_1d_dtype_instance (numba.tests.test_dyn_array.TestNdOnes) ... ERROR
test_2d (numba.tests.test_dyn_array.TestNdOnes) ... ERROR
test_2d_dtype_kwarg (numba.tests.test_dyn_array.TestNdOnes) ... ERROR
test_like (numba.tests.test_dyn_array.TestNdOnesLike) ... ok
test_like_dtype (numba.tests.test_dyn_array.TestNdOnesLike) ... ok
test_like_dtype_instance (numba.tests.test_dyn_array.TestNdOnesLike) ... ok
test_like_dtype_kwarg (numba.tests.test_dyn_array.TestNdOnesLike) ... ok
test_like_dtype_structured (numba.tests.test_dyn_array.TestNdOnesLike) ... expected failure
test_like_structured (numba.tests.test_dyn_array.TestNdOnesLike) ... expected failure
test_0d (numba.tests.test_dyn_array.TestNdZeros) ... ERROR
test_1d (numba.tests.test_dyn_array.TestNdZeros) ... ERROR
test_1d_dtype (numba.tests.test_dyn_array.TestNdZeros) ... ERROR
test_1d_dtype_instance (numba.tests.test_dyn_array.TestNdZeros) ... ERROR
test_2d (numba.tests.test_dyn_array.TestNdZeros) ... ERROR
test_2d_dtype_kwarg (numba.tests.test_dyn_array.TestNdZeros) ... ERROR
test_like (numba.tests.test_dyn_array.TestNdZerosLike) ... ok
test_like_dtype (numba.tests.test_dyn_array.TestNdZerosLike) ... ok
test_like_dtype_instance (numba.tests.test_dyn_array.TestNdZerosLike) ... ok
test_like_dtype_kwarg (numba.tests.test_dyn_array.TestNdZerosLike) ... ok
test_like_dtype_structured (numba.tests.test_dyn_array.TestNdZerosLike) ... ok
test_like_structured (numba.tests.test_dyn_array.TestNdZerosLike) ... ok
test_0d (numba.tests.test_dyn_array.TestNpArray) ... ERROR
test_0d_with_dtype (numba.tests.test_dyn_array.TestNpArray) ... ERROR
test_1d (numba.tests.test_dyn_array.TestNpArray) ... ERROR
test_1d_with_dtype (numba.tests.test_dyn_array.TestNpArray) ... ERROR
test_2d (numba.tests.test_dyn_array.TestNpArray) ... ERROR
test_2d_with_dtype (numba.tests.test_dyn_array.TestNpArray) ... ERROR
test_3d (numba.tests.test_dyn_array.TestNpConcatenate) ... ok
test_3d_no_axis (numba.tests.test_dyn_array.TestNpConcatenate) ... ok
test_typing_errors (numba.tests.test_dyn_array.TestNpConcatenate) ... ok
test_0d (numba.tests.test_dyn_array.TestNpStack) ... ERROR
test_3d (numba.tests.test_dyn_array.TestNpStack) ... ok
test_3d_no_axis (numba.tests.test_dyn_array.TestNpStack) ... ok
test_empty_no_args (numba.tests.test_dyn_array.TestNpyEmptyKeyword) ... ok
test_with_dtype_kws (numba.tests.test_dyn_array.TestNpyEmptyKeyword) ... ok
test_with_shape_and_dtype_kws (numba.tests.test_dyn_array.TestNpyEmptyKeyword) ... ok
test_mutual (numba.tests.test_recursion.TestMutualRecursion) ... ok
test_global_explicit_sig (numba.tests.test_recursion.TestSelfRecursion) ... ok
test_global_implicit_sig (numba.tests.test_recursion.TestSelfRecursion) ... ok
test_inner_explicit_sig (numba.tests.test_recursion.TestSelfRecursion) ... ok
test_add_array_op (numba.tests.test_ufuncs.TestArrayOperators) ... ERROR
test_bitwise_and_array_op (numba.tests.test_ufuncs.TestArrayOperators) ... ERROR
test_bitwise_or_array_op (numba.tests.test_ufuncs.TestArrayOperators) ... ERROR
test_bitwise_xor_array_op (numba.tests.test_ufuncs.TestArrayOperators) ... ERROR
test_divide_array_op (numba.tests.test_ufuncs.TestArrayOperators) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: divide by zero encountered in divide
  
/home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in divide
  
ERROR
test_equal_array_op (numba.tests.test_ufuncs.TestArrayOperators) ... ERROR
test_floor_divide_array_op (numba.tests.test_ufuncs.TestArrayOperators) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: divide by zero encountered in floor_divide
  
ERROR
test_greater_array_op (numba.tests.test_ufuncs.TestArrayOperators) ... ERROR
test_greater_equal_array_op (numba.tests.test_ufuncs.TestArrayOperators) ... ERROR
test_inplace_add (numba.tests.test_ufuncs.TestArrayOperators) ... ok
test_inplace_and (numba.tests.test_ufuncs.TestArrayOperators) ... ok
test_inplace_div (numba.tests.test_ufuncs.TestArrayOperators) ... ok
test_inplace_floordiv (numba.tests.test_ufuncs.TestArrayOperators) ... ok
test_inplace_lshift (numba.tests.test_ufuncs.TestArrayOperators) ... ok
test_inplace_mul (numba.tests.test_ufuncs.TestArrayOperators) ... ok
test_inplace_or (numba.tests.test_ufuncs.TestArrayOperators) ... ok
test_inplace_pow (numba.tests.test_ufuncs.TestArrayOperators) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in power
  
ok
test_inplace_remainder (numba.tests.test_ufuncs.TestArrayOperators) ... ok
test_inplace_rshift (numba.tests.test_ufuncs.TestArrayOperators) ... ok
test_inplace_sub (numba.tests.test_ufuncs.TestArrayOperators) ... ok
test_inplace_xor (numba.tests.test_ufuncs.TestArrayOperators) ... ok
test_left_shift_array_op (numba.tests.test_ufuncs.TestArrayOperators) ... ERROR
test_less_array_op (numba.tests.test_ufuncs.TestArrayOperators) ... ERROR
test_less_equal_array_op (numba.tests.test_ufuncs.TestArrayOperators) ... ERROR
test_multiply_array_op (numba.tests.test_ufuncs.TestArrayOperators) ... ERROR
test_not_equal_array_op (numba.tests.test_ufuncs.TestArrayOperators) ... ERROR
test_power_array_op (numba.tests.test_ufuncs.TestArrayOperators) ... ERROR
test_remainder_array_op (numba.tests.test_ufuncs.TestArrayOperators) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: divide by zero encountered in remainder
  
/home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in remainder
  
ERROR
test_right_shift_array_op (numba.tests.test_ufuncs.TestArrayOperators) ... ERROR
test_subtract_array_op (numba.tests.test_ufuncs.TestArrayOperators) ... ERROR
test_unary_invert_array_op (numba.tests.test_ufuncs.TestArrayOperators) ... ERROR
test_unary_negative_array_op (numba.tests.test_ufuncs.TestArrayOperators) ... ERROR
test_unary_positive_array_op (numba.tests.test_ufuncs.TestArrayOperators) ... ERROR
test_absolute_?_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_absolute_B_B (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_absolute_D_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_absolute_F_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_absolute_G_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_absolute_H_H (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_absolute_I_I (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_absolute_L_L (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_absolute_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_absolute_Q_Q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_absolute_b_b (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_absolute_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_absolute_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_absolute_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_absolute_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_absolute_h_h (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_absolute_i_i (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_absolute_l_l (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_absolute_m_m (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_absolute_q_q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_add_??_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_add_BB_B (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_add_DD_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_add_FF_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_add_GG_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_add_HH_H (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_add_II_I (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_add_LL_L (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_add_Mm_M (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_add_OO_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_add_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_add_bb_b (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_add_dd_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_add_ee_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_add_ff_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_add_gg_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_add_hh_h (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_add_ii_i (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_add_ll_l (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_add_mM_M (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_add_mm_m (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_add_qq_q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arccos_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arccos_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arccos_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arccos_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arccos_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arccos_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arccos_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arccos_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arccosh_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arccosh_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arccosh_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arccosh_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arccosh_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arccosh_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arccosh_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arccosh_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arcsin_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arcsin_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arcsin_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arcsin_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arcsin_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arcsin_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arcsin_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arcsin_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arcsinh_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arcsinh_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arcsinh_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arcsinh_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arcsinh_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arcsinh_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arcsinh_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arcsinh_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arctan2_OO_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arctan2_dd_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arctan2_ee_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arctan2_ff_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arctan2_gg_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arctan_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: divide by zero encountered in arctan
  
ok
test_arctan_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arctan_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arctan_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arctan_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arctan_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arctan_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arctan_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arctanh_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arctanh_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arctanh_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arctanh_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arctanh_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arctanh_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arctanh_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_arctanh_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_and_??_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_and_BB_B (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_and_HH_H (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_and_II_I (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_and_LL_L (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_and_OO_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_and_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_and_bb_b (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_and_hh_h (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_and_ii_i (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_and_ll_l (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_and_qq_q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_or_??_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_or_BB_B (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_or_HH_H (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_or_II_I (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_or_LL_L (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_or_OO_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_or_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_or_bb_b (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_or_hh_h (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_or_ii_i (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_or_ll_l (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_or_qq_q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_xor_??_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_xor_BB_B (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_xor_HH_H (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_xor_II_I (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_xor_LL_L (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_xor_OO_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_xor_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_xor_bb_b (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_xor_hh_h (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_xor_ii_i (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_xor_ll_l (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_bitwise_xor_qq_q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_ceil_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_ceil_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_ceil_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_ceil_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_ceil_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_conjugate_B_B (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_conjugate_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_conjugate_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_conjugate_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_conjugate_H_H (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_conjugate_I_I (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_conjugate_L_L (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_conjugate_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_conjugate_Q_Q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_conjugate_b_b (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_conjugate_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_conjugate_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_conjugate_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_conjugate_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_conjugate_h_h (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_conjugate_i_i (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_conjugate_l_l (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_conjugate_q_q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_copysign_dd_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_copysign_ee_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_copysign_ff_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_copysign_gg_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_cos_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_cos_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_cos_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_cos_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_cos_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_cos_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_cos_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_cos_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_cosh_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_cosh_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_cosh_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_cosh_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_cosh_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_cosh_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_cosh_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_cosh_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_deg2rad_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_deg2rad_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_deg2rad_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_deg2rad_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_deg2rad_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_degrees_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_degrees_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_degrees_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_degrees_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_degrees_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_divide_BB_B (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_divide_DD_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_divide_FF_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_divide_GG_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_divide_HH_H (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_divide_II_I (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_divide_LL_L (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_divide_OO_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_divide_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_divide_bb_b (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_divide_dd_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_divide_ee_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_divide_ff_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_divide_gg_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_divide_hh_h (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_divide_ii_i (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_divide_ll_l (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_divide_md_m (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_divide_mm_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_divide_mq_m (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_divide_qq_q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_equal_??_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_equal_BB_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_equal_DD_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_equal_FF_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_equal_GG_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_equal_HH_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_equal_II_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_equal_LL_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_equal_MM_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_equal_OO_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_equal_QQ_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_equal_bb_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_equal_dd_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_equal_ee_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_equal_ff_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_equal_gg_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_equal_hh_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_equal_ii_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_equal_ll_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_equal_mm_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_equal_qq_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_exp2_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_exp2_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_exp2_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_exp2_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_exp2_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_exp2_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_exp2_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_exp2_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_exp_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_exp_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_exp_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_exp_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_exp_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_exp_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_exp_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_exp_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_expm1_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_expm1_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_expm1_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_expm1_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_expm1_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_expm1_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_expm1_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_expm1_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fabs_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fabs_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fabs_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fabs_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fabs_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_floor_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_floor_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_floor_divide_BB_B (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_floor_divide_DD_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in floor_divide
  
ok
test_floor_divide_FF_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_floor_divide_GG_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_floor_divide_HH_H (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_floor_divide_II_I (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_floor_divide_LL_L (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_floor_divide_OO_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_floor_divide_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_floor_divide_bb_b (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_floor_divide_dd_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_floor_divide_ee_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_floor_divide_ff_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_floor_divide_gg_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_floor_divide_hh_h (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_floor_divide_ii_i (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_floor_divide_ll_l (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_floor_divide_md_m (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_floor_divide_mq_m (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_floor_divide_qq_q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_floor_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_floor_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_floor_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmax_??_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmax_BB_B (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmax_DD_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmax_FF_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmax_GG_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmax_HH_H (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmax_II_I (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmax_LL_L (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmax_MM_M (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmax_OO_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmax_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmax_bb_b (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmax_dd_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmax_ee_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmax_ff_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmax_gg_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmax_hh_h (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmax_ii_i (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmax_ll_l (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmax_mm_m (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmax_qq_q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmin_??_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmin_BB_B (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmin_DD_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmin_FF_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmin_GG_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmin_HH_H (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmin_II_I (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmin_LL_L (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmin_MM_M (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmin_OO_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmin_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmin_bb_b (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmin_dd_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmin_ee_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmin_ff_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmin_gg_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmin_hh_h (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmin_ii_i (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmin_ll_l (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmin_mm_m (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmin_qq_q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmod_BB_B (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmod_HH_H (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmod_II_I (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmod_LL_L (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmod_OO_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmod_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmod_bb_b (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmod_dd_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmod_ee_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmod_ff_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmod_gg_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmod_hh_h (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmod_ii_i (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmod_ll_l (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_fmod_qq_q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_??_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_BB_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_DD_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_FF_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_GG_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_HH_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_II_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_LL_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_MM_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_OO_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_QQ_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_bb_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_dd_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_ee_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_equal_??_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_equal_BB_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_equal_DD_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_equal_FF_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_equal_GG_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_equal_HH_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_equal_II_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_equal_LL_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_equal_MM_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_equal_OO_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_equal_QQ_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_equal_bb_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_equal_dd_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_equal_ee_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_equal_ff_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_equal_gg_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_equal_hh_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_equal_ii_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_equal_ll_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_equal_mm_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_equal_qq_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_ff_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_gg_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_hh_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_ii_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_ll_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_mm_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_greater_qq_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_hypot_OO_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_hypot_dd_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_hypot_ee_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_hypot_ff_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_hypot_gg_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_invert_?_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_invert_B_B (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_invert_H_H (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_invert_I_I (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_invert_L_L (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_invert_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_invert_Q_Q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_invert_b_b (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_invert_h_h (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_invert_i_i (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_invert_l_l (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_invert_q_q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_isfinite_D_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_isfinite_F_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_isfinite_G_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_isfinite_d_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_isfinite_e_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_isfinite_f_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_isfinite_g_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_isinf_D_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_isinf_F_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_isinf_G_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_isinf_d_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_isinf_e_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_isinf_f_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_isinf_g_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_isnan_D_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_isnan_F_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_isnan_G_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_isnan_d_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_isnan_e_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_isnan_f_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_isnan_g_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_ldexp_di_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_ldexp_dl_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_ldexp_ei_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_ldexp_el_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_ldexp_fi_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_ldexp_fl_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_ldexp_gi_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_ldexp_gl_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_left_shift_BB_B (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_left_shift_HH_H (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_left_shift_II_I (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_left_shift_LL_L (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_left_shift_OO_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_left_shift_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_left_shift_bb_b (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_left_shift_hh_h (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_left_shift_ii_i (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_left_shift_ll_l (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_left_shift_qq_q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_??_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_BB_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_DD_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_FF_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_GG_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_HH_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_II_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_LL_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_MM_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_OO_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_QQ_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_bb_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_dd_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_ee_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_equal_??_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_equal_BB_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_equal_DD_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_equal_FF_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_equal_GG_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_equal_HH_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_equal_II_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_equal_LL_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_equal_MM_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_equal_OO_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_equal_QQ_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_equal_bb_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_equal_dd_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_equal_ee_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_equal_ff_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_equal_gg_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_equal_hh_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_equal_ii_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_equal_ll_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_equal_mm_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_equal_qq_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_ff_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_gg_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_hh_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_ii_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_ll_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_mm_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_less_qq_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log10_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: divide by zero encountered in log10
  
ok
test_log10_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log10_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log10_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log10_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log10_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log10_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log10_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log1p_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log1p_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log1p_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log1p_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log1p_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log1p_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log1p_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log1p_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log2_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: divide by zero encountered in log2
  
ok
test_log2_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log2_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log2_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log2_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log2_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log2_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log2_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: divide by zero encountered in log
  
ok
test_log_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_log_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logaddexp2_dd_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logaddexp2_ee_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logaddexp2_ff_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logaddexp2_gg_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logaddexp_dd_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logaddexp_ee_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logaddexp_ff_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logaddexp_gg_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_and_??_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_and_BB_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_and_DD_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_and_FF_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_and_GG_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_and_HH_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_and_II_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_and_LL_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_and_OO_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_and_QQ_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_and_bb_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_and_dd_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_and_ee_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_and_ff_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_and_gg_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_and_hh_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_and_ii_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_and_ll_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_and_qq_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_not_?_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_not_B_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_not_D_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_not_F_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_not_G_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_not_H_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_not_I_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_not_L_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_not_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_not_Q_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_not_b_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_not_d_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_not_e_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_not_f_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_not_g_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_not_h_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_not_i_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_not_l_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_not_q_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_or_??_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_or_BB_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_or_DD_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_or_FF_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_or_GG_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_or_HH_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_or_II_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_or_LL_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_or_OO_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_or_QQ_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_or_bb_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_or_dd_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_or_ee_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_or_ff_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_or_gg_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_or_hh_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_or_ii_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_or_ll_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_or_qq_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_xor_??_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_xor_BB_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_xor_DD_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_xor_FF_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_xor_GG_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_xor_HH_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_xor_II_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_xor_LL_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_xor_OO_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_xor_QQ_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_xor_bb_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_xor_dd_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_xor_ee_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_xor_ff_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_xor_gg_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_xor_hh_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_xor_ii_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_xor_ll_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_logical_xor_qq_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_maximum_??_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_maximum_BB_B (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_maximum_DD_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_maximum_FF_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_maximum_GG_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_maximum_HH_H (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_maximum_II_I (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_maximum_LL_L (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_maximum_MM_M (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_maximum_OO_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_maximum_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_maximum_bb_b (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_maximum_dd_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_maximum_ee_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_maximum_ff_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_maximum_gg_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_maximum_hh_h (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_maximum_ii_i (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_maximum_ll_l (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_maximum_mm_m (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_maximum_qq_q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_minimum_??_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_minimum_BB_B (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_minimum_DD_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_minimum_FF_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_minimum_GG_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_minimum_HH_H (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_minimum_II_I (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_minimum_LL_L (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_minimum_MM_M (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_minimum_OO_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_minimum_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_minimum_bb_b (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_minimum_dd_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_minimum_ee_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_minimum_ff_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_minimum_gg_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_minimum_hh_h (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_minimum_ii_i (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_minimum_ll_l (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_minimum_mm_m (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_minimum_qq_q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_multiply_??_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_multiply_BB_B (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_multiply_DD_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_multiply_FF_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_multiply_GG_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_multiply_HH_H (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_multiply_II_I (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_multiply_LL_L (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_multiply_OO_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_multiply_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_multiply_bb_b (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_multiply_dd_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_multiply_dm_m (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_multiply_ee_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_multiply_ff_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_multiply_gg_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_multiply_hh_h (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_multiply_ii_i (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_multiply_ll_l (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_multiply_md_m (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_multiply_mq_m (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_multiply_qm_m (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_multiply_qq_q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_negative_?_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_negative_B_B (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_negative_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_negative_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_negative_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_negative_H_H (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_negative_I_I (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_negative_L_L (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_negative_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_negative_Q_Q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_negative_b_b (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_negative_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_negative_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_negative_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_negative_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_negative_h_h (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_negative_i_i (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_negative_l_l (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_negative_m_m (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_negative_q_q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_nextafter_dd_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_nextafter_ee_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_nextafter_ff_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_nextafter_gg_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_not_equal_??_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_not_equal_BB_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_not_equal_DD_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_not_equal_FF_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_not_equal_GG_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_not_equal_HH_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_not_equal_II_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_not_equal_LL_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_not_equal_MM_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_not_equal_OO_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_not_equal_QQ_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_not_equal_bb_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_not_equal_dd_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_not_equal_ee_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_not_equal_ff_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_not_equal_gg_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_not_equal_hh_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_not_equal_ii_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_not_equal_ll_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_not_equal_mm_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_not_equal_qq_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_power_BB_B (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_power_DD_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_power_FF_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_power_GG_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_power_HH_H (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_power_II_I (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_power_LL_L (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_power_OO_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_power_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_power_bb_b (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_power_dd_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_power_ee_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_power_ff_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_power_gg_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_power_hh_h (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_power_ii_i (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_power_ll_l (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_power_qq_q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_rad2deg_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_rad2deg_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_rad2deg_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_rad2deg_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_rad2deg_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_radians_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_radians_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_radians_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_radians_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_radians_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_reciprocal_B_B (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_reciprocal_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in reciprocal
  
ok
test_reciprocal_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_reciprocal_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_reciprocal_H_H (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_reciprocal_I_I (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_reciprocal_L_L (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_reciprocal_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_reciprocal_Q_Q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_reciprocal_b_b (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_reciprocal_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_reciprocal_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_reciprocal_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_reciprocal_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_reciprocal_h_h (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_reciprocal_i_i (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_reciprocal_l_l (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_reciprocal_q_q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_remainder_BB_B (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_remainder_HH_H (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_remainder_II_I (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_remainder_LL_L (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_remainder_OO_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_remainder_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_remainder_bb_b (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_remainder_dd_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_remainder_ee_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_remainder_ff_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_remainder_gg_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_remainder_hh_h (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_remainder_ii_i (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_remainder_ll_l (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_remainder_qq_q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_right_shift_BB_B (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_right_shift_HH_H (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_right_shift_II_I (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_right_shift_LL_L (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_right_shift_OO_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_right_shift_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_right_shift_bb_b (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_right_shift_hh_h (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_right_shift_ii_i (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_right_shift_ll_l (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_right_shift_qq_q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_rint_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_rint_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_rint_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_rint_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_rint_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_rint_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_rint_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_rint_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sign_B_B (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sign_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sign_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sign_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sign_H_H (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sign_I_I (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sign_L_L (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sign_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sign_Q_Q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sign_b_b (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sign_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sign_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sign_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sign_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sign_h_h (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sign_i_i (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sign_l_l (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sign_m_m (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sign_q_q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_signbit_d_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_signbit_e_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_signbit_f_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_signbit_g_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sin_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sin_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sin_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sin_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sin_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sin_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sin_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sin_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sinh_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sinh_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sinh_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sinh_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sinh_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sinh_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sinh_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sinh_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_spacing_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_spacing_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_spacing_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_spacing_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sqrt_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sqrt_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sqrt_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sqrt_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sqrt_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sqrt_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sqrt_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_sqrt_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_square_B_B (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_square_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_square_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_square_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_square_H_H (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_square_I_I (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_square_L_L (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_square_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_square_Q_Q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_square_b_b (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_square_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_square_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_square_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_square_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_square_h_h (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_square_i_i (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_square_l_l (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_square_q_q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_subtract_??_? (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_subtract_BB_B (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_subtract_DD_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_subtract_FF_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_subtract_GG_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_subtract_HH_H (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_subtract_II_I (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_subtract_LL_L (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_subtract_MM_m (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_subtract_Mm_M (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_subtract_OO_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_subtract_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_subtract_bb_b (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_subtract_dd_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_subtract_ee_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_subtract_ff_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_subtract_gg_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_subtract_hh_h (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_subtract_ii_i (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_subtract_ll_l (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_subtract_mm_m (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_subtract_qq_q (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_tan_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_tan_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_tan_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_tan_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_tan_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_tan_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_tan_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_tan_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_tanh_D_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_tanh_F_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_tanh_G_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_tanh_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_tanh_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_tanh_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_tanh_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_tanh_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_true_divide_BB_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_true_divide_DD_D (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in true_divide
  
ok
test_true_divide_FF_F (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_true_divide_GG_G (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_true_divide_HH_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_true_divide_II_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_true_divide_LL_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_true_divide_OO_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_true_divide_QQ_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_true_divide_bb_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_true_divide_dd_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_true_divide_ee_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_true_divide_ff_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_true_divide_gg_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_true_divide_hh_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_true_divide_ii_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_true_divide_ll_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_true_divide_md_m (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_true_divide_mm_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_true_divide_mq_m (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_true_divide_qq_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_trunc_O_O (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_trunc_d_d (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_trunc_e_e (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_trunc_f_f (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_trunc_g_g (numba.tests.test_ufuncs.TestLoopTypesComplexNoPython) ... ok
test_absolute_?_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_absolute_B_B (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_absolute_D_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_absolute_F_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_absolute_G_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_absolute_H_H (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_absolute_I_I (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_absolute_L_L (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_absolute_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_absolute_Q_Q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_absolute_b_b (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_absolute_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_absolute_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_absolute_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_absolute_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_absolute_h_h (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_absolute_i_i (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_absolute_l_l (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_absolute_m_m (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... /home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py:737: FutureWarning: In the future, NAT != NAT will be True rather than False.
  v = data[not_equal(data, nat_value)].view('i8')
/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py:751: FutureWarning: In the future, 'NAT == x' and 'x == NAT' will always be False.
  if x + 1 == x:
ok
test_absolute_q_q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_add (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_add_??_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_add_BB_B (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_add_DD_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_add_FF_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_add_GG_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_add_HH_H (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_add_II_I (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_add_LL_L (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_add_Mm_M (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ERROR
test_add_OO_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_add_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_add_bb_b (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_add_dd_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_add_ee_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_add_ff_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_add_gg_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_add_hh_h (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_add_ii_i (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_add_ll_l (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_add_mM_M (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ERROR
test_add_mm_m (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_add_qq_q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arccos_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arccos_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arccos_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arccos_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arccos_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arccos_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arccos_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arccos_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arccosh_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arccosh_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arccosh_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arccosh_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arccosh_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arccosh_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arccosh_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arccosh_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arcsin_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arcsin_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arcsin_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arcsin_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arcsin_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arcsin_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arcsin_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arcsin_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arcsinh_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arcsinh_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arcsinh_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arcsinh_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arcsinh_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arcsinh_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arcsinh_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arcsinh_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arctan2_OO_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arctan2_dd_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arctan2_ee_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arctan2_ff_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arctan2_gg_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arctan_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arctan_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arctan_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arctan_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arctan_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arctan_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arctan_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arctan_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arctanh_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arctanh_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arctanh_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arctanh_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arctanh_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arctanh_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arctanh_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_arctanh_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_and_??_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_and_BB_B (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_and_HH_H (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_and_II_I (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_and_LL_L (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_and_OO_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_and_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_and_bb_b (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_and_hh_h (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_and_ii_i (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_and_ll_l (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_and_qq_q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_or_??_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_or_BB_B (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_or_HH_H (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_or_II_I (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_or_LL_L (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_or_OO_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_or_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_or_bb_b (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_or_hh_h (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_or_ii_i (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_or_ll_l (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_or_qq_q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_xor_??_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_xor_BB_B (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_xor_HH_H (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_xor_II_I (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_xor_LL_L (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_xor_OO_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_xor_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_xor_bb_b (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_xor_hh_h (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_xor_ii_i (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_xor_ll_l (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_bitwise_xor_qq_q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_ceil_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_ceil_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_ceil_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_ceil_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_ceil_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_comparisons (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ERROR
test_conjugate_B_B (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_conjugate_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_conjugate_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_conjugate_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_conjugate_H_H (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_conjugate_I_I (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_conjugate_L_L (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_conjugate_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_conjugate_Q_Q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_conjugate_b_b (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_conjugate_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_conjugate_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_conjugate_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_conjugate_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_conjugate_h_h (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_conjugate_i_i (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_conjugate_l_l (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_conjugate_q_q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_copysign_dd_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_copysign_ee_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_copysign_ff_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_copysign_gg_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_cos_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_cos_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_cos_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_cos_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_cos_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_cos_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_cos_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_cos_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_cosh_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_cosh_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_cosh_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_cosh_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_cosh_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_cosh_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_cosh_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_cosh_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_deg2rad_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_deg2rad_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_deg2rad_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_deg2rad_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_deg2rad_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_degrees_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_degrees_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_degrees_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_degrees_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_degrees_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_divide_BB_B (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_divide_DD_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_divide_FF_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_divide_GG_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_divide_HH_H (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_divide_II_I (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_divide_LL_L (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_divide_OO_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_divide_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_divide_bb_b (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_divide_dd_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_divide_ee_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_divide_ff_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_divide_gg_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_divide_hh_h (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_divide_ii_i (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_divide_ll_l (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_divide_md_m (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_divide_mm_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_divide_mq_m (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_divide_qq_q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_equal_??_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_equal_BB_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_equal_DD_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_equal_FF_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_equal_GG_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_equal_HH_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_equal_II_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_equal_LL_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_equal_MM_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: FutureWarning: In the future, 'NAT == x' and 'x == NAT' will always be False.
  
ERROR
test_equal_OO_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_equal_QQ_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_equal_bb_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_equal_dd_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_equal_ee_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_equal_ff_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_equal_gg_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_equal_hh_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_equal_ii_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_equal_ll_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_equal_mm_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_equal_qq_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_exp2_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_exp2_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_exp2_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_exp2_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_exp2_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_exp2_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_exp2_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_exp2_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_exp_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_exp_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_exp_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_exp_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_exp_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_exp_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_exp_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_exp_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_expm1_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_expm1_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_expm1_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_expm1_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_expm1_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_expm1_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_expm1_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_expm1_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fabs_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fabs_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fabs_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fabs_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fabs_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_divide (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_divide_BB_B (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_divide_DD_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_divide_FF_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_divide_GG_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_divide_HH_H (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_divide_II_I (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_divide_LL_L (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_divide_OO_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_divide_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_divide_bb_b (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_divide_dd_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_divide_ee_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_divide_ff_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_divide_gg_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_divide_hh_h (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_divide_ii_i (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_divide_ll_l (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_divide_md_m (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_divide_mq_m (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_divide_qq_q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_floor_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmax_??_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmax_BB_B (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmax_DD_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmax_FF_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmax_GG_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmax_HH_H (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmax_II_I (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmax_LL_L (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmax_MM_M (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ERROR
test_fmax_OO_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmax_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmax_bb_b (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmax_dd_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmax_ee_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmax_ff_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmax_gg_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmax_hh_h (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmax_ii_i (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmax_ll_l (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmax_mm_m (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmax_qq_q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmin_??_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmin_BB_B (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmin_DD_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmin_FF_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmin_GG_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmin_HH_H (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmin_II_I (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmin_LL_L (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmin_MM_M (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ERROR
test_fmin_OO_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmin_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmin_bb_b (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmin_dd_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmin_ee_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmin_ff_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmin_gg_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmin_hh_h (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmin_ii_i (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmin_ll_l (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmin_mm_m (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmin_qq_q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmod_BB_B (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmod_HH_H (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmod_II_I (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmod_LL_L (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmod_OO_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmod_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmod_bb_b (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmod_dd_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmod_ee_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmod_ff_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmod_gg_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmod_hh_h (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmod_ii_i (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmod_ll_l (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_fmod_qq_q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_??_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_BB_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_DD_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_FF_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_GG_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_HH_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_II_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_LL_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_MM_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: FutureWarning: In the future, 'NAT > x' and 'x > NAT' will always be False.
  
ERROR
test_greater_OO_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_QQ_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_bb_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_dd_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_ee_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_equal_??_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_equal_BB_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_equal_DD_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_equal_FF_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_equal_GG_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_equal_HH_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_equal_II_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_equal_LL_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_equal_MM_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: FutureWarning: In the future, 'NAT >= x' and 'x >= NAT' will always be False.
  
ERROR
test_greater_equal_OO_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_equal_QQ_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_equal_bb_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_equal_dd_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_equal_ee_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_equal_ff_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_equal_gg_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_equal_hh_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_equal_ii_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_equal_ll_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_equal_mm_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_equal_qq_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_ff_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_gg_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_hh_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_ii_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_ll_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_mm_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_greater_qq_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_hypot_OO_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_hypot_dd_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_hypot_ee_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_hypot_ff_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_hypot_gg_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_invert_?_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_invert_B_B (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_invert_H_H (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_invert_I_I (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_invert_L_L (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_invert_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_invert_Q_Q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_invert_b_b (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_invert_h_h (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_invert_i_i (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_invert_l_l (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_invert_q_q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_isfinite_D_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_isfinite_F_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_isfinite_G_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_isfinite_d_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_isfinite_e_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_isfinite_f_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_isfinite_g_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_isinf_D_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_isinf_F_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_isinf_G_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_isinf_d_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_isinf_e_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_isinf_f_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_isinf_g_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_isnan_D_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_isnan_F_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_isnan_G_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_isnan_d_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_isnan_e_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_isnan_f_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_isnan_g_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_ldexp_di_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_ldexp_dl_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_ldexp_ei_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_ldexp_el_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_ldexp_fi_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_ldexp_fl_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_ldexp_gi_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_ldexp_gl_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_left_shift_BB_B (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_left_shift_HH_H (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_left_shift_II_I (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_left_shift_LL_L (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_left_shift_OO_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_left_shift_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_left_shift_bb_b (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_left_shift_hh_h (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_left_shift_ii_i (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_left_shift_ll_l (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_left_shift_qq_q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_??_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_BB_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_DD_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_FF_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_GG_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_HH_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_II_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_LL_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_MM_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: FutureWarning: In the future, 'NAT < x' and 'x < NAT' will always be False.
  
ERROR
test_less_OO_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_QQ_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_bb_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_dd_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_ee_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_equal_??_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_equal_BB_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_equal_DD_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_equal_FF_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_equal_GG_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_equal_HH_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_equal_II_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_equal_LL_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_equal_MM_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: FutureWarning: In the future, 'NAT <= x' and 'x <= NAT' will always be False.
  
ERROR
test_less_equal_OO_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_equal_QQ_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_equal_bb_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_equal_dd_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_equal_ee_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_equal_ff_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_equal_gg_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_equal_hh_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_equal_ii_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_equal_ll_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_equal_mm_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_equal_qq_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_ff_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_gg_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_hh_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_ii_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_ll_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_mm_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_less_qq_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log10_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log10_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log10_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log10_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log10_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log10_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log10_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log10_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log1p_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log1p_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log1p_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log1p_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log1p_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log1p_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log1p_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log1p_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log2_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log2_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log2_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log2_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log2_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log2_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log2_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log2_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_log_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logaddexp2_dd_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logaddexp2_ee_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logaddexp2_ff_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logaddexp2_gg_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logaddexp_dd_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logaddexp_ee_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logaddexp_ff_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logaddexp_gg_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_and_??_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_and_BB_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_and_DD_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_and_FF_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_and_GG_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_and_HH_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_and_II_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_and_LL_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_and_OO_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_and_QQ_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_and_bb_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_and_dd_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_and_ee_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_and_ff_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_and_gg_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_and_hh_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_and_ii_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_and_ll_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_and_qq_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_not_?_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_not_B_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_not_D_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_not_F_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_not_G_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_not_H_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_not_I_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_not_L_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_not_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_not_Q_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_not_b_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_not_d_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_not_e_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_not_f_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_not_g_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_not_h_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_not_i_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_not_l_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_not_q_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_or_??_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_or_BB_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_or_DD_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_or_FF_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_or_GG_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_or_HH_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_or_II_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_or_LL_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_or_OO_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_or_QQ_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_or_bb_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_or_dd_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_or_ee_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_or_ff_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_or_gg_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_or_hh_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_or_ii_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_or_ll_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_or_qq_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_xor_??_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_xor_BB_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_xor_DD_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_xor_FF_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_xor_GG_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_xor_HH_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_xor_II_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_xor_LL_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_xor_OO_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_xor_QQ_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_xor_bb_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_xor_dd_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_xor_ee_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_xor_ff_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_xor_gg_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_xor_hh_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_xor_ii_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_xor_ll_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_logical_xor_qq_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_maximum_??_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_maximum_BB_B (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_maximum_DD_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_maximum_FF_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_maximum_GG_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_maximum_HH_H (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_maximum_II_I (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_maximum_LL_L (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_maximum_MM_M (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ERROR
test_maximum_OO_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_maximum_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_maximum_bb_b (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_maximum_dd_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_maximum_ee_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_maximum_ff_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_maximum_gg_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_maximum_hh_h (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_maximum_ii_i (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_maximum_ll_l (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_maximum_mm_m (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_maximum_qq_q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_minimum_??_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_minimum_BB_B (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_minimum_DD_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_minimum_FF_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_minimum_GG_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_minimum_HH_H (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_minimum_II_I (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_minimum_LL_L (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_minimum_MM_M (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ERROR
test_minimum_OO_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_minimum_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_minimum_bb_b (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_minimum_dd_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_minimum_ee_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_minimum_ff_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_minimum_gg_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_minimum_hh_h (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_minimum_ii_i (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_minimum_ll_l (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_minimum_mm_m (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_minimum_qq_q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_multiply (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_multiply_??_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_multiply_BB_B (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_multiply_DD_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_multiply_FF_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_multiply_GG_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_multiply_HH_H (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_multiply_II_I (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_multiply_LL_L (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_multiply_OO_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_multiply_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_multiply_bb_b (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_multiply_dd_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_multiply_dm_m (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_multiply_ee_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_multiply_ff_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_multiply_gg_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_multiply_hh_h (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_multiply_ii_i (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_multiply_ll_l (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_multiply_md_m (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_multiply_mq_m (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_multiply_qm_m (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_multiply_qq_q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_negative_?_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_negative_B_B (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_negative_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_negative_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_negative_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_negative_H_H (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_negative_I_I (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_negative_L_L (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_negative_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_negative_Q_Q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_negative_b_b (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_negative_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_negative_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_negative_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_negative_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_negative_h_h (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_negative_i_i (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_negative_l_l (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_negative_m_m (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_negative_q_q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_nextafter_dd_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_nextafter_ee_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_nextafter_ff_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_nextafter_gg_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_not_equal_??_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_not_equal_BB_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_not_equal_DD_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_not_equal_FF_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_not_equal_GG_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_not_equal_HH_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_not_equal_II_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_not_equal_LL_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_not_equal_MM_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: FutureWarning: In the future, NAT != NAT will be True rather than False.
  
ERROR
test_not_equal_OO_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_not_equal_QQ_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_not_equal_bb_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_not_equal_dd_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_not_equal_ee_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_not_equal_ff_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_not_equal_gg_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_not_equal_hh_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_not_equal_ii_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_not_equal_ll_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_not_equal_mm_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_not_equal_qq_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_power_BB_B (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_power_DD_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_power_FF_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_power_GG_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_power_HH_H (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_power_II_I (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_power_LL_L (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_power_OO_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_power_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_power_bb_b (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_power_dd_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_power_ee_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_power_ff_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_power_gg_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_power_hh_h (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_power_ii_i (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_power_ll_l (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_power_qq_q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_rad2deg_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_rad2deg_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_rad2deg_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_rad2deg_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_rad2deg_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_radians_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_radians_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_radians_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_radians_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_radians_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_reciprocal_B_B (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_reciprocal_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_reciprocal_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_reciprocal_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_reciprocal_H_H (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_reciprocal_I_I (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_reciprocal_L_L (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_reciprocal_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_reciprocal_Q_Q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_reciprocal_b_b (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_reciprocal_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_reciprocal_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_reciprocal_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_reciprocal_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_reciprocal_h_h (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_reciprocal_i_i (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_reciprocal_l_l (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_reciprocal_q_q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_remainder_BB_B (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_remainder_HH_H (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_remainder_II_I (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_remainder_LL_L (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_remainder_OO_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_remainder_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_remainder_bb_b (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_remainder_dd_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_remainder_ee_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_remainder_ff_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_remainder_gg_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_remainder_hh_h (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_remainder_ii_i (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_remainder_ll_l (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_remainder_qq_q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_right_shift_BB_B (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_right_shift_HH_H (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_right_shift_II_I (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_right_shift_LL_L (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_right_shift_OO_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_right_shift_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_right_shift_bb_b (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_right_shift_hh_h (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_right_shift_ii_i (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_right_shift_ll_l (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_right_shift_qq_q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_rint_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_rint_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_rint_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_rint_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_rint_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_rint_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_rint_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_rint_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sign_B_B (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sign_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sign_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sign_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sign_H_H (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sign_I_I (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sign_L_L (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sign_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sign_Q_Q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sign_b_b (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sign_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sign_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sign_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sign_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sign_h_h (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sign_i_i (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sign_l_l (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sign_m_m (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sign_q_q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_signbit_d_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_signbit_e_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_signbit_f_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_signbit_g_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sin_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sin_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sin_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sin_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sin_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sin_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sin_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sin_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sinh_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sinh_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sinh_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sinh_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sinh_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sinh_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sinh_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sinh_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_spacing_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_spacing_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_spacing_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_spacing_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sqrt_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sqrt_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sqrt_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sqrt_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sqrt_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sqrt_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sqrt_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_sqrt_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_square_B_B (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_square_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_square_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_square_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_square_H_H (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_square_I_I (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_square_L_L (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_square_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_square_Q_Q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_square_b_b (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_square_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_square_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_square_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_square_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_square_h_h (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_square_i_i (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_square_l_l (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_square_q_q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_subtract (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ERROR
test_subtract_??_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_subtract_BB_B (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_subtract_DD_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_subtract_FF_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_subtract_GG_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_subtract_HH_H (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_subtract_II_I (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_subtract_LL_L (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_subtract_MM_m (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ERROR
test_subtract_Mm_M (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ERROR
test_subtract_OO_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_subtract_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_subtract_bb_b (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_subtract_dd_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_subtract_ee_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_subtract_ff_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_subtract_gg_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_subtract_hh_h (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_subtract_ii_i (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_subtract_ll_l (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_subtract_mm_m (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_subtract_qq_q (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_tan_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_tan_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_tan_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_tan_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_tan_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_tan_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_tan_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_tan_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_tanh_D_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_tanh_F_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_tanh_G_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_tanh_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_tanh_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_tanh_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_tanh_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_tanh_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_true_divide (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: divide by zero encountered in true_divide
  
ok
test_true_divide_BB_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_true_divide_DD_D (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_true_divide_FF_F (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_true_divide_GG_G (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_true_divide_HH_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_true_divide_II_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_true_divide_LL_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_true_divide_OO_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_true_divide_QQ_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_true_divide_bb_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_true_divide_dd_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_true_divide_ee_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_true_divide_ff_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_true_divide_gg_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_true_divide_hh_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_true_divide_ii_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_true_divide_ll_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_true_divide_md_m (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_true_divide_mm_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_true_divide_mq_m (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_true_divide_qq_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_trunc_O_O (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_trunc_d_d (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_trunc_e_e (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_trunc_f_f (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_trunc_g_g (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython) ... ok
test_absolute_?_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_absolute_B_B (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_absolute_D_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_absolute_F_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_absolute_G_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_absolute_H_H (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_absolute_I_I (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_absolute_L_L (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_absolute_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_absolute_Q_Q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_absolute_b_b (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_absolute_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_absolute_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_absolute_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_absolute_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_absolute_h_h (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_absolute_i_i (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_absolute_l_l (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_absolute_m_m (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_absolute_q_q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_add_??_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_add_BB_B (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_add_DD_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_add_FF_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_add_GG_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_add_HH_H (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_add_II_I (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_add_LL_L (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_add_Mm_M (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_add_OO_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_add_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_add_bb_b (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_add_dd_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_add_ee_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_add_ff_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_add_gg_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_add_hh_h (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_add_ii_i (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_add_ll_l (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_add_mM_M (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_add_mm_m (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_add_qq_q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arccos_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arccos_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arccos_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arccos_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arccos_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in arccos
  
ok
test_arccos_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arccos_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arccos_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arccosh_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arccosh_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arccosh_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arccosh_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arccosh_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in arccosh
  
ok
test_arccosh_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arccosh_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arccosh_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arcsin_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arcsin_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arcsin_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arcsin_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arcsin_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in arcsin
  
ok
test_arcsin_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arcsin_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arcsin_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arcsinh_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arcsinh_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arcsinh_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arcsinh_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arcsinh_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arcsinh_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arcsinh_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arcsinh_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arctan2_OO_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arctan2_dd_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arctan2_ee_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arctan2_ff_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arctan2_gg_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arctan_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arctan_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arctan_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arctan_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arctan_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arctan_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arctan_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arctan_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arctanh_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arctanh_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arctanh_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arctanh_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arctanh_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in arctanh
  
ok
test_arctanh_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arctanh_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_arctanh_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_and_??_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_and_BB_B (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_and_HH_H (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_and_II_I (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_and_LL_L (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_and_OO_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_and_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_and_bb_b (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_and_hh_h (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_and_ii_i (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_and_ll_l (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_and_qq_q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_or_??_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_or_BB_B (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_or_HH_H (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_or_II_I (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_or_LL_L (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_or_OO_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_or_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_or_bb_b (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_or_hh_h (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_or_ii_i (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_or_ll_l (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_or_qq_q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_xor_??_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_xor_BB_B (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_xor_HH_H (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_xor_II_I (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_xor_LL_L (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_xor_OO_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_xor_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_xor_bb_b (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_xor_hh_h (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_xor_ii_i (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_xor_ll_l (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_bitwise_xor_qq_q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_ceil_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_ceil_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_ceil_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_ceil_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_ceil_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_conjugate_B_B (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_conjugate_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_conjugate_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_conjugate_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_conjugate_H_H (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_conjugate_I_I (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_conjugate_L_L (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_conjugate_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_conjugate_Q_Q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_conjugate_b_b (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_conjugate_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_conjugate_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_conjugate_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_conjugate_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_conjugate_h_h (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_conjugate_i_i (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_conjugate_l_l (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_conjugate_q_q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_copysign_dd_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_copysign_ee_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_copysign_ff_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_copysign_gg_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_cos_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_cos_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_cos_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_cos_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_cos_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_cos_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_cos_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_cos_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_cosh_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_cosh_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_cosh_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_cosh_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_cosh_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_cosh_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_cosh_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_cosh_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_deg2rad_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_deg2rad_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_deg2rad_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_deg2rad_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_deg2rad_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_degrees_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_degrees_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_degrees_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_degrees_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_degrees_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_divide_BB_B (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_divide_DD_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_divide_FF_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_divide_GG_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_divide_HH_H (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_divide_II_I (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_divide_LL_L (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_divide_OO_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_divide_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_divide_bb_b (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_divide_dd_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_divide_ee_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_divide_ff_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_divide_gg_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_divide_hh_h (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_divide_ii_i (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_divide_ll_l (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_divide_md_m (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_divide_mm_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_divide_mq_m (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_divide_qq_q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_equal_??_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_equal_BB_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_equal_DD_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_equal_FF_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_equal_GG_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_equal_HH_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_equal_II_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_equal_LL_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_equal_MM_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_equal_OO_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_equal_QQ_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_equal_bb_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_equal_dd_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_equal_ee_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_equal_ff_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_equal_gg_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_equal_hh_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_equal_ii_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_equal_ll_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_equal_mm_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_equal_qq_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_exp2_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_exp2_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_exp2_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_exp2_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_exp2_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_exp2_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_exp2_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_exp2_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_exp_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_exp_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_exp_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_exp_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_exp_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_exp_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_exp_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_exp_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_expm1_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_expm1_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_expm1_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_expm1_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_expm1_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_expm1_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_expm1_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_expm1_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fabs_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fabs_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fabs_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fabs_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fabs_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_floor_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_floor_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_floor_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_floor_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_floor_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmax_??_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmax_BB_B (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmax_DD_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmax_FF_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmax_GG_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmax_HH_H (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmax_II_I (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmax_LL_L (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmax_MM_M (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmax_OO_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmax_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmax_bb_b (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmax_dd_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmax_ee_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmax_ff_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmax_gg_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmax_hh_h (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmax_ii_i (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmax_ll_l (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmax_mm_m (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmax_qq_q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmin_??_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmin_BB_B (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmin_DD_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmin_FF_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmin_GG_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmin_HH_H (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmin_II_I (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmin_LL_L (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmin_MM_M (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmin_OO_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmin_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmin_bb_b (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmin_dd_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmin_ee_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmin_ff_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmin_gg_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmin_hh_h (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmin_ii_i (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmin_ll_l (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmin_mm_m (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmin_qq_q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmod_BB_B (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmod_HH_H (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmod_II_I (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmod_LL_L (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmod_OO_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmod_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmod_bb_b (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmod_dd_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in fmod
  
ok
test_fmod_ee_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmod_ff_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmod_gg_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmod_hh_h (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmod_ii_i (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmod_ll_l (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_fmod_qq_q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_??_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_BB_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_DD_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_FF_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_GG_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_HH_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_II_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_LL_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_MM_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_OO_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_QQ_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_bb_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_dd_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in greater
  
ok
test_greater_ee_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_equal_??_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_equal_BB_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_equal_DD_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_equal_FF_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_equal_GG_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_equal_HH_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_equal_II_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_equal_LL_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_equal_MM_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_equal_OO_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_equal_QQ_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_equal_bb_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_equal_dd_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in greater_equal
  
ok
test_greater_equal_ee_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_equal_ff_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_equal_gg_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_equal_hh_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_equal_ii_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_equal_ll_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_equal_mm_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_equal_qq_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_ff_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_gg_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_hh_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_ii_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_ll_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_mm_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_greater_qq_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_hypot_OO_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_hypot_dd_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_hypot_ee_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_hypot_ff_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_hypot_gg_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_invert_?_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_invert_B_B (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_invert_H_H (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_invert_I_I (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_invert_L_L (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_invert_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_invert_Q_Q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_invert_b_b (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_invert_h_h (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_invert_i_i (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_invert_l_l (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_invert_q_q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_isfinite_D_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_isfinite_F_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_isfinite_G_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_isfinite_d_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_isfinite_e_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_isfinite_f_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_isfinite_g_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_isinf_D_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_isinf_F_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_isinf_G_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_isinf_d_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_isinf_e_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_isinf_f_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_isinf_g_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_isnan_D_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_isnan_F_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_isnan_G_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_isnan_d_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_isnan_e_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_isnan_f_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_isnan_g_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_ldexp_di_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_ldexp_dl_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_ldexp_ei_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_ldexp_el_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_ldexp_fi_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_ldexp_fl_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_ldexp_gi_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_ldexp_gl_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_left_shift_BB_B (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_left_shift_HH_H (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_left_shift_II_I (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_left_shift_LL_L (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_left_shift_OO_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_left_shift_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_left_shift_bb_b (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_left_shift_hh_h (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_left_shift_ii_i (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_left_shift_ll_l (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_left_shift_qq_q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_??_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_BB_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_DD_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_FF_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_GG_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_HH_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_II_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_LL_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_MM_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_OO_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_QQ_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_bb_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_dd_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in less
  
ok
test_less_ee_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_equal_??_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_equal_BB_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_equal_DD_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_equal_FF_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_equal_GG_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_equal_HH_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_equal_II_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_equal_LL_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_equal_MM_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_equal_OO_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_equal_QQ_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_equal_bb_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_equal_dd_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in less_equal
  
ok
test_less_equal_ee_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_equal_ff_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_equal_gg_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_equal_hh_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_equal_ii_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_equal_ll_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_equal_mm_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_equal_qq_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_ff_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_gg_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_hh_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_ii_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_ll_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_mm_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_less_qq_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log10_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log10_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log10_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log10_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log10_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in log10
  
ok
test_log10_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log10_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log10_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log1p_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log1p_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log1p_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log1p_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log1p_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in log1p
  
ok
test_log1p_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log1p_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log1p_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log2_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log2_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log2_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log2_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log2_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in log2
  
ok
test_log2_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log2_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log2_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in log
  
ok
test_log_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_log_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logaddexp2_dd_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logaddexp2_ee_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logaddexp2_ff_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logaddexp2_gg_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logaddexp_dd_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logaddexp_ee_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logaddexp_ff_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logaddexp_gg_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_and_??_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_and_BB_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_and_DD_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_and_FF_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_and_GG_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_and_HH_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_and_II_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_and_LL_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_and_OO_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_and_QQ_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_and_bb_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_and_dd_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_and_ee_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_and_ff_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_and_gg_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_and_hh_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_and_ii_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_and_ll_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_and_qq_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_not_?_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_not_B_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_not_D_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_not_F_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_not_G_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_not_H_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_not_I_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_not_L_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_not_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_not_Q_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_not_b_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_not_d_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_not_e_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_not_f_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_not_g_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_not_h_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_not_i_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_not_l_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_not_q_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_or_??_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_or_BB_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_or_DD_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_or_FF_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_or_GG_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_or_HH_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_or_II_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_or_LL_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_or_OO_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_or_QQ_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_or_bb_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_or_dd_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_or_ee_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_or_ff_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_or_gg_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_or_hh_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_or_ii_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_or_ll_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_or_qq_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_xor_??_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_xor_BB_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_xor_DD_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_xor_FF_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_xor_GG_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_xor_HH_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_xor_II_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_xor_LL_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_xor_OO_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_xor_QQ_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_xor_bb_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_xor_dd_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_xor_ee_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_xor_ff_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_xor_gg_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_xor_hh_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_xor_ii_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_xor_ll_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_logical_xor_qq_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_maximum_??_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_maximum_BB_B (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_maximum_DD_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_maximum_FF_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_maximum_GG_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_maximum_HH_H (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_maximum_II_I (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_maximum_LL_L (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_maximum_MM_M (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_maximum_OO_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_maximum_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_maximum_bb_b (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_maximum_dd_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_maximum_ee_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_maximum_ff_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_maximum_gg_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_maximum_hh_h (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_maximum_ii_i (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_maximum_ll_l (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_maximum_mm_m (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_maximum_qq_q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_minimum_??_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_minimum_BB_B (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_minimum_DD_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_minimum_FF_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_minimum_GG_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_minimum_HH_H (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_minimum_II_I (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_minimum_LL_L (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_minimum_MM_M (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_minimum_OO_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_minimum_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_minimum_bb_b (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_minimum_dd_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_minimum_ee_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_minimum_ff_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_minimum_gg_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_minimum_hh_h (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_minimum_ii_i (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_minimum_ll_l (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_minimum_mm_m (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_minimum_qq_q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_multiply_??_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_multiply_BB_B (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_multiply_DD_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_multiply_FF_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_multiply_GG_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_multiply_HH_H (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_multiply_II_I (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_multiply_LL_L (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_multiply_OO_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_multiply_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_multiply_bb_b (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_multiply_dd_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_multiply_dm_m (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_multiply_ee_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_multiply_ff_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_multiply_gg_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_multiply_hh_h (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_multiply_ii_i (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_multiply_ll_l (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_multiply_md_m (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_multiply_mq_m (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_multiply_qm_m (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_multiply_qq_q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_negative_?_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_negative_B_B (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_negative_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_negative_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_negative_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_negative_H_H (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_negative_I_I (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_negative_L_L (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_negative_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_negative_Q_Q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_negative_b_b (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_negative_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_negative_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_negative_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_negative_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_negative_h_h (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_negative_i_i (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_negative_l_l (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_negative_m_m (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_negative_q_q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_nextafter_dd_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_nextafter_ee_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_nextafter_ff_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_nextafter_gg_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_not_equal_??_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_not_equal_BB_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_not_equal_DD_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_not_equal_FF_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_not_equal_GG_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_not_equal_HH_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_not_equal_II_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_not_equal_LL_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_not_equal_MM_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_not_equal_OO_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_not_equal_QQ_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_not_equal_bb_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_not_equal_dd_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_not_equal_ee_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_not_equal_ff_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_not_equal_gg_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_not_equal_hh_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_not_equal_ii_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_not_equal_ll_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_not_equal_mm_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_not_equal_qq_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_power_BB_B (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_power_DD_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_power_FF_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_power_GG_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_power_HH_H (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_power_II_I (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_power_LL_L (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_power_OO_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_power_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_power_bb_b (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_power_dd_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: divide by zero encountered in power
  
ok
test_power_ee_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_power_ff_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_power_gg_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_power_hh_h (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_power_ii_i (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_power_ll_l (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_power_qq_q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_rad2deg_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_rad2deg_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_rad2deg_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_rad2deg_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_rad2deg_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_radians_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_radians_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_radians_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_radians_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_radians_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_reciprocal_B_B (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_reciprocal_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_reciprocal_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_reciprocal_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_reciprocal_H_H (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_reciprocal_I_I (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_reciprocal_L_L (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_reciprocal_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_reciprocal_Q_Q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_reciprocal_b_b (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_reciprocal_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: divide by zero encountered in reciprocal
  
ok
test_reciprocal_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_reciprocal_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_reciprocal_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_reciprocal_h_h (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_reciprocal_i_i (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_reciprocal_l_l (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_reciprocal_q_q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_right_shift_BB_B (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_right_shift_HH_H (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_right_shift_II_I (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_right_shift_LL_L (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_right_shift_OO_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_right_shift_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_right_shift_bb_b (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_right_shift_hh_h (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_right_shift_ii_i (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_right_shift_ll_l (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_right_shift_qq_q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_rint_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_rint_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_rint_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_rint_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_rint_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_rint_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_rint_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_rint_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sign_B_B (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sign_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sign_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sign_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sign_H_H (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sign_I_I (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sign_L_L (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sign_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sign_Q_Q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sign_b_b (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sign_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sign_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sign_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sign_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sign_h_h (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sign_i_i (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sign_l_l (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sign_m_m (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sign_q_q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_signbit_d_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_signbit_e_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_signbit_f_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_signbit_g_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sin_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sin_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sin_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sin_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sin_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sin_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sin_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sin_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sinh_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sinh_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sinh_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sinh_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sinh_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sinh_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sinh_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sinh_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_spacing_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_spacing_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_spacing_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_spacing_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sqrt_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sqrt_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sqrt_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sqrt_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sqrt_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in sqrt
  
ok
test_sqrt_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sqrt_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_sqrt_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_square_B_B (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_square_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_square_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_square_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_square_H_H (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_square_I_I (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_square_L_L (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_square_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_square_Q_Q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_square_b_b (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_square_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_square_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_square_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_square_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_square_h_h (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_square_i_i (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_square_l_l (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_square_q_q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_subtract_??_? (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_subtract_BB_B (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_subtract_DD_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_subtract_FF_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_subtract_GG_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_subtract_HH_H (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_subtract_II_I (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_subtract_LL_L (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_subtract_MM_m (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_subtract_Mm_M (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_subtract_OO_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_subtract_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_subtract_bb_b (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_subtract_dd_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_subtract_ee_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_subtract_ff_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_subtract_gg_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_subtract_hh_h (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_subtract_ii_i (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_subtract_ll_l (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_subtract_mm_m (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_subtract_qq_q (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_tan_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_tan_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_tan_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_tan_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_tan_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_tan_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_tan_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_tan_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_tanh_D_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_tanh_F_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_tanh_G_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_tanh_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_tanh_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_tanh_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_tanh_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_tanh_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_true_divide_BB_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_true_divide_DD_D (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_true_divide_FF_F (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_true_divide_GG_G (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_true_divide_HH_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_true_divide_II_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_true_divide_LL_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_true_divide_OO_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_true_divide_QQ_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_true_divide_bb_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_true_divide_dd_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_true_divide_ee_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_true_divide_ff_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_true_divide_gg_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_true_divide_hh_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_true_divide_ii_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_true_divide_ll_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_true_divide_md_m (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_true_divide_mm_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_true_divide_mq_m (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_true_divide_qq_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_trunc_O_O (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_trunc_d_d (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_trunc_e_e (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_trunc_f_f (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_trunc_g_g (numba.tests.test_ufuncs.TestLoopTypesFloatNoPython) ... ok
test_floor_divide_BB_B (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_floor_divide_DD_D (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_floor_divide_FF_F (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_floor_divide_GG_G (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_floor_divide_HH_H (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_floor_divide_II_I (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_floor_divide_LL_L (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_floor_divide_OO_O (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_floor_divide_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_floor_divide_bb_b (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_floor_divide_dd_d (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_floor_divide_ee_e (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_floor_divide_ff_f (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_floor_divide_gg_g (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_floor_divide_hh_h (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_floor_divide_ii_i (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_floor_divide_ll_l (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_floor_divide_md_m (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_floor_divide_mq_m (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_floor_divide_qq_q (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_remainder_BB_B (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_remainder_HH_H (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_remainder_II_I (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_remainder_LL_L (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_remainder_OO_O (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_remainder_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_remainder_bb_b (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_remainder_dd_d (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_remainder_ee_e (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_remainder_ff_f (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_remainder_gg_g (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_remainder_hh_h (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_remainder_ii_i (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_remainder_ll_l (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_remainder_qq_q (numba.tests.test_ufuncs.TestLoopTypesFloorDivideNoPython) ... ok
test_left_shift_BB_B (numba.tests.test_ufuncs.TestLoopTypesIntLeftShiftNoPython) ... ok
test_left_shift_HH_H (numba.tests.test_ufuncs.TestLoopTypesIntLeftShiftNoPython) ... ok
test_left_shift_II_I (numba.tests.test_ufuncs.TestLoopTypesIntLeftShiftNoPython) ... ok
test_left_shift_LL_L (numba.tests.test_ufuncs.TestLoopTypesIntLeftShiftNoPython) ... ok
test_left_shift_OO_O (numba.tests.test_ufuncs.TestLoopTypesIntLeftShiftNoPython) ... ok
test_left_shift_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesIntLeftShiftNoPython) ... ok
test_left_shift_bb_b (numba.tests.test_ufuncs.TestLoopTypesIntLeftShiftNoPython) ... ok
test_left_shift_hh_h (numba.tests.test_ufuncs.TestLoopTypesIntLeftShiftNoPython) ... ok
test_left_shift_ii_i (numba.tests.test_ufuncs.TestLoopTypesIntLeftShiftNoPython) ... ok
test_left_shift_ll_l (numba.tests.test_ufuncs.TestLoopTypesIntLeftShiftNoPython) ... ok
test_left_shift_qq_q (numba.tests.test_ufuncs.TestLoopTypesIntLeftShiftNoPython) ... ok
test_absolute_?_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_absolute_B_B (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_absolute_D_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_absolute_F_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_absolute_G_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_absolute_H_H (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_absolute_I_I (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_absolute_L_L (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_absolute_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_absolute_Q_Q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_absolute_b_b (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_absolute_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_absolute_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_absolute_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_absolute_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_absolute_h_h (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_absolute_i_i (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_absolute_l_l (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_absolute_m_m (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_absolute_q_q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_add_??_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_add_BB_B (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_add_DD_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_add_FF_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_add_GG_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_add_HH_H (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_add_II_I (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_add_LL_L (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_add_Mm_M (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_add_OO_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_add_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_add_bb_b (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_add_dd_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_add_ee_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_add_ff_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_add_gg_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_add_hh_h (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_add_ii_i (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_add_ll_l (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_add_mM_M (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_add_mm_m (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_add_qq_q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arccos_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arccos_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arccos_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arccos_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arccos_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arccos_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arccos_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arccos_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arccosh_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arccosh_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arccosh_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arccosh_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arccosh_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arccosh_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arccosh_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arccosh_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arcsin_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arcsin_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arcsin_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arcsin_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arcsin_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arcsin_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arcsin_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arcsin_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arcsinh_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arcsinh_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arcsinh_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arcsinh_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arcsinh_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arcsinh_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arcsinh_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arcsinh_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arctan2_OO_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arctan2_dd_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arctan2_ee_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arctan2_ff_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arctan2_gg_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arctan_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arctan_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arctan_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arctan_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arctan_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arctan_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arctan_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arctan_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arctanh_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arctanh_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arctanh_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arctanh_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arctanh_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arctanh_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arctanh_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_arctanh_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_and_??_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_and_BB_B (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_and_HH_H (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_and_II_I (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_and_LL_L (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_and_OO_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_and_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_and_bb_b (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_and_hh_h (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_and_ii_i (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_and_ll_l (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_and_qq_q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_or_??_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_or_BB_B (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_or_HH_H (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_or_II_I (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_or_LL_L (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_or_OO_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_or_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_or_bb_b (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_or_hh_h (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_or_ii_i (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_or_ll_l (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_or_qq_q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_xor_??_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_xor_BB_B (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_xor_HH_H (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_xor_II_I (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_xor_LL_L (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_xor_OO_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_xor_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_xor_bb_b (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_xor_hh_h (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_xor_ii_i (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_xor_ll_l (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_bitwise_xor_qq_q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_ceil_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_ceil_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_ceil_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_ceil_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_ceil_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_conjugate_B_B (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_conjugate_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_conjugate_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_conjugate_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_conjugate_H_H (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_conjugate_I_I (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_conjugate_L_L (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_conjugate_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_conjugate_Q_Q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_conjugate_b_b (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_conjugate_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_conjugate_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_conjugate_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_conjugate_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_conjugate_h_h (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_conjugate_i_i (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_conjugate_l_l (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_conjugate_q_q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_copysign_dd_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_copysign_ee_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_copysign_ff_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_copysign_gg_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_cos_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_cos_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_cos_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_cos_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_cos_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_cos_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_cos_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_cos_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_cosh_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_cosh_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_cosh_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_cosh_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_cosh_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_cosh_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_cosh_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_cosh_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_deg2rad_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_deg2rad_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_deg2rad_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_deg2rad_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_deg2rad_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_degrees_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_degrees_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_degrees_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_degrees_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_degrees_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_divide_BB_B (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_divide_DD_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_divide_FF_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_divide_GG_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_divide_HH_H (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_divide_II_I (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_divide_LL_L (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_divide_OO_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_divide_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_divide_bb_b (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_divide_dd_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_divide_ee_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_divide_ff_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_divide_gg_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_divide_hh_h (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_divide_ii_i (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_divide_ll_l (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_divide_md_m (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_divide_mm_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_divide_mq_m (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_divide_qq_q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_equal_??_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_equal_BB_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_equal_DD_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_equal_FF_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_equal_GG_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_equal_HH_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_equal_II_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_equal_LL_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_equal_MM_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_equal_OO_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_equal_QQ_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_equal_bb_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_equal_dd_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_equal_ee_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_equal_ff_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_equal_gg_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_equal_hh_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_equal_ii_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_equal_ll_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_equal_mm_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_equal_qq_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_exp2_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_exp2_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_exp2_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_exp2_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_exp2_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_exp2_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_exp2_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_exp2_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_exp_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_exp_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_exp_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_exp_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_exp_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_exp_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_exp_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_exp_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_expm1_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_expm1_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_expm1_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_expm1_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_expm1_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_expm1_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_expm1_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_expm1_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fabs_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fabs_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fabs_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fabs_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fabs_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_divide_BB_B (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_divide_DD_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_divide_FF_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_divide_GG_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_divide_HH_H (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_divide_II_I (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_divide_LL_L (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_divide_OO_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_divide_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_divide_bb_b (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_divide_dd_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_divide_ee_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_divide_ff_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_divide_gg_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_divide_hh_h (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_divide_ii_i (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_divide_ll_l (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_divide_md_m (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_divide_mq_m (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_divide_qq_q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_floor_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmax_??_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmax_BB_B (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmax_DD_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmax_FF_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmax_GG_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmax_HH_H (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmax_II_I (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmax_LL_L (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmax_MM_M (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmax_OO_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmax_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmax_bb_b (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmax_dd_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmax_ee_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmax_ff_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmax_gg_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmax_hh_h (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmax_ii_i (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmax_ll_l (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmax_mm_m (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmax_qq_q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmin_??_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmin_BB_B (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmin_DD_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmin_FF_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmin_GG_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmin_HH_H (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmin_II_I (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmin_LL_L (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmin_MM_M (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmin_OO_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmin_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmin_bb_b (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmin_dd_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmin_ee_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmin_ff_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmin_gg_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmin_hh_h (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmin_ii_i (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmin_ll_l (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmin_mm_m (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmin_qq_q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmod_BB_B (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: divide by zero encountered in fmod
  
ok
test_fmod_HH_H (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmod_II_I (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmod_LL_L (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmod_OO_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmod_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmod_bb_b (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmod_dd_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmod_ee_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmod_ff_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmod_gg_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmod_hh_h (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmod_ii_i (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmod_ll_l (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_fmod_qq_q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_??_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_BB_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_DD_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_FF_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_GG_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_HH_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_II_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_LL_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_MM_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_OO_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_QQ_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_bb_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_dd_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_ee_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_equal_??_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_equal_BB_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_equal_DD_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_equal_FF_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_equal_GG_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_equal_HH_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_equal_II_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_equal_LL_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_equal_MM_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_equal_OO_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_equal_QQ_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_equal_bb_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_equal_dd_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_equal_ee_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_equal_ff_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_equal_gg_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_equal_hh_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_equal_ii_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_equal_ll_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_equal_mm_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_equal_qq_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_ff_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_gg_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_hh_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_ii_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_ll_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_mm_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_greater_qq_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_hypot_OO_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_hypot_dd_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_hypot_ee_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_hypot_ff_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_hypot_gg_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_invert_?_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_invert_B_B (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_invert_H_H (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_invert_I_I (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_invert_L_L (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_invert_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_invert_Q_Q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_invert_b_b (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_invert_h_h (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_invert_i_i (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_invert_l_l (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_invert_q_q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_isfinite_D_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_isfinite_F_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_isfinite_G_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_isfinite_d_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_isfinite_e_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_isfinite_f_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_isfinite_g_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_isinf_D_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_isinf_F_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_isinf_G_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_isinf_d_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_isinf_e_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_isinf_f_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_isinf_g_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_isnan_D_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_isnan_F_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_isnan_G_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_isnan_d_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_isnan_e_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_isnan_f_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_isnan_g_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_ldexp_di_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_ldexp_dl_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_ldexp_ei_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_ldexp_el_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_ldexp_fi_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_ldexp_fl_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_ldexp_gi_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_ldexp_gl_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_??_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_BB_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_DD_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_FF_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_GG_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_HH_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_II_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_LL_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_MM_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_OO_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_QQ_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_bb_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_dd_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_ee_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_equal_??_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_equal_BB_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_equal_DD_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_equal_FF_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_equal_GG_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_equal_HH_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_equal_II_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_equal_LL_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_equal_MM_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_equal_OO_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_equal_QQ_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_equal_bb_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_equal_dd_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_equal_ee_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_equal_ff_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_equal_gg_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_equal_hh_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_equal_ii_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_equal_ll_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_equal_mm_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_equal_qq_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_ff_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_gg_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_hh_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_ii_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_ll_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_mm_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_less_qq_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log10_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log10_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log10_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log10_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log10_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log10_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log10_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log10_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log1p_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log1p_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log1p_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log1p_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log1p_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log1p_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log1p_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log1p_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log2_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log2_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log2_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log2_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log2_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log2_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log2_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log2_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_log_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logaddexp2_dd_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logaddexp2_ee_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logaddexp2_ff_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logaddexp2_gg_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logaddexp_dd_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logaddexp_ee_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logaddexp_ff_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logaddexp_gg_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_and_??_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_and_BB_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_and_DD_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_and_FF_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_and_GG_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_and_HH_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_and_II_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_and_LL_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_and_OO_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_and_QQ_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_and_bb_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_and_dd_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_and_ee_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_and_ff_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_and_gg_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_and_hh_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_and_ii_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_and_ll_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_and_qq_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_not_?_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_not_B_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_not_D_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_not_F_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_not_G_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_not_H_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_not_I_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_not_L_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_not_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_not_Q_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_not_b_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_not_d_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_not_e_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_not_f_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_not_g_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_not_h_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_not_i_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_not_l_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_not_q_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_or_??_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_or_BB_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_or_DD_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_or_FF_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_or_GG_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_or_HH_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_or_II_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_or_LL_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_or_OO_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_or_QQ_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_or_bb_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_or_dd_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_or_ee_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_or_ff_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_or_gg_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_or_hh_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_or_ii_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_or_ll_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_or_qq_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_xor_??_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_xor_BB_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_xor_DD_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_xor_FF_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_xor_GG_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_xor_HH_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_xor_II_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_xor_LL_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_xor_OO_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_xor_QQ_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_xor_bb_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_xor_dd_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_xor_ee_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_xor_ff_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_xor_gg_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_xor_hh_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_xor_ii_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_xor_ll_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_logical_xor_qq_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_maximum_??_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_maximum_BB_B (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_maximum_DD_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_maximum_FF_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_maximum_GG_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_maximum_HH_H (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_maximum_II_I (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_maximum_LL_L (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_maximum_MM_M (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_maximum_OO_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_maximum_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_maximum_bb_b (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_maximum_dd_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_maximum_ee_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_maximum_ff_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_maximum_gg_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_maximum_hh_h (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_maximum_ii_i (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_maximum_ll_l (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_maximum_mm_m (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_maximum_qq_q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_minimum_??_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_minimum_BB_B (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_minimum_DD_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_minimum_FF_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_minimum_GG_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_minimum_HH_H (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_minimum_II_I (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_minimum_LL_L (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_minimum_MM_M (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_minimum_OO_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_minimum_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_minimum_bb_b (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_minimum_dd_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_minimum_ee_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_minimum_ff_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_minimum_gg_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_minimum_hh_h (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_minimum_ii_i (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_minimum_ll_l (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_minimum_mm_m (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_minimum_qq_q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_multiply_??_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_multiply_BB_B (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_multiply_DD_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_multiply_FF_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_multiply_GG_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_multiply_HH_H (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_multiply_II_I (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_multiply_LL_L (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_multiply_OO_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_multiply_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_multiply_bb_b (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_multiply_dd_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_multiply_dm_m (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_multiply_ee_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_multiply_ff_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_multiply_gg_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_multiply_hh_h (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_multiply_ii_i (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_multiply_ll_l (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_multiply_md_m (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_multiply_mq_m (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_multiply_qm_m (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_multiply_qq_q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_negative_?_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_negative_B_B (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_negative_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_negative_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_negative_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_negative_H_H (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_negative_I_I (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_negative_L_L (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_negative_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_negative_Q_Q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_negative_b_b (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_negative_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_negative_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_negative_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_negative_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_negative_h_h (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_negative_i_i (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_negative_l_l (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_negative_m_m (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_negative_q_q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_nextafter_dd_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_nextafter_ee_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_nextafter_ff_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_nextafter_gg_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_not_equal_??_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_not_equal_BB_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_not_equal_DD_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_not_equal_FF_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_not_equal_GG_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_not_equal_HH_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_not_equal_II_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_not_equal_LL_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_not_equal_MM_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_not_equal_OO_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_not_equal_QQ_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_not_equal_bb_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_not_equal_dd_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_not_equal_ee_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_not_equal_ff_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_not_equal_gg_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_not_equal_hh_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_not_equal_ii_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_not_equal_ll_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_not_equal_mm_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_not_equal_qq_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_rad2deg_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_rad2deg_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_rad2deg_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_rad2deg_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_rad2deg_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_radians_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_radians_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_radians_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_radians_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_radians_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_remainder_BB_B (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_remainder_HH_H (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_remainder_II_I (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_remainder_LL_L (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_remainder_OO_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_remainder_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_remainder_bb_b (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_remainder_dd_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_remainder_ee_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_remainder_ff_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_remainder_gg_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_remainder_hh_h (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_remainder_ii_i (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_remainder_ll_l (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_remainder_qq_q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_rint_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_rint_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_rint_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_rint_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_rint_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_rint_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_rint_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_rint_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sign_B_B (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sign_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sign_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sign_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sign_H_H (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sign_I_I (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sign_L_L (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sign_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sign_Q_Q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sign_b_b (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sign_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sign_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sign_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sign_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sign_h_h (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sign_i_i (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sign_l_l (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sign_m_m (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sign_q_q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_signbit_d_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_signbit_e_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_signbit_f_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_signbit_g_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sin_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sin_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sin_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sin_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sin_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sin_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sin_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sin_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sinh_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sinh_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sinh_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sinh_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sinh_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sinh_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sinh_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sinh_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_spacing_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_spacing_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_spacing_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_spacing_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sqrt_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sqrt_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sqrt_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sqrt_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sqrt_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sqrt_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sqrt_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_sqrt_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_square_B_B (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_square_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_square_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_square_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_square_H_H (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_square_I_I (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_square_L_L (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_square_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_square_Q_Q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_square_b_b (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_square_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_square_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_square_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_square_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_square_h_h (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_square_i_i (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_square_l_l (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_square_q_q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_subtract_??_? (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_subtract_BB_B (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_subtract_DD_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_subtract_FF_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_subtract_GG_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_subtract_HH_H (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_subtract_II_I (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_subtract_LL_L (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_subtract_MM_m (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_subtract_Mm_M (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_subtract_OO_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_subtract_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_subtract_bb_b (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_subtract_dd_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_subtract_ee_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_subtract_ff_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_subtract_gg_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_subtract_hh_h (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_subtract_ii_i (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_subtract_ll_l (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_subtract_mm_m (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_subtract_qq_q (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_tan_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_tan_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_tan_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_tan_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_tan_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_tan_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_tan_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_tan_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_tanh_D_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_tanh_F_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_tanh_G_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_tanh_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_tanh_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_tanh_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_tanh_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_tanh_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_true_divide_BB_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_true_divide_DD_D (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_true_divide_FF_F (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_true_divide_GG_G (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_true_divide_HH_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_true_divide_II_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_true_divide_LL_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_true_divide_OO_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_true_divide_QQ_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_true_divide_bb_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_true_divide_dd_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_true_divide_ee_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_true_divide_ff_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_true_divide_gg_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_true_divide_hh_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_true_divide_ii_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_true_divide_ll_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_true_divide_md_m (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_true_divide_mm_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_true_divide_mq_m (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_true_divide_qq_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_trunc_O_O (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_trunc_d_d (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_trunc_e_e (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_trunc_f_f (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_trunc_g_g (numba.tests.test_ufuncs.TestLoopTypesIntNoPython) ... ok
test_right_shift_BB_B (numba.tests.test_ufuncs.TestLoopTypesIntRightShiftNoPython) ... ok
test_right_shift_HH_H (numba.tests.test_ufuncs.TestLoopTypesIntRightShiftNoPython) ... ok
test_right_shift_II_I (numba.tests.test_ufuncs.TestLoopTypesIntRightShiftNoPython) ... ok
test_right_shift_LL_L (numba.tests.test_ufuncs.TestLoopTypesIntRightShiftNoPython) ... ok
test_right_shift_OO_O (numba.tests.test_ufuncs.TestLoopTypesIntRightShiftNoPython) ... ok
test_right_shift_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesIntRightShiftNoPython) ... ok
test_right_shift_bb_b (numba.tests.test_ufuncs.TestLoopTypesIntRightShiftNoPython) ... ok
test_right_shift_hh_h (numba.tests.test_ufuncs.TestLoopTypesIntRightShiftNoPython) ... ok
test_right_shift_ii_i (numba.tests.test_ufuncs.TestLoopTypesIntRightShiftNoPython) ... ok
test_right_shift_ll_l (numba.tests.test_ufuncs.TestLoopTypesIntRightShiftNoPython) ... ok
test_right_shift_qq_q (numba.tests.test_ufuncs.TestLoopTypesIntRightShiftNoPython) ... ok
test_power_BB_B (numba.tests.test_ufuncs.TestLoopTypesPowerNoPython) ... ok
test_power_DD_D (numba.tests.test_ufuncs.TestLoopTypesPowerNoPython) ... ok
test_power_FF_F (numba.tests.test_ufuncs.TestLoopTypesPowerNoPython) ... ok
test_power_GG_G (numba.tests.test_ufuncs.TestLoopTypesPowerNoPython) ... ok
test_power_HH_H (numba.tests.test_ufuncs.TestLoopTypesPowerNoPython) ... ok
test_power_II_I (numba.tests.test_ufuncs.TestLoopTypesPowerNoPython) ... ok
test_power_LL_L (numba.tests.test_ufuncs.TestLoopTypesPowerNoPython) ... ok
test_power_OO_O (numba.tests.test_ufuncs.TestLoopTypesPowerNoPython) ... ok
test_power_QQ_Q (numba.tests.test_ufuncs.TestLoopTypesPowerNoPython) ... ok
test_power_bb_b (numba.tests.test_ufuncs.TestLoopTypesPowerNoPython) ... ok
test_power_dd_d (numba.tests.test_ufuncs.TestLoopTypesPowerNoPython) ... ok
test_power_ee_e (numba.tests.test_ufuncs.TestLoopTypesPowerNoPython) ... ok
test_power_ff_f (numba.tests.test_ufuncs.TestLoopTypesPowerNoPython) ... ok
test_power_gg_g (numba.tests.test_ufuncs.TestLoopTypesPowerNoPython) ... ok
test_power_hh_h (numba.tests.test_ufuncs.TestLoopTypesPowerNoPython) ... ok
test_power_ii_i (numba.tests.test_ufuncs.TestLoopTypesPowerNoPython) ... ok
test_power_ll_l (numba.tests.test_ufuncs.TestLoopTypesPowerNoPython) ... ok
test_power_qq_q (numba.tests.test_ufuncs.TestLoopTypesPowerNoPython) ... ok
test_reciprocal_B_B (numba.tests.test_ufuncs.TestLoopTypesReciprocalNoPython) ... ok
test_reciprocal_D_D (numba.tests.test_ufuncs.TestLoopTypesReciprocalNoPython) ... ok
test_reciprocal_F_F (numba.tests.test_ufuncs.TestLoopTypesReciprocalNoPython) ... ok
test_reciprocal_G_G (numba.tests.test_ufuncs.TestLoopTypesReciprocalNoPython) ... ok
test_reciprocal_H_H (numba.tests.test_ufuncs.TestLoopTypesReciprocalNoPython) ... ok
test_reciprocal_I_I (numba.tests.test_ufuncs.TestLoopTypesReciprocalNoPython) ... ok
test_reciprocal_L_L (numba.tests.test_ufuncs.TestLoopTypesReciprocalNoPython) ... ok
test_reciprocal_O_O (numba.tests.test_ufuncs.TestLoopTypesReciprocalNoPython) ... ok
test_reciprocal_Q_Q (numba.tests.test_ufuncs.TestLoopTypesReciprocalNoPython) ... ok
test_reciprocal_b_b (numba.tests.test_ufuncs.TestLoopTypesReciprocalNoPython) ... ok
test_reciprocal_d_d (numba.tests.test_ufuncs.TestLoopTypesReciprocalNoPython) ... ok
test_reciprocal_e_e (numba.tests.test_ufuncs.TestLoopTypesReciprocalNoPython) ... ok
test_reciprocal_f_f (numba.tests.test_ufuncs.TestLoopTypesReciprocalNoPython) ... ok
test_reciprocal_g_g (numba.tests.test_ufuncs.TestLoopTypesReciprocalNoPython) ... ok
test_reciprocal_h_h (numba.tests.test_ufuncs.TestLoopTypesReciprocalNoPython) ... ok
test_reciprocal_i_i (numba.tests.test_ufuncs.TestLoopTypesReciprocalNoPython) ... ok
test_reciprocal_l_l (numba.tests.test_ufuncs.TestLoopTypesReciprocalNoPython) ... ok
test_reciprocal_q_q (numba.tests.test_ufuncs.TestLoopTypesReciprocalNoPython) ... ok
test_scalar_binary_mixed_ufunc (numba.tests.test_ufuncs.TestScalarUFuncs) ... ok
test_scalar_binary_uniform_ufunc (numba.tests.test_ufuncs.TestScalarUFuncs) ... ok
test_scalar_unary_ufunc (numba.tests.test_ufuncs.TestScalarUFuncs) ... ok
test_scalar_binary_mixed_ufunc (numba.tests.test_ufuncs.TestScalarUFuncsNoPython) ... ok
test_scalar_binary_uniform_ufunc (numba.tests.test_ufuncs.TestScalarUFuncsNoPython) ... ok
test_scalar_unary_ufunc (numba.tests.test_ufuncs.TestScalarUFuncsNoPython) ... ok
test_missing_args (numba.tests.test_ufuncs.TestUFuncBadArgsNoPython) ... ok
test_no_scalar_result_by_reference (numba.tests.test_ufuncs.TestUFuncBadArgsNoPython) ... ok
test_too_many_args (numba.tests.test_ufuncs.TestUFuncBadArgsNoPython) ... ok
test_abs_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_absolute_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_add_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_arccos_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_arccosh_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_arcsin_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_arcsinh_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_arctan2_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_arctan_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_arctanh_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_bitwise_and_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_bitwise_not_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_bitwise_or_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_bitwise_xor_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_broadcast_implicit_output_npm_nrt (numba.tests.test_ufuncs.TestUFuncs) ... ERROR
test_broadcasting (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_ceil_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_conj_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_conjugate_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_copysign_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_cos_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_cosh_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_deg2rad_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_degrees_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_divide_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: divide by zero encountered in divide
  
/home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in divide
  
ok
test_equal_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_exp2_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_exp_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_expm1_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_fabs_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_floor_divide_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: divide by zero encountered in floor_divide
  
/home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in floor_divide
  
ok
test_floor_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_fmax_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_fmin_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_fmod_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: divide by zero encountered in fmod
  
/home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in fmod
  
ok
test_greater_equal_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_greater_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_hypot_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_implicit_output_layout_binary (numba.tests.test_ufuncs.TestUFuncs) ... ERROR
test_implicit_output_layout_unary (numba.tests.test_ufuncs.TestUFuncs) ... ERROR
test_implicit_output_npm (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_invert_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_isfinite_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_isinf_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_isnan_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_less_equal_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_less_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_log10_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_log1p_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_log2_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_log_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_logaddexp2_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_logaddexp_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_logical_and_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_logical_not_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_logical_or_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_logical_xor_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_maximum_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_minimum_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_mixed_types (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_mod_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: divide by zero encountered in remainder
  
/home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in remainder
  
ok
test_multiply_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_negative_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_nextafter_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_not_equal_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_power_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in power
  
ok
test_rad2deg_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_radians_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_reciprocal_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_remainder_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: divide by zero encountered in remainder
  
/home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in remainder
  
ok
test_rint_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_sign_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_signbit_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_sin_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_sinh_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_spacing_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_sqrt_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_square_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_subtract_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_tan_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_tanh_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_true_divide_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... /home/graham/pypy/numba/numba/tests/test_ufuncs.py:2: RuntimeWarning: invalid value encountered in true_divide
  
ok
test_trunc_ufunc (numba.tests.test_ufuncs.TestUFuncs) ... ok
test_issue_2006 (numba.tests.test_ufuncs.TestUfuncIssues) ... ok
test_issue_651 (numba.tests.test_ufuncs.TestUfuncIssues) ... ok
test_issue_713 (numba.tests.test_ufuncs.TestUfuncIssues) ... ok
test_profiler (numba.tests.test_profiler.TestProfiler) ... FAIL
test_profiler_np_dot (numba.tests.test_profiler.TestProfiler) ... skipped 'BLAS needs Scipy 0.16+'
test_compile_function (numba.tests.test_cgutils.StructureTestCase) ... ok
test_float_fields (numba.tests.test_cgutils.StructureTestCase) ... ERROR
test_int_fields (numba.tests.test_cgutils.StructureTestCase) ... ERROR
test_argcast (numba.tests.test_nested_calls.TestNestedCall) ... ok
test_boolean_return (numba.tests.test_nested_calls.TestNestedCall) ... ok
test_call_generated (numba.tests.test_nested_calls.TestNestedCall) ... ok
test_default_args (numba.tests.test_nested_calls.TestNestedCall) ... ok
test_default_args_objmode (numba.tests.test_nested_calls.TestNestedCall) ... ok
test_named_args (numba.tests.test_nested_calls.TestNestedCall) ... ok
test_named_args_objmode (numba.tests.test_nested_calls.TestNestedCall) ... ok
test_star_args (numba.tests.test_nested_calls.TestNestedCall) ... ok
test_star_call (numba.tests.test_nested_calls.TestNestedCall) ... ok
test_star_call_objmode (numba.tests.test_nested_calls.TestNestedCall) ... ok
test_jit (numba.tests.test_debug.TestDisableJIT) ... ok
test_jitclass (numba.tests.test_debug.TestDisableJIT) ... ok
test_debug (numba.tests.test_debug.TestEnvironmentOverride) ... ok
test_dump_assembly (numba.tests.test_debug.TestFunctionDebugOutput) ... ok
test_dump_bytecode (numba.tests.test_debug.TestFunctionDebugOutput) ... ok
test_dump_cfg (numba.tests.test_debug.TestFunctionDebugOutput) ... ok
test_dump_func_opt_llvm (numba.tests.test_debug.TestFunctionDebugOutput) ... ok
test_dump_ir (numba.tests.test_debug.TestFunctionDebugOutput) ... ok
test_dump_llvm (numba.tests.test_debug.TestFunctionDebugOutput) ... ok
test_dump_optimized_llvm (numba.tests.test_debug.TestFunctionDebugOutput) ... ok
test_dump_ir_generator (numba.tests.test_debug.TestGeneratorDebugOutput) ... skipped 'PYPY FIXME - strange death'
test_reflect_clean (numba.tests.test_lists.TestListReflection) ... ERROR
test_reflect_conditional (numba.tests.test_lists.TestListReflection) ... ERROR
test_reflect_exception (numba.tests.test_lists.TestListReflection) ... ERROR
test_reflect_same_list (numba.tests.test_lists.TestListReflection) ... ERROR
test_reflect_simple (numba.tests.test_lists.TestListReflection) ... ERROR
test_add (numba.tests.test_lists.TestLists) ... ok
test_add_heterogenous (numba.tests.test_lists.TestLists) ... ok
test_add_inplace (numba.tests.test_lists.TestLists) ... ok
test_add_inplace_heterogenous (numba.tests.test_lists.TestLists) ... ok
test_append (numba.tests.test_lists.TestLists) ... ok
test_append_heterogenous (numba.tests.test_lists.TestLists) ... FAIL
test_bool (numba.tests.test_lists.TestLists) ... ok
test_bool_list (numba.tests.test_lists.TestLists) ... ok
test_clear (numba.tests.test_lists.TestLists) ... skipped 'list.clear() needs Python 3.3+'
test_constructor (numba.tests.test_lists.TestLists) ... ok
test_contains (numba.tests.test_lists.TestLists) ... ok
test_copy (numba.tests.test_lists.TestLists) ... skipped 'list.copy() needs Python 3.3+'
test_count (numba.tests.test_lists.TestLists) ... ok
test_create_list (numba.tests.test_lists.TestLists) ... ok
test_create_nested_list (numba.tests.test_lists.TestLists) ... ok
test_delslice0 (numba.tests.test_lists.TestLists) ... ok
test_delslice1 (numba.tests.test_lists.TestLists) ... ok
test_delslice2 (numba.tests.test_lists.TestLists) ... ok
test_eq (numba.tests.test_lists.TestLists) ... ok
test_extend (numba.tests.test_lists.TestLists) ... ok
test_extend_heterogenous (numba.tests.test_lists.TestLists) ... FAIL
test_ge (numba.tests.test_lists.TestLists) ... ok
test_getitem (numba.tests.test_lists.TestLists) ... ok
test_getslice2 (numba.tests.test_lists.TestLists) ... ok
test_getslice3 (numba.tests.test_lists.TestLists) ... ok
test_gt (numba.tests.test_lists.TestLists) ... ok
test_identity (numba.tests.test_lists.TestLists) ... ok
test_index1 (numba.tests.test_lists.TestLists) ... ok
test_index2 (numba.tests.test_lists.TestLists) ... ok
test_index3 (numba.tests.test_lists.TestLists) ... ok
test_insert (numba.tests.test_lists.TestLists) ... ok
test_invalid_slice (numba.tests.test_lists.TestLists) ... ok
test_iteration (numba.tests.test_lists.TestLists) ... ok
test_le (numba.tests.test_lists.TestLists) ... ok
test_len (numba.tests.test_lists.TestLists) ... ok
test_list_comprehension (numba.tests.test_lists.TestLists) ... ok
test_list_passing (numba.tests.test_lists.TestLists) ... ERROR
test_lt (numba.tests.test_lists.TestLists) ... ok
test_mul (numba.tests.test_lists.TestLists) ... ok
test_mul_error (numba.tests.test_lists.TestLists) ... ok
test_mul_inplace (numba.tests.test_lists.TestLists) ... ok
test_ne (numba.tests.test_lists.TestLists) ... ok
test_pop0 (numba.tests.test_lists.TestLists) ... ok
test_pop1 (numba.tests.test_lists.TestLists) ... ok
test_pop_errors (numba.tests.test_lists.TestLists) ... ok
test_remove (numba.tests.test_lists.TestLists) ... ok
test_remove_error (numba.tests.test_lists.TestLists) ... ok
test_reverse (numba.tests.test_lists.TestLists) ... ok
test_setitem (numba.tests.test_lists.TestLists) ... ok
test_setslice2 (numba.tests.test_lists.TestLists) ... ok
test_setslice3 (numba.tests.test_lists.TestLists) ... ok
test_setslice3_resize (numba.tests.test_lists.TestLists) ... ok
test_errors (numba.tests.test_lists.TestUnboxing) ... ERROR
test_list_inside_tuple (numba.tests.test_lists.TestUnboxing) ... ERROR
test_list_of_tuples_inside_tuple (numba.tests.test_lists.TestUnboxing) ... ERROR
test_numbers (numba.tests.test_lists.TestUnboxing) ... ERROR
test_tuples (numba.tests.test_lists.TestUnboxing) ... ERROR
test_boolean_as_float (numba.tests.test_conversion.TestConversion) ... ok
test_boolean_as_int (numba.tests.test_conversion.TestConversion) ... ok
test_boolean_eq_boolean (numba.tests.test_conversion.TestConversion) ... ok
test_cleanup_buffer (numba.tests.test_conversion.TestConversion) ... ERROR
test_cleanup_optional (numba.tests.test_conversion.TestConversion) ... ERROR
test_cleanup_record (numba.tests.test_conversion.TestConversion) ... ERROR
test_cleanup_tuple (numba.tests.test_conversion.TestConversion) ... ERROR
test_complex_addition (numba.tests.test_conversion.TestConversion) ... ok
test_complex_identity (numba.tests.test_conversion.TestConversion) ... ok
test_multiple_args_negative_to_unsigned (numba.tests.test_conversion.TestConversion) ... ok
test_multiple_args_records (numba.tests.test_conversion.TestConversion) ... ERROR
test_negative_to_unsigned (numba.tests.test_conversion.TestConversion) ... ok
test_with_no_parameters (numba.tests.test_conversion.TestConversion) ... ok
test_array_1d_complex (numba.tests.test_iteration.IterationTest) ... ok
test_array_1d_complex_npm (numba.tests.test_iteration.IterationTest) ... ok
test_array_1d_float (numba.tests.test_iteration.IterationTest) ... ok
test_array_1d_float_npm (numba.tests.test_iteration.IterationTest) ... ok
test_array_1d_record (numba.tests.test_iteration.IterationTest) ... ok
test_array_1d_record_mutate (numba.tests.test_iteration.IterationTest) ... ok
test_array_1d_record_mutate_npm (numba.tests.test_iteration.IterationTest) ... ok
test_array_1d_record_npm (numba.tests.test_iteration.IterationTest) ... ok
test_enumerate_nested_tuple (numba.tests.test_iteration.IterationTest) ... ok
test_enumerate_nested_tuple_npm (numba.tests.test_iteration.IterationTest) ... ok
test_float_tuple_iter (numba.tests.test_iteration.IterationTest) ... ok
test_float_tuple_iter_npm (numba.tests.test_iteration.IterationTest) ... ok
test_int_tuple_iter (numba.tests.test_iteration.IterationTest) ... ok
test_int_tuple_iter_npm (numba.tests.test_iteration.IterationTest) ... ok
test_nested_enumerate (numba.tests.test_iteration.IterationTest) ... ok
test_nested_enumerate_npm (numba.tests.test_iteration.IterationTest) ... ok
test_tuple_iter_issue1504 (numba.tests.test_iteration.IterationTest) ... ok
test_tuple_tuple_iter (numba.tests.test_iteration.IterationTest) ... ok
test_tuple_tuple_iter_npm (numba.tests.test_iteration.IterationTest) ... ok
test_docstring (numba.tests.test_unicode_literals.TestFutureUnicodeLiterals) ... ok
test_get_pointer_to_function (numba.tests.test_codegen.JITCPUCodegenTestCase) ... ok
test_library_lifetime (numba.tests.test_codegen.JITCPUCodegenTestCase) ... FAIL
test_magic_tuple (numba.tests.test_codegen.JITCPUCodegenTestCase) ... ok
test_serialize_unserialize_bitcode (numba.tests.test_codegen.JITCPUCodegenTestCase) ... ok
test_serialize_unserialize_object_code (numba.tests.test_codegen.JITCPUCodegenTestCase) ... ok
test_unserialize_other_process_bitcode (numba.tests.test_codegen.JITCPUCodegenTestCase) ... ok
test_unserialize_other_process_object_code (numba.tests.test_codegen.JITCPUCodegenTestCase) ... ok
test_array_expr (numba.tests.test_blackscholes.TestBlackScholes) ... ok
test_scalar (numba.tests.test_blackscholes.TestBlackScholes) ... ok
test_array_slice_setitem (numba.tests.test_storeslice.TestStoreSlice) ... ok
test_usecase (numba.tests.test_storeslice.TestStoreSlice) ... ok
test_overlap1 (numba.tests.test_overlap.TestArrayOverlap) ... ERROR
test_overlap11 (numba.tests.test_overlap.TestArrayOverlap) ... ERROR
test_overlap12 (numba.tests.test_overlap.TestArrayOverlap) ... ERROR
test_overlap13 (numba.tests.test_overlap.TestArrayOverlap) ... ERROR
test_overlap14 (numba.tests.test_overlap.TestArrayOverlap) ... ERROR
test_overlap15 (numba.tests.test_overlap.TestArrayOverlap) ... ERROR
test_overlap16 (numba.tests.test_overlap.TestArrayOverlap) ... ERROR
test_overlap2 (numba.tests.test_overlap.TestArrayOverlap) ... ERROR
test_overlap3 (numba.tests.test_overlap.TestArrayOverlap) ... ERROR
test_overlap4 (numba.tests.test_overlap.TestArrayOverlap) ... ERROR
test_overlap5 (numba.tests.test_overlap.TestArrayOverlap) ... ERROR
test_overlap6 (numba.tests.test_overlap.TestArrayOverlap) ... ERROR
test_delattr (numba.tests.test_objects.TestAttributes) ... FAIL
test_delattr_attribute_error (numba.tests.test_objects.TestAttributes) ... FAIL
test_setattr (numba.tests.test_objects.TestAttributes) ... ok
test_setattr_attribute_error (numba.tests.test_objects.TestAttributes) ... ok
test_linalg_cholesky (numba.tests.test_linalg.TestLinalgCholesky) ... skipped 'LAPACK needs Scipy 0.16+'
test_linalg_cond (numba.tests.test_linalg.TestLinalgCond) ... skipped 'LAPACK needs Scipy 0.16+'
test_linalg_det (numba.tests.test_linalg.TestLinalgDetAndSlogdet) ... skipped 'LAPACK needs Scipy 0.16+'
test_linalg_slogdet (numba.tests.test_linalg.TestLinalgDetAndSlogdet) ... skipped 'LAPACK needs Scipy 0.16+'
test_linalg_eig (numba.tests.test_linalg.TestLinalgEig) ... skipped 'LAPACK needs Scipy 0.16+'
test_linalg_inv (numba.tests.test_linalg.TestLinalgInv) ... skipped 'LAPACK needs Scipy 0.16+'
test_linalg_lstsq (numba.tests.test_linalg.TestLinalgLstsq) ... skipped 'LAPACK needs Scipy 0.16+'
test_linalg_matrix_rank (numba.tests.test_linalg.TestLinalgMatrixRank) ... skipped 'LAPACK needs Scipy 0.16+'
test_linalg_norm (numba.tests.test_linalg.TestLinalgNorm) ... skipped 'LAPACK needs Scipy 0.16+'
test_linalg_pinv (numba.tests.test_linalg.TestLinalgPinv) ... skipped 'LAPACK needs Scipy 0.16+'
test_linalg_qr (numba.tests.test_linalg.TestLinalgQr) ... skipped 'LAPACK needs Scipy 0.16+'
test_linalg_solve (numba.tests.test_linalg.TestLinalgSolve) ... skipped 'LAPACK needs Scipy 0.16+'
test_linalg_svd (numba.tests.test_linalg.TestLinalgSvd) ... skipped 'LAPACK needs Scipy 0.16+'
test_contiguity_warnings (numba.tests.test_linalg.TestProduct) ... skipped 'BLAS needs Scipy 0.16+'
test_dot_mm (numba.tests.test_linalg.TestProduct) ... skipped 'BLAS needs Scipy 0.16+'
test_dot_vm (numba.tests.test_linalg.TestProduct) ... skipped 'BLAS needs Scipy 0.16+'
test_dot_vv (numba.tests.test_linalg.TestProduct) ... skipped 'BLAS needs Scipy 0.16+'
test_matmul_mm (numba.tests.test_linalg.TestProduct) ... skipped 'the matrix multiplication operator needs Python 3.5+ and Numpy 1.10+'
test_matmul_vm (numba.tests.test_linalg.TestProduct) ... skipped 'the matrix multiplication operator needs Python 3.5+ and Numpy 1.10+'
test_matmul_vv (numba.tests.test_linalg.TestProduct) ... skipped 'the matrix multiplication operator needs Python 3.5+ and Numpy 1.10+'
test_vdot (numba.tests.test_linalg.TestProduct) ... skipped 'BLAS needs Scipy 0.16+'
test_specific_sample_matrix (numba.tests.test_linalg.TestTestLinalgBase) ... ok
test_jit_closure_variable (numba.tests.test_closure.TestClosure) ... ok
test_jit_closure_variable_npm (numba.tests.test_closure.TestClosure) ... ok
test_jit_inner_function (numba.tests.test_closure.TestClosure) ... ERROR
test_jit_inner_function_npm (numba.tests.test_closure.TestClosure) ... ERROR
test_jit_multiple_closure_variables (numba.tests.test_closure.TestClosure) ... ok
test_jit_multiple_closure_variables_npm (numba.tests.test_closure.TestClosure) ... ok
test_rejitting_closure (numba.tests.test_closure.TestClosure) ... ok
test_rejitting_closure_npm (numba.tests.test_closure.TestClosure) ... ok
test_return_closure (numba.tests.test_closure.TestClosure) ... ok
test_arg_ret_casting (numba.tests.test_typeinfer.TestArgRetCasting) ... ok
test_arg_ret_mismatch (numba.tests.test_typeinfer.TestArgRetCasting) ... ok
test_invalid_arg_type_forcing (numba.tests.test_typeinfer.TestArgRetCasting) ... ok
test_issue_1080 (numba.tests.test_typeinfer.TestMiscIssues)
https://github.com/numba/numba/issues/1080 ... ok
test_issue_1394 (numba.tests.test_typeinfer.TestMiscIssues) ... ok
test_issue_797 (numba.tests.test_typeinfer.TestMiscIssues)
https://github.com/numba/numba/issues/797#issuecomment-58592401 ... ok
test_list_unify1 (numba.tests.test_typeinfer.TestMiscIssues) ... FAIL
test_list_unify2 (numba.tests.test_typeinfer.TestMiscIssues) ... FAIL
test_range_unify (numba.tests.test_typeinfer.TestMiscIssues) ... ok
test_ambiguous_error (numba.tests.test_typeinfer.TestResolveOverload) ... ok
test_ambiguous_match (numba.tests.test_typeinfer.TestResolveOverload) ... ok
test_non_ambiguous_match (numba.tests.test_typeinfer.TestResolveOverload) ... ok
test_arrays (numba.tests.test_typeinfer.TestTypeConversion) ... ok
test_convert_number_types (numba.tests.test_typeinfer.TestTypeConversion) ... ok
test_optional (numba.tests.test_typeinfer.TestTypeConversion) ... ok
test_tuple (numba.tests.test_typeinfer.TestTypeConversion) ... ok
test_arrays (numba.tests.test_typeinfer.TestUnify) ... ok
test_bool (numba.tests.test_typeinfer.TestUnify) ... ok
test_integer (numba.tests.test_typeinfer.TestUnify) ... ok
test_list (numba.tests.test_typeinfer.TestUnify) ... ok
test_none (numba.tests.test_typeinfer.TestUnify) ... ok
test_none_to_optional (numba.tests.test_typeinfer.TestUnify) ... ok
test_optional (numba.tests.test_typeinfer.TestUnify) ... ok
test_optional_tuple (numba.tests.test_typeinfer.TestUnify) ... ok
test_range (numba.tests.test_typeinfer.TestUnify) ... ok
test_set (numba.tests.test_typeinfer.TestUnify) ... ok
test_tuple (numba.tests.test_typeinfer.TestUnify) ... ok
test_unify_number_pair (numba.tests.test_typeinfer.TestUnify) ... ok
test_complex_unify_issue599 (numba.tests.test_typeinfer.TestUnifyUseCases) ... ok
test_complex_unify_issue599_multihash (numba.tests.test_typeinfer.TestUnifyUseCases) ... ok
test_int_tuple_unify (numba.tests.test_typeinfer.TestUnifyUseCases) ... ok
test_cfunc (numba.tests.test_unicode_names.TestUnicodeNames) ... skipped 'unicode identifier not supported in python2'
test_unicode_name1 (numba.tests.test_unicode_names.TestUnicodeNames) ... skipped 'unicode identifier not supported in python2'
test_unicode_name2 (numba.tests.test_unicode_names.TestUnicodeNames) ... skipped 'unicode identifier not supported in python2'
test_normalize_ir_text (numba.tests.test_unicode_names.TestUnicodeUtils) ... ok
test_normalize_ir_text_py3 (numba.tests.test_unicode_names.TestUnicodeUtils) ... skipped 'unicode identifier not supported in python2'
test_usecase1 (numba.tests.test_recarray_usecases.TestRecordUsecase) ... ok
test_usecase2 (numba.tests.test_recarray_usecases.TestRecordUsecase) ... ok
test_usecase3 (numba.tests.test_recarray_usecases.TestRecordUsecase) ... ok
test_usecase4 (numba.tests.test_recarray_usecases.TestRecordUsecase) ... ok
test_usecase5 (numba.tests.test_recarray_usecases.TestRecordUsecase) ... ok
test_numpy_nan (numba.tests.test_auto_constants.TestAutoConstants) ... ok
test_sys_constant (numba.tests.test_auto_constants.TestAutoConstants) ... ok
test_add (numba.tests.test_operators.TestMixedInts) ... ok
test_and (numba.tests.test_operators.TestMixedInts) ... ok
test_floordiv (numba.tests.test_operators.TestMixedInts) ... ok
test_invert (numba.tests.test_operators.TestMixedInts) ... ok
test_lshift (numba.tests.test_operators.TestMixedInts) ... ok
test_mod (numba.tests.test_operators.TestMixedInts) ... ok
test_mul (numba.tests.test_operators.TestMixedInts) ... ok
test_or (numba.tests.test_operators.TestMixedInts) ... ok
test_pow (numba.tests.test_operators.TestMixedInts) ... /home/graham/pypy/numba/numba/tests/test_operators.py:1223: RuntimeWarning: invalid value encountered in power
  return op(tp(a), tp(b))
FAIL
test_rshift (numba.tests.test_operators.TestMixedInts) ... ok
test_sub (numba.tests.test_operators.TestMixedInts) ... ok
test_truediv (numba.tests.test_operators.TestMixedInts) ... ok
test_unary_negative (numba.tests.test_operators.TestMixedInts) ... ok
test_unary_positive (numba.tests.test_operators.TestMixedInts) ... ok
test_xor (numba.tests.test_operators.TestMixedInts) ... ok
test_add (numba.tests.test_operators.TestMixedIntsOperatorModule) ... ok
test_and (numba.tests.test_operators.TestMixedIntsOperatorModule) ... ok
test_floordiv (numba.tests.test_operators.TestMixedIntsOperatorModule) ... ok
test_invert (numba.tests.test_operators.TestMixedIntsOperatorModule) ... ok
test_lshift (numba.tests.test_operators.TestMixedIntsOperatorModule) ... ok
test_mod (numba.tests.test_operators.TestMixedIntsOperatorModule) ... ok
test_mul (numba.tests.test_operators.TestMixedIntsOperatorModule) ... ok
test_or (numba.tests.test_operators.TestMixedIntsOperatorModule) ... ok
test_pow (numba.tests.test_operators.TestMixedIntsOperatorModule) ... FAIL
test_rshift (numba.tests.test_operators.TestMixedIntsOperatorModule) ... ok
test_sub (numba.tests.test_operators.TestMixedIntsOperatorModule) ... ok
test_truediv (numba.tests.test_operators.TestMixedIntsOperatorModule) ... ok
test_unary_negative (numba.tests.test_operators.TestMixedIntsOperatorModule) ... ok
test_unary_positive (numba.tests.test_operators.TestMixedIntsOperatorModule) ... ok
test_xor (numba.tests.test_operators.TestMixedIntsOperatorModule) ... ok
test_add_complex (numba.tests.test_operators.TestOperatorModule) ... ok
test_add_complex_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_add_floats (numba.tests.test_operators.TestOperatorModule) ... ok
test_add_floats_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_add_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_add_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitshift_ileft_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitshift_ileft_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitshift_iright_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitshift_iright_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitshift_left_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitshift_left_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitshift_right_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitshift_right_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_and_bools (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_and_bools_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_and_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_and_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_iand_bools (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_iand_bools_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_iand_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_iand_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_ior_bools (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_ior_bools_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_ior_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_ior_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_ixor_bools (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_ixor_bools_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_ixor_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_ixor_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_not (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_not_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_or_bools (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_or_bools_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_or_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_or_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_xor_bools (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_xor_bools_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_xor_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_bitwise_xor_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_div_complex (numba.tests.test_operators.TestOperatorModule) ... ok
test_div_complex_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_div_errors (numba.tests.test_operators.TestOperatorModule) ... ok
test_div_errors_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_div_floats (numba.tests.test_operators.TestOperatorModule) ... ok
test_div_floats_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_div_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_div_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_eq_scalar (numba.tests.test_operators.TestOperatorModule) ... ok
test_eq_scalar_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_floordiv_errors (numba.tests.test_operators.TestOperatorModule) ... ok
test_floordiv_errors_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_floordiv_floats (numba.tests.test_operators.TestOperatorModule) ... ok
test_floordiv_floats_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_floordiv_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_floordiv_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_ge_scalar (numba.tests.test_operators.TestOperatorModule) ... ok
test_ge_scalar_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_gt_scalar (numba.tests.test_operators.TestOperatorModule) ... ok
test_gt_scalar_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_iadd_complex (numba.tests.test_operators.TestOperatorModule) ... ok
test_iadd_complex_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_iadd_floats (numba.tests.test_operators.TestOperatorModule) ... ok
test_iadd_floats_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_iadd_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_iadd_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_idiv_complex (numba.tests.test_operators.TestOperatorModule) ... ok
test_idiv_complex_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_idiv_floats (numba.tests.test_operators.TestOperatorModule) ... ok
test_idiv_floats_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_idiv_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_idiv_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_ifloordiv_floats (numba.tests.test_operators.TestOperatorModule) ... ok
test_ifloordiv_floats_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_ifloordiv_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_ifloordiv_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_imatmul (numba.tests.test_operators.TestOperatorModule) ... skipped 'the matrix multiplication operator needs Python 3.5+ and Numpy 1.10+'
test_imatmul_npm (numba.tests.test_operators.TestOperatorModule) ... skipped 'the matrix multiplication operator needs Python 3.5+ and Numpy 1.10+'
test_imod_floats (numba.tests.test_operators.TestOperatorModule) ... ok
test_imod_floats_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_imod_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_imod_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_imul_complex (numba.tests.test_operators.TestOperatorModule) ... ok
test_imul_complex_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_imul_floats (numba.tests.test_operators.TestOperatorModule) ... ok
test_imul_floats_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_imul_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_imul_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_in (numba.tests.test_operators.TestOperatorModule) ... ok
test_in_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_ipow_floats (numba.tests.test_operators.TestOperatorModule) ... ok
test_ipow_floats_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_ipow_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_ipow_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_isub_complex (numba.tests.test_operators.TestOperatorModule) ... ok
test_isub_complex_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_isub_floats (numba.tests.test_operators.TestOperatorModule) ... ok
test_isub_floats_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_isub_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_isub_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_itruediv_complex (numba.tests.test_operators.TestOperatorModule) ... ok
test_itruediv_complex_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_itruediv_floats (numba.tests.test_operators.TestOperatorModule) ... ok
test_itruediv_floats_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_itruediv_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_itruediv_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_le_scalar (numba.tests.test_operators.TestOperatorModule) ... ok
test_le_scalar_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_lt_scalar (numba.tests.test_operators.TestOperatorModule) ... ok
test_lt_scalar_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_matmul (numba.tests.test_operators.TestOperatorModule) ... skipped 'the matrix multiplication operator needs Python 3.5+ and Numpy 1.10+'
test_matmul_npm (numba.tests.test_operators.TestOperatorModule) ... skipped 'the matrix multiplication operator needs Python 3.5+ and Numpy 1.10+'
test_mod_complex (numba.tests.test_operators.TestOperatorModule) ... ok
test_mod_complex_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_mod_errors (numba.tests.test_operators.TestOperatorModule) ... ok
test_mod_errors_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_mod_floats (numba.tests.test_operators.TestOperatorModule) ... ok
test_mod_floats_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_mod_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_mod_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_mul_complex (numba.tests.test_operators.TestOperatorModule) ... ok
test_mul_complex_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_mul_floats (numba.tests.test_operators.TestOperatorModule) ... ok
test_mul_floats_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_mul_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_mul_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_ne_scalar (numba.tests.test_operators.TestOperatorModule) ... ok
test_ne_scalar_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_negate (numba.tests.test_operators.TestOperatorModule) ... ok
test_negate_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_not (numba.tests.test_operators.TestOperatorModule) ... ok
test_not_in (numba.tests.test_operators.TestOperatorModule) ... ok
test_not_in_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_not_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_pow_floats (numba.tests.test_operators.TestOperatorModule) ... ok
test_pow_floats_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_pow_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_pow_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_sub_complex (numba.tests.test_operators.TestOperatorModule) ... ok
test_sub_complex_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_sub_floats (numba.tests.test_operators.TestOperatorModule) ... ok
test_sub_floats_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_sub_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_sub_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_truediv_complex (numba.tests.test_operators.TestOperatorModule) ... ok
test_truediv_complex_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_truediv_errors (numba.tests.test_operators.TestOperatorModule) ... ok
test_truediv_errors_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_truediv_floats (numba.tests.test_operators.TestOperatorModule) ... ok
test_truediv_floats_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_truediv_ints (numba.tests.test_operators.TestOperatorModule) ... ok
test_truediv_ints_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_unary_positive (numba.tests.test_operators.TestOperatorModule) ... ok
test_unary_positive_npm (numba.tests.test_operators.TestOperatorModule) ... ok
test_add_complex (numba.tests.test_operators.TestOperators) ... ok
test_add_complex_npm (numba.tests.test_operators.TestOperators) ... ok
test_add_floats (numba.tests.test_operators.TestOperators) ... ok
test_add_floats_npm (numba.tests.test_operators.TestOperators) ... ok
test_add_ints (numba.tests.test_operators.TestOperators) ... ok
test_add_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_bitshift_ileft_ints (numba.tests.test_operators.TestOperators) ... ok
test_bitshift_ileft_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_bitshift_iright_ints (numba.tests.test_operators.TestOperators) ... ok
test_bitshift_iright_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_bitshift_left_ints (numba.tests.test_operators.TestOperators) ... ok
test_bitshift_left_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_bitshift_right_ints (numba.tests.test_operators.TestOperators) ... ok
test_bitshift_right_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_and_bools (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_and_bools_npm (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_and_ints (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_and_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_iand_bools (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_iand_bools_npm (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_iand_ints (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_iand_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_ior_bools (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_ior_bools_npm (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_ior_ints (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_ior_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_ixor_bools (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_ixor_bools_npm (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_ixor_ints (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_ixor_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_not (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_not_npm (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_or_bools (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_or_bools_npm (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_or_ints (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_or_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_xor_bools (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_xor_bools_npm (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_xor_ints (numba.tests.test_operators.TestOperators) ... ok
test_bitwise_xor_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_div_complex (numba.tests.test_operators.TestOperators) ... ok
test_div_complex_npm (numba.tests.test_operators.TestOperators) ... ok
test_div_errors (numba.tests.test_operators.TestOperators) ... ok
test_div_errors_npm (numba.tests.test_operators.TestOperators) ... ok
test_div_floats (numba.tests.test_operators.TestOperators) ... ok
test_div_floats_npm (numba.tests.test_operators.TestOperators) ... ok
test_div_ints (numba.tests.test_operators.TestOperators) ... ok
test_div_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_eq_scalar (numba.tests.test_operators.TestOperators) ... ok
test_eq_scalar_npm (numba.tests.test_operators.TestOperators) ... ok
test_floordiv_errors (numba.tests.test_operators.TestOperators) ... ok
test_floordiv_errors_npm (numba.tests.test_operators.TestOperators) ... ok
test_floordiv_floats (numba.tests.test_operators.TestOperators) ... ok
test_floordiv_floats_npm (numba.tests.test_operators.TestOperators) ... ok
test_floordiv_ints (numba.tests.test_operators.TestOperators) ... ok
test_floordiv_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_ge_scalar (numba.tests.test_operators.TestOperators) ... ok
test_ge_scalar_npm (numba.tests.test_operators.TestOperators) ... ok
test_gt_scalar (numba.tests.test_operators.TestOperators) ... ok
test_gt_scalar_npm (numba.tests.test_operators.TestOperators) ... ok
test_iadd_complex (numba.tests.test_operators.TestOperators) ... ok
test_iadd_complex_npm (numba.tests.test_operators.TestOperators) ... ok
test_iadd_floats (numba.tests.test_operators.TestOperators) ... ok
test_iadd_floats_npm (numba.tests.test_operators.TestOperators) ... ok
test_iadd_ints (numba.tests.test_operators.TestOperators) ... ok
test_iadd_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_idiv_complex (numba.tests.test_operators.TestOperators) ... ok
test_idiv_complex_npm (numba.tests.test_operators.TestOperators) ... ok
test_idiv_floats (numba.tests.test_operators.TestOperators) ... ok
test_idiv_floats_npm (numba.tests.test_operators.TestOperators) ... ok
test_idiv_ints (numba.tests.test_operators.TestOperators) ... ok
test_idiv_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_ifloordiv_floats (numba.tests.test_operators.TestOperators) ... ok
test_ifloordiv_floats_npm (numba.tests.test_operators.TestOperators) ... ok
test_ifloordiv_ints (numba.tests.test_operators.TestOperators) ... ok
test_ifloordiv_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_imatmul (numba.tests.test_operators.TestOperators) ... skipped 'the matrix multiplication operator needs Python 3.5+ and Numpy 1.10+'
test_imatmul_npm (numba.tests.test_operators.TestOperators) ... skipped 'the matrix multiplication operator needs Python 3.5+ and Numpy 1.10+'
test_imod_floats (numba.tests.test_operators.TestOperators) ... ok
test_imod_floats_npm (numba.tests.test_operators.TestOperators) ... ok
test_imod_ints (numba.tests.test_operators.TestOperators) ... ok
test_imod_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_imul_complex (numba.tests.test_operators.TestOperators) ... ok
test_imul_complex_npm (numba.tests.test_operators.TestOperators) ... ok
test_imul_floats (numba.tests.test_operators.TestOperators) ... ok
test_imul_floats_npm (numba.tests.test_operators.TestOperators) ... ok
test_imul_ints (numba.tests.test_operators.TestOperators) ... ok
test_imul_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_in (numba.tests.test_operators.TestOperators) ... ok
test_in_npm (numba.tests.test_operators.TestOperators) ... ok
test_ipow_floats (numba.tests.test_operators.TestOperators) ... ok
test_ipow_floats_npm (numba.tests.test_operators.TestOperators) ... ok
test_ipow_ints (numba.tests.test_operators.TestOperators) ... ok
test_ipow_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_isub_complex (numba.tests.test_operators.TestOperators) ... ok
test_isub_complex_npm (numba.tests.test_operators.TestOperators) ... ok
test_isub_floats (numba.tests.test_operators.TestOperators) ... ok
test_isub_floats_npm (numba.tests.test_operators.TestOperators) ... ok
test_isub_ints (numba.tests.test_operators.TestOperators) ... ok
test_isub_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_itruediv_complex (numba.tests.test_operators.TestOperators) ... ok
test_itruediv_complex_npm (numba.tests.test_operators.TestOperators) ... ok
test_itruediv_floats (numba.tests.test_operators.TestOperators) ... ok
test_itruediv_floats_npm (numba.tests.test_operators.TestOperators) ... ok
test_itruediv_ints (numba.tests.test_operators.TestOperators) ... ok
test_itruediv_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_le_scalar (numba.tests.test_operators.TestOperators) ... ok
test_le_scalar_npm (numba.tests.test_operators.TestOperators) ... ok
test_lt_scalar (numba.tests.test_operators.TestOperators) ... ok
test_lt_scalar_npm (numba.tests.test_operators.TestOperators) ... ok
test_matmul (numba.tests.test_operators.TestOperators) ... skipped 'the matrix multiplication operator needs Python 3.5+ and Numpy 1.10+'
test_matmul_npm (numba.tests.test_operators.TestOperators) ... skipped 'the matrix multiplication operator needs Python 3.5+ and Numpy 1.10+'
test_mod_complex (numba.tests.test_operators.TestOperators) ... ok
test_mod_complex_npm (numba.tests.test_operators.TestOperators) ... ok
test_mod_errors (numba.tests.test_operators.TestOperators) ... ok
test_mod_errors_npm (numba.tests.test_operators.TestOperators) ... ok
test_mod_floats (numba.tests.test_operators.TestOperators) ... ok
test_mod_floats_npm (numba.tests.test_operators.TestOperators) ... ok
test_mod_ints (numba.tests.test_operators.TestOperators) ... ok
test_mod_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_mul_complex (numba.tests.test_operators.TestOperators) ... ok
test_mul_complex_npm (numba.tests.test_operators.TestOperators) ... ok
test_mul_floats (numba.tests.test_operators.TestOperators) ... ok
test_mul_floats_npm (numba.tests.test_operators.TestOperators) ... ok
test_mul_ints (numba.tests.test_operators.TestOperators) ... ok
test_mul_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_ne_scalar (numba.tests.test_operators.TestOperators) ... ok
test_ne_scalar_npm (numba.tests.test_operators.TestOperators) ... ok
test_negate (numba.tests.test_operators.TestOperators) ... ok
test_negate_npm (numba.tests.test_operators.TestOperators) ... ok
test_not (numba.tests.test_operators.TestOperators) ... ok
test_not_in (numba.tests.test_operators.TestOperators) ... ok
test_not_in_npm (numba.tests.test_operators.TestOperators) ... ok
test_not_npm (numba.tests.test_operators.TestOperators) ... ok
test_pow_floats (numba.tests.test_operators.TestOperators) ... ok
test_pow_floats_npm (numba.tests.test_operators.TestOperators) ... ok
test_pow_ints (numba.tests.test_operators.TestOperators) ... ok
test_pow_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_sub_complex (numba.tests.test_operators.TestOperators) ... ok
test_sub_complex_npm (numba.tests.test_operators.TestOperators) ... ok
test_sub_floats (numba.tests.test_operators.TestOperators) ... ok
test_sub_floats_npm (numba.tests.test_operators.TestOperators) ... ok
test_sub_ints (numba.tests.test_operators.TestOperators) ... ok
test_sub_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_truediv_complex (numba.tests.test_operators.TestOperators) ... ok
test_truediv_complex_npm (numba.tests.test_operators.TestOperators) ... ok
test_truediv_errors (numba.tests.test_operators.TestOperators) ... ok
test_truediv_errors_npm (numba.tests.test_operators.TestOperators) ... ok
test_truediv_floats (numba.tests.test_operators.TestOperators) ... ok
test_truediv_floats_npm (numba.tests.test_operators.TestOperators) ... ok
test_truediv_ints (numba.tests.test_operators.TestOperators) ... ok
test_truediv_ints_npm (numba.tests.test_operators.TestOperators) ... ok
test_unary_positive (numba.tests.test_operators.TestOperators) ... ok
test_unary_positive_npm (numba.tests.test_operators.TestOperators) ... ok
test_int_values (numba.tests.test_operators.TestStaticPower) ... ok
test_real_values (numba.tests.test_operators.TestStaticPower) ... ok
test_compare (numba.tests.test_enums.TestEnum) ... ok
test_constant (numba.tests.test_enums.TestEnum) ... ok
test_identity (numba.tests.test_enums.TestEnum) ... ok
test_return (numba.tests.test_enums.TestEnum) ... ok
test_compare (numba.tests.test_enums.TestIntEnum) ... ok
test_constant (numba.tests.test_enums.TestIntEnum) ... ok
test_int_coerce (numba.tests.test_enums.TestIntEnum) ... ok
test_return (numba.tests.test_enums.TestIntEnum) ... ok
test_abs_tol_parse (numba.tests.test_support.TestAssertPreciseEqual) ... ok
test_arrays (numba.tests.test_support.TestAssertPreciseEqual) ... ok
test_bool_values (numba.tests.test_support.TestAssertPreciseEqual) ... ok
test_complex128_values_inexact (numba.tests.test_support.TestAssertPreciseEqual) ... ok
test_complex64_values_inexact (numba.tests.test_support.TestAssertPreciseEqual) ... ok
test_complex_values (numba.tests.test_support.TestAssertPreciseEqual) ... ok
test_enums (numba.tests.test_support.TestAssertPreciseEqual) ... ok
test_float32_values (numba.tests.test_support.TestAssertPreciseEqual) ... ok
test_float32_values_inexact (numba.tests.test_support.TestAssertPreciseEqual) ... ok
test_float64_values (numba.tests.test_support.TestAssertPreciseEqual) ... ok
test_float64_values_inexact (numba.tests.test_support.TestAssertPreciseEqual) ... ok
test_float_values (numba.tests.test_support.TestAssertPreciseEqual) ... ok
test_int_values (numba.tests.test_support.TestAssertPreciseEqual) ... ok
test_npdatetime (numba.tests.test_support.TestAssertPreciseEqual) ... ok
test_nptimedelta (numba.tests.test_support.TestAssertPreciseEqual) ... ok
test_types (numba.tests.test_support.TestAssertPreciseEqual) ... ok
test_assertRefCount (numba.tests.test_support.TestMisc) ... ERROR
test_forbid_codegen (numba.tests.test_support.TestMisc) ... ok
test_numpy_integers (numba.tests.test_typenames.TestTypeNames) ... ok
test_from_dtype (numba.tests.test_record_dtype.TestRecordDtype) ... ok
test_get_a (numba.tests.test_record_dtype.TestRecordDtype) ... ok
test_get_b (numba.tests.test_record_dtype.TestRecordDtype) ... ok
test_get_c (numba.tests.test_record_dtype.TestRecordDtype) ... ok
test_get_two_a (numba.tests.test_record_dtype.TestRecordDtype) ... ok
test_get_two_b (numba.tests.test_record_dtype.TestRecordDtype) ... ok
test_get_two_c (numba.tests.test_record_dtype.TestRecordDtype) ... ok
test_record_arg_transform (numba.tests.test_record_dtype.TestRecordDtype) ... ok
test_record_args (numba.tests.test_record_dtype.TestRecordDtype) ... ERROR
test_record_args_reverse (numba.tests.test_record_dtype.TestRecordDtype) ... ERROR
test_record_read_2d_array (numba.tests.test_record_dtype.TestRecordDtype) ... ERROR
test_record_read_array (numba.tests.test_record_dtype.TestRecordDtype) ... ERROR
test_record_return (numba.tests.test_record_dtype.TestRecordDtype) ... ERROR
test_record_two_arrays (numba.tests.test_record_dtype.TestRecordDtype) ... ERROR
test_record_write_2d_array (numba.tests.test_record_dtype.TestRecordDtype) ... ERROR
test_record_write_array (numba.tests.test_record_dtype.TestRecordDtype) ... ERROR
test_set_a (numba.tests.test_record_dtype.TestRecordDtype) ... ok
test_set_b (numba.tests.test_record_dtype.TestRecordDtype) ... ok
test_set_c (numba.tests.test_record_dtype.TestRecordDtype) ... ok
test_set_record (numba.tests.test_record_dtype.TestRecordDtype) ... ERROR
test_structure_dtype_with_titles (numba.tests.test_record_dtype.TestRecordDtype) ... skipped 'PYPY FIXME - fatal cpyext error'
test_two_distinct_arrays (numba.tests.test_record_dtype.TestRecordDtype) ... ok
test_two_distinct_records (numba.tests.test_record_dtype.TestRecordDtype) ... ERROR
test_two_records (numba.tests.test_record_dtype.TestRecordDtype) ... ERROR
test_npm_argument_charseq (numba.tests.test_record_dtype.TestRecordDtypeWithCharSeq) ... ok
test_py_argument_char_seq_near_overflow (numba.tests.test_record_dtype.TestRecordDtypeWithCharSeq) ... ok
test_py_argument_char_seq_truncate (numba.tests.test_record_dtype.TestRecordDtypeWithCharSeq) ... ok
test_py_argument_charseq (numba.tests.test_record_dtype.TestRecordDtypeWithCharSeq) ... ok
test_return_charseq (numba.tests.test_record_dtype.TestRecordDtypeWithCharSeq) ... ok
test_return_charseq_tuple (numba.tests.test_record_dtype.TestRecordDtypeWithCharSeq) ... ok
test_from_dtype (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher) ... ok
test_get_a (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher) ... ok
test_get_b (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher) ... ok
test_get_c (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher) ... ok
test_get_two_a (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher) ... ok
test_get_two_b (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher) ... ok
test_get_two_c (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher) ... ok
test_record_arg_transform (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher) ... ok
test_record_args (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher) ... ERROR
test_record_args_reverse (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher) ... ERROR
test_record_read_2d_array (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher) ... ERROR
test_record_read_array (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher) ... ERROR
test_record_return (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher) ... ERROR
test_record_two_arrays (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher) ... ERROR
test_record_write_2d_array (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher) ... ERROR
test_record_write_array (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher) ... ERROR
test_set_a (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher) ... ok
test_set_b (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher) ... ok
test_set_c (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher) ... ok
test_set_record (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher) ... ERROR
test_structure_dtype_with_titles (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher) ... skipped 'PYPY FIXME - fatal cpyext error'
test_two_distinct_arrays (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher) ... ok
test_two_distinct_records (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher) ... ERROR
test_two_records (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher) ... ERROR
test_from_dtype (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays) ... ok
test_get_a (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays) ... ok
test_get_b (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays) ... ok
test_get_c (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays) ... ok
test_get_two_a (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays) ... ok
test_get_two_b (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays) ... ok
test_get_two_c (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays) ... ok
test_record_arg_transform (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays) ... ok
test_record_args (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays) ... ERROR
test_record_args_reverse (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays) ... ERROR
test_record_read_2d_array (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays) ... ERROR
test_record_read_array (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays) ... ERROR
test_record_return (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays) ... ERROR
test_record_two_arrays (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays) ... ERROR
test_record_write_2d_array (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays) ... ERROR
test_record_write_array (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays) ... ERROR
test_set_a (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays) ... ok
test_set_b (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays) ... ok
test_set_c (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays) ... ok
test_set_record (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays) ... ERROR
test_structure_dtype_with_titles (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays) ... skipped 'PYPY FIXME - fatal cpyext error'
test_two_distinct_arrays (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays) ... ok
test_two_distinct_records (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays) ... ERROR
test_two_records (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays) ... ok
test_from_dtype (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher) ... ok
test_get_a (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher) ... ok
test_get_b (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher) ... ok
test_get_c (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher) ... ok
test_get_two_a (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher) ... ok
test_get_two_b (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher) ... ok
test_get_two_c (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher) ... ok
test_record_arg_transform (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher) ... ok
test_record_args (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher) ... ERROR
test_record_args_reverse (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher) ... ERROR
test_record_read_2d_array (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher) ... ERROR
test_record_read_array (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher) ... ERROR
test_record_return (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher) ... ERROR
test_record_two_arrays (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher) ... ERROR
test_record_write_2d_array (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher) ... ERROR
test_record_write_array (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher) ... ERROR
test_set_a (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher) ... ok
test_set_b (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher) ... ok
test_set_c (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher) ... ok
test_set_record (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher) ... ERROR
test_structure_dtype_with_titles (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher) ... skipped 'PYPY FIXME - fatal cpyext error'
test_two_distinct_arrays (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher) ... ok
test_two_distinct_records (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher) ... ERROR
test_two_records (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher) ... ok
test_nans (numba.tests.test_nan.TestNaN) ... ok
test_nans_npm (numba.tests.test_nan.TestNaN) ... ok
test_backbone_loopless (numba.tests.test_flow_control.TestCFGraph) ... ok
test_backbone_loops (numba.tests.test_flow_control.TestCFGraph) ... ok
test_dead_nodes (numba.tests.test_flow_control.TestCFGraph) ... ok
test_descendents (numba.tests.test_flow_control.TestCFGraph) ... ok
test_dominators_loopless (numba.tests.test_flow_control.TestCFGraph) ... ok
test_dominators_loops (numba.tests.test_flow_control.TestCFGraph) ... ok
test_exit_points (numba.tests.test_flow_control.TestCFGraph) ... ok
test_loops (numba.tests.test_flow_control.TestCFGraph) ... ok
test_post_dominators_infinite_loops (numba.tests.test_flow_control.TestCFGraph) ... ok
test_post_dominators_loopless (numba.tests.test_flow_control.TestCFGraph) ... ok
test_post_dominators_loops (numba.tests.test_flow_control.TestCFGraph) ... ok
test_simple_properties (numba.tests.test_flow_control.TestCFGraph) ... ok
test_topo_order (numba.tests.test_flow_control.TestCFGraph) ... ok
test_topo_sort (numba.tests.test_flow_control.TestCFGraph) ... ok
test_for_loop1 (numba.tests.test_flow_control.TestFlowControl) ... ok
test_for_loop10 (numba.tests.test_flow_control.TestFlowControl) ... ok
test_for_loop10_npm (numba.tests.test_flow_control.TestFlowControl) ... ok
test_for_loop1_npm (numba.tests.test_flow_control.TestFlowControl) ... ok
test_for_loop2 (numba.tests.test_flow_control.TestFlowControl) ... ok
test_for_loop2_npm (numba.tests.test_flow_control.TestFlowControl) ... ok
test_for_loop3 (numba.tests.test_flow_control.TestFlowControl) ... ok
test_for_loop3_npm (numba.tests.test_flow_control.TestFlowControl) ... ok
test_for_loop4 (numba.tests.test_flow_control.TestFlowControl) ... ok
test_for_loop4_npm (numba.tests.test_flow_control.TestFlowControl) ... ok
test_for_loop5 (numba.tests.test_flow_control.TestFlowControl) ... ok
test_for_loop5_npm (numba.tests.test_flow_control.TestFlowControl) ... ok
test_for_loop6 (numba.tests.test_flow_control.TestFlowControl) ... ok
test_for_loop6_npm (numba.tests.test_flow_control.TestFlowControl) ... ok
test_for_loop7 (numba.tests.test_flow_control.TestFlowControl) ... ok
test_for_loop7_npm (numba.tests.test_flow_control.TestFlowControl) ... ok
test_for_loop8 (numba.tests.test_flow_control.TestFlowControl) ... ok
test_for_loop8_npm (numba.tests.test_flow_control.TestFlowControl) ... ok
test_for_loop9 (numba.tests.test_flow_control.TestFlowControl) ... ok
test_for_loop9_npm (numba.tests.test_flow_control.TestFlowControl) ... ok
test_ifelse1 (numba.tests.test_flow_control.TestFlowControl) ... ok
test_ifelse1_npm (numba.tests.test_flow_control.TestFlowControl) ... ok
test_ifelse2 (numba.tests.test_flow_control.TestFlowControl) ... ok
test_ifelse2_npm (numba.tests.test_flow_control.TestFlowControl) ... ok
test_ifelse3 (numba.tests.test_flow_control.TestFlowControl) ... ok
test_ifelse3_npm (numba.tests.test_flow_control.TestFlowControl) ... ok
test_ifelse4 (numba.tests.test_flow_control.TestFlowControl) ... ok
test_ifelse4_npm (numba.tests.test_flow_control.TestFlowControl) ... ok
test_ternary_ifelse1 (numba.tests.test_flow_control.TestFlowControl) ... ok
test_ternary_ifelse1_npm (numba.tests.test_flow_control.TestFlowControl) ... ok
test_while_loop1 (numba.tests.test_flow_control.TestFlowControl) ... ok
test_while_loop1_npm (numba.tests.test_flow_control.TestFlowControl) ... ok
test_while_loop2 (numba.tests.test_flow_control.TestFlowControl) ... ok
test_while_loop2_npm (numba.tests.test_flow_control.TestFlowControl) ... ok
test_while_loop3 (numba.tests.test_flow_control.TestFlowControl) ... ok
test_while_loop3_npm (numba.tests.test_flow_control.TestFlowControl) ... ok
test_while_loop4 (numba.tests.test_flow_control.TestFlowControl) ... ok
test_while_loop4_npm (numba.tests.test_flow_control.TestFlowControl) ... ok
test_while_loop5 (numba.tests.test_flow_control.TestFlowControl) ... ok
test_while_loop5_npm (numba.tests.test_flow_control.TestFlowControl) ... ok
test_return_generator_expr (numba.tests.test_generators.TestGenExprs) ... ok
test_issue_1254 (numba.tests.test_generators.TestGeneratorWithNRT) ... skipped 'PYPY FIXME - mysterious death'
test_issue_1265 (numba.tests.test_generators.TestGeneratorWithNRT) ... skipped 'PYPY FIXME - mysterious death'
test_consume_gen1 (numba.tests.test_generators.TestGenerators) ... ok
test_consume_gen2 (numba.tests.test_generators.TestGenerators) ... ok
test_consume_gen3 (numba.tests.test_generators.TestGenerators) ... ok
test_gen1 (numba.tests.test_generators.TestGenerators) ... skipped 'PYPY FIXME - mysterious death'
test_gen1_objmode (numba.tests.test_generators.TestGenerators) ... skipped 'PYPY FIXME - mysterious death'
test_gen2 (numba.tests.test_generators.TestGenerators) ... skipped 'PYPY FIXME - mysterious death'
test_gen2_objmode (numba.tests.test_generators.TestGenerators) ... skipped 'PYPY FIXME - mysterious death'
test_gen3 (numba.tests.test_generators.TestGenerators) ... skipped 'PYPY FIXME - mysterious death'
test_gen3_objmode (numba.tests.test_generators.TestGenerators) ... skipped 'PYPY FIXME - mysterious death'
test_gen4 (numba.tests.test_generators.TestGenerators) ... skipped 'PYPY FIXME - mysterious death'
test_gen4_objmode (numba.tests.test_generators.TestGenerators) ... skipped 'PYPY FIXME - mysterious death'
test_gen5 (numba.tests.test_generators.TestGenerators) ... ok
test_gen5_objmode (numba.tests.test_generators.TestGenerators) ... skipped 'PYPY FIXME - mysterious death'
test_gen6 (numba.tests.test_generators.TestGenerators) ... ok
test_gen6_objmode (numba.tests.test_generators.TestGenerators) ... ok
test_gen7 (numba.tests.test_generators.TestGenerators) ... skipped 'PYPY FIXME - mysterious death'
test_gen7_objmode (numba.tests.test_generators.TestGenerators) ... skipped 'PYPY FIXME - mysterious death'
test_gen8 (numba.tests.test_generators.TestGenerators) ... skipped 'PYPY FIXME - mysterious death'
test_gen8_objmode (numba.tests.test_generators.TestGenerators) ... skipped 'PYPY FIXME - mysterious death'
test_ndenumerate (numba.tests.test_generators.TestGenerators) ... skipped 'PYPY FIXME - mysterious death'
test_ndenumerate_objmode (numba.tests.test_generators.TestGenerators) ... skipped 'PYPY FIXME - mysterious death'
test_ndindex (numba.tests.test_generators.TestGenerators) ... skipped 'PYPY FIXME - mysterious death'
test_ndindex_objmode (numba.tests.test_generators.TestGenerators) ... skipped 'PYPY FIXME - mysterious death'
test_np_flat (numba.tests.test_generators.TestGenerators) ... skipped 'PYPY FIXME - mysterious death'
test_np_flat_objmode (numba.tests.test_generators.TestGenerators) ... skipped 'PYPY FIXME - mysterious death'
test_combine_gen0_gen1 (numba.tests.test_generators.TestNrtArrayGen) ... skipped 'PYPY FIXME - mysterious death'
test_nrt_gen0 (numba.tests.test_generators.TestNrtArrayGen) ... skipped 'PYPY FIXME - mysterious death'
test_nrt_gen0_no_iter (numba.tests.test_generators.TestNrtArrayGen) ... ERROR
ERROR
test_nrt_gen0_stop_iteration (numba.tests.test_generators.TestNrtArrayGen) ... skipped 'PYPY FIXME - mysterious death'
test_nrt_gen1 (numba.tests.test_generators.TestNrtArrayGen) ... skipped 'PYPY FIXME - mysterious death'
test_nrt_nested_gen (numba.tests.test_generators.TestNrtNestedGen) ... ERROR
test_nrt_nested_gen_refct (numba.tests.test_generators.TestNrtNestedGen) ... expected failure
test_nrt_nested_nopython_gen (numba.tests.test_generators.TestNrtNestedGen) ... skipped 'PYPY FIXME - mysterious death'
test_one_args (numba.tests.test_mangling.TestMangling) ... ok
test_two_args (numba.tests.test_mangling.TestMangling) ... ok
test_unicode_fname (numba.tests.test_mangling.TestMangling) ... ok
test_int_return_type (numba.tests.test_python_int.TestPythonInt) ... ok
test_int_return_type_npm (numba.tests.test_python_int.TestPythonInt) ... ok
test_long_int_return_type (numba.tests.test_python_int.TestPythonInt) ... ok
test_long_int_return_type_npm (numba.tests.test_python_int.TestPythonInt) ... ok
test_longer_int_return_type (numba.tests.test_python_int.TestPythonInt) ... ok
test_unsigned_int_return_type (numba.tests.test_python_int.TestPythonInt) ... ok
test_unsigned_int_return_type_npm (numba.tests.test_python_int.TestPythonInt) ... ok
test_record_alignment (numba.tests.test_alignment.TestAlignment) ... ok
test_record_misaligned (numba.tests.test_alignment.TestAlignment) ... ok
test_andor (numba.tests.test_loopdetection.TestLoopDetection) ... ok
test_copy_arrays (numba.tests.test_loopdetection.TestLoopDetection) ... ok
test_sum1d (numba.tests.test_loopdetection.TestLoopDetection) ... ok
test_sum2d (numba.tests.test_loopdetection.TestLoopDetection) ... ok
test_while_count (numba.tests.test_loopdetection.TestLoopDetection) ... ok
test_assignments (numba.tests.test_dataflow.TestDataFlow) ... ok
test_assignments2 (numba.tests.test_dataflow.TestDataFlow) ... ok
test_chained_compare (numba.tests.test_dataflow.TestDataFlow) ... ok
test_chained_compare_npm (numba.tests.test_dataflow.TestDataFlow) ... ok
test_for_break (numba.tests.test_dataflow.TestDataFlow) ... ok
test_for_break_npm (numba.tests.test_dataflow.TestDataFlow) ... ok
test_stack_effect_error (numba.tests.test_dataflow.TestDataFlow) ... ok
test_stack_effect_error_npm (numba.tests.test_dataflow.TestDataFlow) ... ok
test_var_propagate1 (numba.tests.test_dataflow.TestDataFlow) ... ok
test_var_propagate2 (numba.tests.test_dataflow.TestDataFlow) ... ok
test_var_propagate3 (numba.tests.test_dataflow.TestDataFlow) ... ok
test_var_propagate4 (numba.tests.test_dataflow.TestDataFlow) ... ok
test_var_swapping (numba.tests.test_dataflow.TestDataFlow) ... ok
test_var_swapping_npm (numba.tests.test_dataflow.TestDataFlow) ... ok
test_array_to_array (numba.tests.test_casting.TestCasting)
Make sure this compiles. ... ok
test_float_to_complex (numba.tests.test_casting.TestCasting) ... ok
test_float_to_int (numba.tests.test_casting.TestCasting) ... ok
test_float_to_unsigned (numba.tests.test_casting.TestCasting) ... ok
test_int_to_float (numba.tests.test_casting.TestCasting) ... ok
test_optional_to_optional (numba.tests.test_casting.TestCasting) ... ok
test_array_adaptor (numba.tests.test_numpyadapt.TestArrayAdaptor) ... skipped 'PYPY FIXME - segfault'
test_ambiguous_casts (numba.tests.test_target_overloadselector.TestAmbiguousOverloads) ... ok
test_ambiguous_functions (numba.tests.test_target_overloadselector.TestAmbiguousOverloads) ... ok
test_ambiguous_detection (numba.tests.test_target_overloadselector.TestOverloadSelector) ... ok
test_cache (numba.tests.test_target_overloadselector.TestOverloadSelector) ... ok
test_match (numba.tests.test_target_overloadselector.TestOverloadSelector) ... ok
test_select_and_sort_1 (numba.tests.test_target_overloadselector.TestOverloadSelector) ... ok
test_select_and_sort_2 (numba.tests.test_target_overloadselector.TestOverloadSelector) ... ok
test_subclass_specialization (numba.tests.test_target_overloadselector.TestOverloadSelector) ... ok
test_cmp_op (numba.tests.test_array_exprs.TestArrayExpressions) ... ERROR
test_common_subexpressions (numba.tests.test_array_exprs.TestArrayExpressions) ... /home/graham/pypy/numba/numba/tests/test_array_exprs.py:32: RuntimeWarning: invalid value encountered in sqrt
  return (-Bs - (_Bs2_4AsCs ** 0.5)) / _2As
ERROR
test_complex_subexpression (numba.tests.test_array_exprs.TestArrayExpressions) ... ERROR
test_complicated_expr (numba.tests.test_array_exprs.TestArrayExpressions) ... /home/graham/pypy/numba/numba/tests/test_array_exprs.py:26: RuntimeWarning: invalid value encountered in sqrt
  return (-Bs + (((Bs ** 2.) - (4. * As * Cs)) ** 0.5)) / (2. * As)
ERROR
test_explicit_output (numba.tests.test_array_exprs.TestArrayExpressions) ... ok
test_simple_expr (numba.tests.test_array_exprs.TestArrayExpressions) ... ERROR
test_trivial_expr (numba.tests.test_array_exprs.TestArrayExpressions) ... ERROR
test_ufunc_and_dufunc_calls (numba.tests.test_array_exprs.TestArrayExpressions) ... ERROR
test_bitwise_arrayexpr (numba.tests.test_array_exprs.TestRewriteIssues) ... ERROR
test_issue_1184 (numba.tests.test_array_exprs.TestRewriteIssues) ... ok
test_issue_1264 (numba.tests.test_array_exprs.TestRewriteIssues) ... ERROR
test_issue_1372 (numba.tests.test_array_exprs.TestRewriteIssues)
Test array expression with duplicated term ... ok
test_unary_arrayexpr (numba.tests.test_array_exprs.TestRewriteIssues) ... ERROR
test_division_by_zero (numba.tests.test_array_exprs.TestSemantics) ... /home/graham/pypy/numba/numba/tests/test_array_exprs.py:49: RuntimeWarning: divide by zero encountered in true_divide
  return As / Bs + Cs
/home/graham/pypy/numba/numba/tests/test_array_exprs.py:49: RuntimeWarning: invalid value encountered in true_divide
  return As / Bs + Cs
ERROR
test_datetime_values (numba.tests.test_numpy_support.TestArrayScalars) ... ok
test_number_values (numba.tests.test_numpy_support.TestArrayScalars) ... ok
test_timedelta_values (numba.tests.test_numpy_support.TestArrayScalars) ... ok
test_datetime_types (numba.tests.test_numpy_support.TestFromDtype) ... ok
test_number_types (numba.tests.test_numpy_support.TestFromDtype) ... ok
test_string_types (numba.tests.test_numpy_support.TestFromDtype) ... ok
test_struct_types (numba.tests.test_numpy_support.TestFromDtype) ... ok
test_timedelta_types (numba.tests.test_numpy_support.TestFromDtype) ... ok
test_ufunc_find_matching_loop (numba.tests.test_numpy_support.TestUFuncs) ... ok
test_exercise_code_path (numba.tests.test_annotations.TestAnnotation) ... skipped "please install the 'jinja2' package"
test_max3 (numba.tests.test_maxmin.TestMaxMin) ... ok
test_min3 (numba.tests.test_maxmin.TestMaxMin) ... ok
test_array_const_0d (numba.tests.test_array_constants.TestConstantArray) ... ok
test_array_const_1d_contig (numba.tests.test_array_constants.TestConstantArray) ... ok
test_array_const_1d_noncontig (numba.tests.test_array_constants.TestConstantArray) ... ok
test_array_const_2d (numba.tests.test_array_constants.TestConstantArray) ... skipped 'PYPY FIXME - mysterious death'
test_array_const_alignment (numba.tests.test_array_constants.TestConstantArray) ... ok
test_arrayscalar_const (numba.tests.test_array_constants.TestConstantArray) ... ok
test_issue_1850 (numba.tests.test_array_constants.TestConstantArray) ... ok
test_record_array_const_contig (numba.tests.test_array_constants.TestConstantArray) ... /home/graham/pypy/numba/numba/tests/test_array_constants.py:73: RuntimeWarning: PyImport_ImportModuleNoBlock() is not non-blocking
  np.testing.assert_array_equal(pyfunc(i), cfunc(i))
ok
test_record_array_const_noncontig (numba.tests.test_array_constants.TestConstantArray) ... ok
test_write_to_global_array (numba.tests.test_array_constants.TestConstantArray) ... ok
test_bar_call_foo (numba.tests.test_interproc.TestInterProc) ... ok
test_bar_call_foo_compiled_twice (numba.tests.test_interproc.TestInterProc) ... ok
test_callsite_compilation (numba.tests.test_interproc.TestInterProc) ... ok
test_abs (numba.tests.test_builtins.TestBuiltins) ... ok
test_abs_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_all (numba.tests.test_builtins.TestBuiltins) ... ok
test_all_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_any (numba.tests.test_builtins.TestBuiltins) ... ok
test_any_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_bool (numba.tests.test_builtins.TestBuiltins) ... ok
test_bool_nonnumber (numba.tests.test_builtins.TestBuiltins) ... ok
test_bool_nonnumber_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_bool_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_chr (numba.tests.test_builtins.TestBuiltins) ... ok
test_chr_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_cmp (numba.tests.test_builtins.TestBuiltins) ... ok
test_cmp_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_complex (numba.tests.test_builtins.TestBuiltins) ... ok
test_complex_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_divmod_floats (numba.tests.test_builtins.TestBuiltins) ... ok
test_divmod_floats_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_divmod_ints (numba.tests.test_builtins.TestBuiltins) ... ok
test_divmod_ints_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_enumerate (numba.tests.test_builtins.TestBuiltins) ... ok
test_enumerate_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_enumerate_start (numba.tests.test_builtins.TestBuiltins) ... ok
test_enumerate_start_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_filter (numba.tests.test_builtins.TestBuiltins) ... ok
test_filter_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_float (numba.tests.test_builtins.TestBuiltins) ... ok
test_float_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_format (numba.tests.test_builtins.TestBuiltins) ... ok
test_format_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_globals (numba.tests.test_builtins.TestBuiltins) ... ok
test_globals_jit (numba.tests.test_builtins.TestBuiltins) ... ok
test_globals_jit_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_globals_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_hex (numba.tests.test_builtins.TestBuiltins) ... ok
test_hex_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_int (numba.tests.test_builtins.TestBuiltins) ... ok
test_int_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_iter_next (numba.tests.test_builtins.TestBuiltins) ... ok
test_iter_next_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_locals (numba.tests.test_builtins.TestBuiltins) ... ok
test_locals_forceobj (numba.tests.test_builtins.TestBuiltins) ... ok
test_locals_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_long (numba.tests.test_builtins.TestBuiltins) ... ok
test_long_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_map (numba.tests.test_builtins.TestBuiltins) ... ok
test_map_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_max_1 (numba.tests.test_builtins.TestBuiltins) ... ok
test_max_1_invalid_types (numba.tests.test_builtins.TestBuiltins) ... ok
test_max_1_invalid_types_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_max_2 (numba.tests.test_builtins.TestBuiltins) ... ok
test_max_3 (numba.tests.test_builtins.TestBuiltins) ... ok
test_max_empty_tuple (numba.tests.test_builtins.TestBuiltins) ... ok
test_max_npm_1 (numba.tests.test_builtins.TestBuiltins) ... ok
test_max_npm_2 (numba.tests.test_builtins.TestBuiltins) ... ok
test_max_npm_3 (numba.tests.test_builtins.TestBuiltins) ... ok
test_max_unary_non_iterable (numba.tests.test_builtins.TestBuiltins) ... ok
test_max_unary_non_iterable_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_min_1 (numba.tests.test_builtins.TestBuiltins) ... ok
test_min_1_invalid_types (numba.tests.test_builtins.TestBuiltins) ... ok
test_min_1_invalid_types_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_min_2 (numba.tests.test_builtins.TestBuiltins) ... ok
test_min_3 (numba.tests.test_builtins.TestBuiltins) ... ok
test_min_empty_tuple (numba.tests.test_builtins.TestBuiltins) ... ok
test_min_npm_1 (numba.tests.test_builtins.TestBuiltins) ... ok
test_min_npm_2 (numba.tests.test_builtins.TestBuiltins) ... ok
test_min_npm_3 (numba.tests.test_builtins.TestBuiltins) ... ok
test_min_unary_non_iterable (numba.tests.test_builtins.TestBuiltins) ... ok
test_min_unary_non_iterable_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_oct (numba.tests.test_builtins.TestBuiltins) ... ok
test_oct_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_ord (numba.tests.test_builtins.TestBuiltins) ... ok
test_ord_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_pow_op_usecase (numba.tests.test_builtins.TestBuiltins) ... ok
test_pow_usecase (numba.tests.test_builtins.TestBuiltins) ... ok
test_reduce (numba.tests.test_builtins.TestBuiltins) ... ok
test_reduce_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_round1 (numba.tests.test_builtins.TestBuiltins) ... ok
test_round1_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_round2 (numba.tests.test_builtins.TestBuiltins) ... ok
test_round2_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_sum (numba.tests.test_builtins.TestBuiltins) ... ok
test_sum_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_type_unary (numba.tests.test_builtins.TestBuiltins) ... ok
test_unichr (numba.tests.test_builtins.TestBuiltins) ... ok
test_unichr_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_zip (numba.tests.test_builtins.TestBuiltins) ... ok
test_zip_0 (numba.tests.test_builtins.TestBuiltins) ... ok
test_zip_0_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_zip_1 (numba.tests.test_builtins.TestBuiltins) ... ok
test_zip_1_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_zip_3 (numba.tests.test_builtins.TestBuiltins) ... ok
test_zip_3_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_zip_npm (numba.tests.test_builtins.TestBuiltins) ... ok
test_extended_arg_load_const (numba.tests.test_extended_arg.TestExtendedArg) ... ok
test_arrays (numba.tests.test_typeof.TestFingerprint) ... ok
test_bool (numba.tests.test_typeof.TestFingerprint) ... ok
test_buffers (numba.tests.test_typeof.TestFingerprint) ... ERROR
test_complex (numba.tests.test_typeof.TestFingerprint) ... ok
test_complicated_type (numba.tests.test_typeof.TestFingerprint) ... ok
test_datetime (numba.tests.test_typeof.TestFingerprint) ... ok
test_dtype (numba.tests.test_typeof.TestFingerprint) ... ok
test_enums (numba.tests.test_typeof.TestFingerprint) ... ok
test_floats (numba.tests.test_typeof.TestFingerprint) ... ok
test_ints (numba.tests.test_typeof.TestFingerprint) ... ok
test_lists (numba.tests.test_typeof.TestFingerprint) ... ok
test_none (numba.tests.test_typeof.TestFingerprint) ... ok
test_omitted_args (numba.tests.test_typeof.TestFingerprint) ... ok
test_records (numba.tests.test_typeof.TestFingerprint) ... ok
test_sets (numba.tests.test_typeof.TestFingerprint) ... skipped 'PYPY FIXME - segfault'
test_tuples (numba.tests.test_typeof.TestFingerprint) ... ok
test_array_values (numba.tests.test_typeof.TestTypeof) ... ok
test_buffers (numba.tests.test_typeof.TestTypeof) ... ok
test_cffi (numba.tests.test_typeof.TestTypeof) ... ok
test_ctypes (numba.tests.test_typeof.TestTypeof) ... ok
test_custom (numba.tests.test_typeof.TestTypeof) ... ok
test_datetime_values (numba.tests.test_typeof.TestTypeof) ... ok
test_dtype (numba.tests.test_typeof.TestTypeof) ... ok
test_ellipsis (numba.tests.test_typeof.TestTypeof) ... ok
test_enum (numba.tests.test_typeof.TestTypeof) ... ok
test_enum_class (numba.tests.test_typeof.TestTypeof) ... ok
test_lists (numba.tests.test_typeof.TestTypeof) ... ok
test_namedtuple (numba.tests.test_typeof.TestTypeof) ... ok
test_none (numba.tests.test_typeof.TestTypeof) ... ok
test_number_values (numba.tests.test_typeof.TestTypeof) ... ok
test_omitted_args (numba.tests.test_typeof.TestTypeof) ... ok
test_sets (numba.tests.test_typeof.TestTypeof) ... skipped 'PYPY FIXME - segfault'
test_slices (numba.tests.test_typeof.TestTypeof) ... ok
test_str (numba.tests.test_typeof.TestTypeof) ... ok
test_structured_arrays (numba.tests.test_typeof.TestTypeof) ... ok
test_timedelta_values (numba.tests.test_typeof.TestTypeof) ... ok
test_tuples (numba.tests.test_typeof.TestTypeof) ... ok
test_autojit (numba.tests.test_deprecations.TestDeprecation) ... ok
test_call_closure (numba.tests.test_serialize.TestDispatcherPickling) ... ok
test_call_closure_calling_other_closure (numba.tests.test_serialize.TestDispatcherPickling) ... ok
test_call_closure_calling_other_function (numba.tests.test_serialize.TestDispatcherPickling) ... ok
test_call_closure_with_globals_nopython (numba.tests.test_serialize.TestDispatcherPickling) ... ok
test_call_closure_with_globals_objmode (numba.tests.test_serialize.TestDispatcherPickling) ... ok
test_call_dyn_func (numba.tests.test_serialize.TestDispatcherPickling) ... ok
test_call_dyn_func_objmode (numba.tests.test_serialize.TestDispatcherPickling) ... skipped 'PYPY FIXME - cpyext PySequence_Fast_GET_SIZE'
test_call_generated (numba.tests.test_serialize.TestDispatcherPickling) ... ok
test_call_nopython (numba.tests.test_serialize.TestDispatcherPickling) ... ok
test_call_nopython_fail (numba.tests.test_serialize.TestDispatcherPickling) ... ok
test_call_objmode_with_global (numba.tests.test_serialize.TestDispatcherPickling) ... ok
test_call_with_sig (numba.tests.test_serialize.TestDispatcherPickling) ... ok
test_call_without_sig (numba.tests.test_serialize.TestDispatcherPickling) ... ok
test_other_process (numba.tests.test_serialize.TestDispatcherPickling) ... ok
test_renamed_module (numba.tests.test_serialize.TestDispatcherPickling) ... skipped 'PYPY FIXME - cpyext PySequence_Fast_GET_SIZE'
test_reuse (numba.tests.test_serialize.TestDispatcherPickling) ... ok
test_acos (numba.tests.test_complex.TestCMath) ... ok
test_acos_npm (numba.tests.test_complex.TestCMath) ... ok
test_acosh (numba.tests.test_complex.TestCMath) ... ok
test_acosh_npm (numba.tests.test_complex.TestCMath) ... ok
test_asin (numba.tests.test_complex.TestCMath) ... ok
test_asin_npm (numba.tests.test_complex.TestCMath) ... ok
test_asinh (numba.tests.test_complex.TestCMath) ... ok
test_asinh_npm (numba.tests.test_complex.TestCMath) ... ok
test_atan (numba.tests.test_complex.TestCMath) ... ok
test_atan_npm (numba.tests.test_complex.TestCMath) ... ok
test_atanh (numba.tests.test_complex.TestCMath) ... ok
test_atanh_npm (numba.tests.test_complex.TestCMath) ... ok
test_cos (numba.tests.test_complex.TestCMath) ... ok
test_cos_npm (numba.tests.test_complex.TestCMath) ... ok
test_cosh (numba.tests.test_complex.TestCMath) ... ok
test_cosh_npm (numba.tests.test_complex.TestCMath) ... ok
test_exp (numba.tests.test_complex.TestCMath) ... ok
test_exp_npm (numba.tests.test_complex.TestCMath) ... ok
test_isfinite (numba.tests.test_complex.TestCMath) ... skipped 'needs Python 3.2+'
test_isfinite_npm (numba.tests.test_complex.TestCMath) ... skipped 'needs Python 3.2+'
test_isinf (numba.tests.test_complex.TestCMath) ... ok
test_isinf_npm (numba.tests.test_complex.TestCMath) ... ok
test_isnan (numba.tests.test_complex.TestCMath) ... ok
test_isnan_npm (numba.tests.test_complex.TestCMath) ... ok
test_log (numba.tests.test_complex.TestCMath) ... ok
test_log10 (numba.tests.test_complex.TestCMath) ... ok
test_log10_npm (numba.tests.test_complex.TestCMath) ... ok
test_log_base (numba.tests.test_complex.TestCMath) ... ok
test_log_base_npm (numba.tests.test_complex.TestCMath) ... ok
test_log_npm (numba.tests.test_complex.TestCMath) ... ok
test_phase (numba.tests.test_complex.TestCMath) ... ok
test_phase_npm (numba.tests.test_complex.TestCMath) ... ok
test_polar (numba.tests.test_complex.TestCMath) ... ok
test_polar_npm (numba.tests.test_complex.TestCMath) ... ok
test_rect (numba.tests.test_complex.TestCMath) ... ok
test_rect_npm (numba.tests.test_complex.TestCMath) ... ok
test_sin (numba.tests.test_complex.TestCMath) ... ok
test_sin_npm (numba.tests.test_complex.TestCMath) ... ok
test_sinh (numba.tests.test_complex.TestCMath) ... ok
test_sinh_npm (numba.tests.test_complex.TestCMath) ... ok
test_sqrt (numba.tests.test_complex.TestCMath) ... ok
test_sqrt_npm (numba.tests.test_complex.TestCMath) ... ok
test_tan (numba.tests.test_complex.TestCMath) ... ok
test_tan_npm (numba.tests.test_complex.TestCMath) ... ok
test_tanh (numba.tests.test_complex.TestCMath) ... ok
test_tanh_npm (numba.tests.test_complex.TestCMath) ... ok
test_conjugate (numba.tests.test_complex.TestComplex) ... ok
test_conjugate_npm (numba.tests.test_complex.TestComplex) ... ok
test_div (numba.tests.test_complex.TestComplex) ... ok
test_div_npm (numba.tests.test_complex.TestComplex) ... ok
test_imag (numba.tests.test_complex.TestComplex) ... ok
test_imag_npm (numba.tests.test_complex.TestComplex) ... ok
test_real (numba.tests.test_complex.TestComplex) ... ok
test_real_npm (numba.tests.test_complex.TestComplex) ... ok
test_inner_function (numba.tests.test_inlining.TestInlining) ... ok
test_multiple_inner_functions (numba.tests.test_inlining.TestInlining) ... ok
test_deprecated (numba.tests.test_warnings.TestBuiltins) ... ok
test_loop_lift_warn (numba.tests.test_warnings.TestBuiltins) ... ok
test_no_warning_with_forceobj (numba.tests.test_warnings.TestBuiltins) ... ok
test_return_type_warning (numba.tests.test_warnings.TestBuiltins) ... ok
test_return_type_warning_with_nrt (numba.tests.test_warnings.TestBuiltins) ... skipped 'PYPY FIXME - segfault'
test_type_infer_warning (numba.tests.test_warnings.TestBuiltins) ... ok
test_all_basic (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_any_basic (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_argmax_basic (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_argmax_npdatetime (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_argmin_basic (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_argmin_npdatetime (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_all_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_all_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_all_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_all_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_all_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_all_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_all_global_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_all_global_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_all_global_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_all_global_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_all_global_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_all_global_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_all_global_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_all_global_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_all_global_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_all_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_all_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_all_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_any_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_any_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_any_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_any_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_any_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_any_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_any_global_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_any_global_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_any_global_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_any_global_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_any_global_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_any_global_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_any_global_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_any_global_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_any_global_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_any_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_any_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_any_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmax_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmax_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmax_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmax_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmax_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmax_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmax_global_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmax_global_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmax_global_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmax_global_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmax_global_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmax_global_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmax_global_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmax_global_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmax_global_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmax_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmax_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmax_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmin_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmin_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmin_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmin_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmin_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmin_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmin_global_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmin_global_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmin_global_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmin_global_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmin_global_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmin_global_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmin_global_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmin_global_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmin_global_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmin_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmin_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_argmin_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_cumprod (numba.tests.test_array_reductions.TestArrayReductions) ... ERROR
test_array_cumprod_global (numba.tests.test_array_reductions.TestArrayReductions) ... ERROR
test_array_cumsum (numba.tests.test_array_reductions.TestArrayReductions) ... ERROR
test_array_cumsum_global (numba.tests.test_array_reductions.TestArrayReductions) ... ERROR
test_array_max_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_max_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_max_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_max_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_max_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_max_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_max_global_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_max_global_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_max_global_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_max_global_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_max_global_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_max_global_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_max_global_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_max_global_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_max_global_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_max_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_max_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_max_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_mean_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_mean_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_mean_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_mean_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_mean_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_mean_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_mean_global_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_mean_global_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_mean_global_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_mean_global_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_mean_global_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_mean_global_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_mean_global_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_mean_global_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_mean_global_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_mean_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_mean_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_mean_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_min_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_min_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_min_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_min_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_min_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_min_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_min_global_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_min_global_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_min_global_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_min_global_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_min_global_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_min_global_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_min_global_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_min_global_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_min_global_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_min_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_min_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_min_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmax_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmax_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmax_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmax_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmax_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmax_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmax_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmax_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmax_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmean_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmean_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmean_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmean_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmean_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmean_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmean_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmean_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmean_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmin_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmin_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmin_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmin_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmin_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmin_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmin_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmin_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanmin_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanstd_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanstd_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanstd_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanstd_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanstd_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanstd_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanstd_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanstd_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanstd_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nansum_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nansum_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nansum_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nansum_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nansum_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nansum_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nansum_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nansum_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nansum_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanvar_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanvar_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanvar_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanvar_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanvar_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanvar_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanvar_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanvar_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_nanvar_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_prod_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_prod_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_prod_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_prod_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_prod_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_prod_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_prod_float_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_prod_global (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_prod_global_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_prod_global_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_prod_global_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_prod_global_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_prod_global_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_prod_global_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_prod_global_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_prod_global_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_prod_global_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_prod_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_prod_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_prod_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_prod_int_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_std_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_std_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_std_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_std_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_std_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_std_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_std_global_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_std_global_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_std_global_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_std_global_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_std_global_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_std_global_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_std_global_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_std_global_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_std_global_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_std_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_std_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_std_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_sum_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_sum_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_sum_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_sum_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_sum_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_sum_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_sum_global (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_sum_global_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_sum_global_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_sum_global_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_sum_global_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_sum_global_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_sum_global_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_sum_global_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_sum_global_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_sum_global_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_sum_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_sum_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_sum_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_var_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_var_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_var_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_var_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_var_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_var_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_var_global_bool_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_var_global_bool_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_var_global_bool_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_var_global_float32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_var_global_float32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_var_global_float32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_var_global_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_var_global_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_var_global_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_var_int32_1d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_var_int32_2d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_array_var_int32_3d (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_cumprod_magnitude (numba.tests.test_array_reductions.TestArrayReductions) ... ERROR
test_cumsum_magnitude (numba.tests.test_array_reductions.TestArrayReductions) ... ERROR
test_cumsum_npdatetime (numba.tests.test_array_reductions.TestArrayReductions) ... ERROR
test_max_basic (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_max_npdatetime (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_mean_basic (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_mean_magnitude (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_mean_npdatetime (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_median_basic (numba.tests.test_array_reductions.TestArrayReductions) ... ERROR
test_median_npdatetime (numba.tests.test_array_reductions.TestArrayReductions) ... ERROR
test_min_basic (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_min_npdatetime (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_nanmax_basic (numba.tests.test_array_reductions.TestArrayReductions) ... /home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/lib/nanfunctions.py:326: RuntimeWarning: All-NaN slice encountered
  warnings.warn("All-NaN slice encountered", RuntimeWarning)
ok
test_nanmean_basic (numba.tests.test_array_reductions.TestArrayReductions) ... /home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/lib/nanfunctions.py:675: RuntimeWarning: Mean of empty slice
  warnings.warn("Mean of empty slice", RuntimeWarning)
ok
test_nanmedian_basic (numba.tests.test_array_reductions.TestArrayReductions) ... ERROR
test_nanmin_basic (numba.tests.test_array_reductions.TestArrayReductions) ... /home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/lib/nanfunctions.py:227: RuntimeWarning: All-NaN axis encountered
  warnings.warn("All-NaN axis encountered", RuntimeWarning)
ok
test_nanstd_basic (numba.tests.test_array_reductions.TestArrayReductions) ... /home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/lib/nanfunctions.py:1147: RuntimeWarning: Degrees of freedom <= 0 for slice.
  warnings.warn("Degrees of freedom <= 0 for slice.", RuntimeWarning)
ok
test_nansum_basic (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_nanvar_basic (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_prod_magnitude (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_std_basic (numba.tests.test_array_reductions.TestArrayReductions) ... /home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/_methods.py:101: RuntimeWarning: invalid value encountered in subtract
  x = asanyarray(arr - arrmean)
ok
test_std_magnitude (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_sum_basic (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_sum_magnitude (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_sum_npdatetime (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_var_basic (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_var_magnitude (numba.tests.test_array_reductions.TestArrayReductions) ... ok
test_dtype (numba.tests.test_array_attr.TestArrayAttr) ... ok
test_flags_c_contiguous (numba.tests.test_array_attr.TestArrayAttr) ... ok
test_flags_contiguous (numba.tests.test_array_attr.TestArrayAttr) ... ok
test_flags_f_contiguous (numba.tests.test_array_attr.TestArrayAttr) ... ok
test_itemsize (numba.tests.test_array_attr.TestArrayAttr) ... ok
test_ndim (numba.tests.test_array_attr.TestArrayAttr) ... ok
test_shape (numba.tests.test_array_attr.TestArrayAttr) ... ok
test_size (numba.tests.test_array_attr.TestArrayAttr) ... ok
test_strides (numba.tests.test_array_attr.TestArrayAttr) ... ok
test_use_dtype (numba.tests.test_array_attr.TestArrayAttr) ... ERROR
test_array_ctypes_data (numba.tests.test_array_attr.TestArrayCTypes) ... ok
test_itemsize (numba.tests.test_array_attr.TestNestedArrayAttr) ... ERROR
test_ndim (numba.tests.test_array_attr.TestNestedArrayAttr) ... ERROR
test_shape (numba.tests.test_array_attr.TestNestedArrayAttr) ... ERROR
test_size (numba.tests.test_array_attr.TestNestedArrayAttr) ... ERROR
test_strides (numba.tests.test_array_attr.TestNestedArrayAttr) ... ERROR
test_size_after_slicing (numba.tests.test_array_attr.TestSlicedArrayAttr) ... ok
test_seed_types (numba.tests.test_locals.TestLocals) ... ok
test_bit_length (numba.tests.test_intwidth.IntWidthTest) ... ok
test_constant_int64 (numba.tests.test_intwidth.IntWidthTest) ... ok
test_constant_int64_npm (numba.tests.test_intwidth.IntWidthTest) ... ok
test_constant_uint64 (numba.tests.test_intwidth.IntWidthTest) ... ok
test_constant_uint64_function_call (numba.tests.test_intwidth.IntWidthTest) ... ok
test_constant_uint64_function_call_npm (numba.tests.test_intwidth.IntWidthTest) ... ok
test_constant_uint64_npm (numba.tests.test_intwidth.IntWidthTest) ... ok
test_global_uint64 (numba.tests.test_intwidth.IntWidthTest) ... ok
test_global_uint64_npm (numba.tests.test_intwidth.IntWidthTest) ... ok
test_laziness (numba.tests.test_import.TestNumbaImport) ... ok
test_nvvm_llvm_to_ptx (numba.cuda.tests.nocuda.test_nvvm.TestNvvmWithoutCuda) ... skipped 'No libNVVM'

======================================================================
ERROR: test_npm_call_implicit_output (numba.tests.npyufunc.test_dufunc.TestDUFunc)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 9L != 6L

======================================================================
ERROR: test_gufunc_raise_objmode (numba.tests.npyufunc.test_errors.TestExceptions)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/npyufunc/test_errors.py", line 81, in test_gufunc_raise_objmode
    self.check_gufunc_raise(forceobj=True)
  File "/home/graham/pypy/numba/numba/tests/npyufunc/test_errors.py", line 73, in check_gufunc_raise
    f(arr, 2, out)
SystemError: Bad internal call!

======================================================================
ERROR: test_ufunc_raise_objmode (numba.tests.npyufunc.test_errors.TestExceptions)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/npyufunc/test_errors.py", line 65, in test_ufunc_raise_objmode
    self.check_ufunc_raise(forceobj=True)
  File "/home/graham/pypy/numba/numba/tests/npyufunc/test_errors.py", line 56, in check_ufunc_raise
    f(arr, out)
SystemError: Bad internal call!

======================================================================
ERROR: test_gil_reacquire_deadlock (numba.tests.npyufunc.test_parallel_ufunc_issues.TestParUfuncIssues)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/pypy-5.4.1-linux/lib_pypy/_functools.py", line 42, in __call__
    return self._func(*(self._args + fargs), **fkeywords)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/functools.py", line 33, in update_wrapper
    setattr(wrapper, attr, getattr(wrapped, attr))
AttributeError: 'TestParUfuncIssues' object has no attribute '__name__'

======================================================================
ERROR: test_gufunc_struct_forceobj (numba.tests.npyufunc.test_ufuncbuilding.TestGUfuncBuilding)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/npyufunc/test_ufuncbuilding.py", line 201, in test_gufunc_struct_forceobj
    b = ufunc(a, a)
SystemError: Bad internal call!

======================================================================
ERROR: test_gufunc_struct_forceobj (numba.tests.npyufunc.test_ufuncbuilding.TestGUfuncBuildingJitDisabled)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/npyufunc/test_ufuncbuilding.py", line 201, in test_gufunc_struct_forceobj
    b = ufunc(a, a)
SystemError: Bad internal call!

======================================================================
ERROR: test_guvectorize_error_in_objectmode (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecor)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/npyufunc/test_ufuncbuilding.py", line 331, in test_guvectorize_error_in_objectmode
    ufunc(a, a)
SystemError: Bad internal call!

======================================================================
ERROR: test_guvectorize_objectmode (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecor)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/npyufunc/test_ufuncbuilding.py", line 313, in test_guvectorize_objectmode
    b = ufunc(a, a)
SystemError: Bad internal call!

======================================================================
ERROR: test_guvectorize_scalar_objectmode (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecor)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/npyufunc/test_ufuncbuilding.py", line 323, in test_guvectorize_scalar_objectmode
    b = ufunc(a, 3)
SystemError: Bad internal call!

======================================================================
ERROR: test_guvectorize_error_in_objectmode (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecorJitDisabled)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/npyufunc/test_ufuncbuilding.py", line 331, in test_guvectorize_error_in_objectmode
    ufunc(a, a)
SystemError: Bad internal call!

======================================================================
ERROR: test_guvectorize_objectmode (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecorJitDisabled)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/npyufunc/test_ufuncbuilding.py", line 313, in test_guvectorize_objectmode
    b = ufunc(a, a)
SystemError: Bad internal call!

======================================================================
ERROR: test_guvectorize_scalar_objectmode (numba.tests.npyufunc.test_ufuncbuilding.TestVectorizeDecorJitDisabled)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/npyufunc/test_ufuncbuilding.py", line 323, in test_guvectorize_scalar_objectmode
    b = ufunc(a, 3)
SystemError: Bad internal call!

======================================================================
ERROR: test_getitem_array (numba.tests.test_fancy_indexing.TestFancyIndexing)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 9L != 6L

======================================================================
ERROR: test_getitem_tuple (numba.tests.test_fancy_indexing.TestFancyIndexing)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1548L != 1348L

======================================================================
ERROR: test_getitem_tuple_and_ellipsis (numba.tests.test_fancy_indexing.TestFancyIndexing)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 288L != 264L

======================================================================
ERROR: test_assert_statement_nopython (numba.tests.test_exceptions.TestRaising)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_exceptions.py", line 199, in test_assert_statement_nopython
    self.check_assert_statement(flags=no_pyobj_flags)
  File "/home/graham/pypy/numba/numba/tests/test_exceptions.py", line 188, in check_assert_statement
    cres = compile_isolated(pyfunc, (types.int32,), flags=flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 179, in compile_isolated
    flags, locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
NotImplementedError: offset=0 opcode=0xcc opname=JUMP_IF_NOT_DEBUG

======================================================================
ERROR: test_assert_statement_objmode (numba.tests.test_exceptions.TestRaising)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_exceptions.py", line 196, in test_assert_statement_objmode
    self.check_assert_statement(flags=force_pyobj_flags)
  File "/home/graham/pypy/numba/numba/tests/test_exceptions.py", line 188, in check_assert_statement
    cres = compile_isolated(pyfunc, (types.int32,), flags=flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 179, in compile_isolated
    flags, locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
NotImplementedError: offset=0 opcode=0xcc opname=JUMP_IF_NOT_DEBUG

======================================================================
ERROR: test_raise_invalid_class_objmode (numba.tests.test_exceptions.TestRaising)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_exceptions.py", line 178, in test_raise_invalid_class_objmode
    self.check_raise_invalid_class(1, flags=force_pyobj_flags)
TypeError: exceptions must be old-style classes or derived from BaseException, not type

======================================================================
ERROR: test_reraise_nopython (numba.tests.test_exceptions.TestRaising)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_exceptions.py", line 165, in test_reraise_nopython
    self.check_reraise(flags=no_pyobj_flags)
  File "/home/graham/pypy/numba/numba/tests/test_exceptions.py", line 158, in check_reraise
    cfunc()
SystemError: Function returned a NULL result without setting an exception

======================================================================
ERROR: test_reraise_objmode (numba.tests.test_exceptions.TestRaising)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_exceptions.py", line 161, in test_reraise_objmode
    self.check_reraise(flags=force_pyobj_flags)
  File "/home/graham/pypy/numba/numba/tests/test_exceptions.py", line 158, in check_reraise
    cfunc()
SystemError: Function returned a NULL result without setting an exception

======================================================================
ERROR: test_1d (numba.tests.test_numberctor.TestArrayNumberCtor)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_numberctor.py", line 231, in test_1d
    self.check_type_constructor(np_type, values)
  File "/home/graham/pypy/numba/numba/tests/test_numberctor.py", line 219, in check_type_constructor
    got = cfunc(val)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
RuntimeError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy

======================================================================
ERROR: test_2d (numba.tests.test_numberctor.TestArrayNumberCtor)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_numberctor.py", line 249, in test_2d
    self.check_type_constructor(np_type, values)
  File "/home/graham/pypy/numba/numba/tests/test_numberctor.py", line 219, in check_type_constructor
    got = cfunc(val)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
RuntimeError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy

======================================================================
ERROR: test_bincount1 (numba.tests.test_np_functions.TestNPFunctions)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_np_functions.py", line 266, in test_bincount1
    got = cfunc(seq)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 308, in _compile_for_args
    raise e
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x0000000008e9f440>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
InternalError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy
[1] During: resolving callee type: type(CPUDispatcher(<function validate_inputs at 0x00000000093927a0>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (891)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 891

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x0000000008e9f440>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
InternalError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy
[1] During: resolving callee type: type(CPUDispatcher(<function validate_inputs at 0x00000000093927a0>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (891)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 891
[1] During: resolving callee type: Function(<builtin_function_or_method object at 0x00007f760c64fe20>)
[2] During: typing of call at /home/graham/pypy/numba/numba/tests/test_np_functions.py (36)

Failed at nopython (nopython frontend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x0000000008e9f440>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
InternalError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy
[1] During: resolving callee type: type(CPUDispatcher(<function validate_inputs at 0x00000000093927a0>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (891)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 891

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x0000000008e9f440>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
InternalError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy
[1] During: resolving callee type: type(CPUDispatcher(<function validate_inputs at 0x00000000093927a0>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (891)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 891
[1] During: resolving callee type: Function(<builtin_function_or_method object at 0x00007f760c64fe20>)
[2] During: typing of call at /home/graham/pypy/numba/numba/tests/test_np_functions.py (36)

======================================================================
ERROR: test_bincount2 (numba.tests.test_np_functions.TestNPFunctions)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_np_functions.py", line 283, in test_bincount2
    got = cfunc(seq, weights)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 308, in _compile_for_args
    raise e
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x00000000088a17f8>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
InternalError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy
[1] During: resolving callee type: type(CPUDispatcher(<function validate_inputs at 0x000000000632f3d0>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (891)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 891

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x00000000088a17f8>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
InternalError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy
[1] During: resolving callee type: type(CPUDispatcher(<function validate_inputs at 0x000000000632f3d0>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (891)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 891
[1] During: resolving callee type: Function(<builtin_function_or_method object at 0x00007f760c64fe20>)
[2] During: typing of call at /home/graham/pypy/numba/numba/tests/test_np_functions.py (39)

Failed at nopython (nopython frontend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x00000000088a17f8>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
InternalError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy
[1] During: resolving callee type: type(CPUDispatcher(<function validate_inputs at 0x000000000632f3d0>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (891)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 891

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x00000000088a17f8>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
InternalError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy
[1] During: resolving callee type: type(CPUDispatcher(<function validate_inputs at 0x000000000632f3d0>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (891)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 891
[1] During: resolving callee type: Function(<builtin_function_or_method object at 0x00007f760c64fe20>)
[2] During: typing of call at /home/graham/pypy/numba/numba/tests/test_np_functions.py (39)

======================================================================
ERROR: test_digitize (numba.tests.test_np_functions.TestNPFunctions)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_np_functions.py", line 377, in test_digitize
    check(list(values), bins1)
  File "/home/graham/pypy/numba/numba/tests/test_np_functions.py", line 341, in check
    got = cfunc(*args)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
RuntimeError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 489, in unbox_tuple
    native = c.unbox(eltype, elem)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 68, in unbox
    return self.pyapi.to_native_value(typ, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy

======================================================================
ERROR: test_searchsorted (numba.tests.test_np_functions.TestNPFunctions)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_np_functions.py", line 319, in test_searchsorted
    check(a, list(values))
  File "/home/graham/pypy/numba/numba/tests/test_np_functions.py", line 304, in check
    got = cfunc(a, v)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
RuntimeError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy

======================================================================
ERROR: test_argsort_float (numba.tests.test_sort.TestNumpySort)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 814, in test_argsort_float
    check(argsort_usecase)
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 812, in check
    self.check_argsort(pyfunc, cfunc, orig)
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 757, in check_argsort
    got = cfunc(val)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 308, in _compile_for_args
    raise e
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 845, in native_lowering_stage
    lower.lower()
  File "/home/graham/pypy/numba/numba/lowering.py", line 125, in lower
    self.lower_normal_function(self.fndesc)
  File "/home/graham/pypy/numba/numba/lowering.py", line 160, in lower_normal_function
    entry_block_tail = self.lower_function_body()
  File "/home/graham/pypy/numba/numba/lowering.py", line 185, in lower_function_body
    self.lower_block(block)
  File "/home/graham/pypy/numba/numba/lowering.py", line 200, in lower_block
    self.lower_inst(inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 237, in lower_inst
    val = self.lower_assign(ty, inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 382, in lower_assign
    return self.lower_expr(ty, value)
  File "/home/graham/pypy/numba/numba/lowering.py", line 695, in lower_expr
    res = self.lower_call(resty, expr)
  File "/home/graham/pypy/numba/numba/lowering.py", line 661, in lower_call
    res = impl(self.builder, argvals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 961, in __call__
    return self._imp(self._context, builder, self._sig, args)
  File "/home/graham/pypy/numba/numba/targets/arrayobj.py", line 3934, in array_argsort
    return context.compile_internal(builder, array_argsort_impl, sig, args)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 779, in compile_internal
    ty = self.compile_subroutine(builder, impl, sig, locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 769, in compile_subroutine
    locals=locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 749, in compile_subroutine_no_cache
    locals=locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 753, in compile_internal
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x0000000005897948>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x000000000b64da60>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3932)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3932

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x0000000005897948>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x000000000b64da60>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3932)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3932
[1] During: lowering "$0.3 = call $0.2()" at /home/graham/pypy/numba/numba/tests/test_sort.py (45)

Failed at nopython (nopython mode backend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x0000000005897948>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x000000000b64da60>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3932)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3932

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x0000000005897948>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x000000000b64da60>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3932)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3932
[1] During: lowering "$0.3 = call $0.2()" at /home/graham/pypy/numba/numba/tests/test_sort.py (45)

======================================================================
ERROR: test_argsort_int (numba.tests.test_sort.TestNumpySort)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 804, in test_argsort_int
    check(argsort_usecase)
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 802, in check
    self.check_argsort(pyfunc, cfunc, orig)
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 757, in check_argsort
    got = cfunc(val)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 308, in _compile_for_args
    raise e
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 845, in native_lowering_stage
    lower.lower()
  File "/home/graham/pypy/numba/numba/lowering.py", line 125, in lower
    self.lower_normal_function(self.fndesc)
  File "/home/graham/pypy/numba/numba/lowering.py", line 160, in lower_normal_function
    entry_block_tail = self.lower_function_body()
  File "/home/graham/pypy/numba/numba/lowering.py", line 185, in lower_function_body
    self.lower_block(block)
  File "/home/graham/pypy/numba/numba/lowering.py", line 200, in lower_block
    self.lower_inst(inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 237, in lower_inst
    val = self.lower_assign(ty, inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 382, in lower_assign
    return self.lower_expr(ty, value)
  File "/home/graham/pypy/numba/numba/lowering.py", line 695, in lower_expr
    res = self.lower_call(resty, expr)
  File "/home/graham/pypy/numba/numba/lowering.py", line 661, in lower_call
    res = impl(self.builder, argvals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 961, in __call__
    return self._imp(self._context, builder, self._sig, args)
  File "/home/graham/pypy/numba/numba/targets/arrayobj.py", line 3934, in array_argsort
    return context.compile_internal(builder, array_argsort_impl, sig, args)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 779, in compile_internal
    ty = self.compile_subroutine(builder, impl, sig, locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 769, in compile_subroutine
    locals=locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 749, in compile_subroutine_no_cache
    locals=locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 753, in compile_internal
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x000000000bfd1d38>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x000000000d48dd30>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3932)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3932

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x000000000bfd1d38>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x000000000d48dd30>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3932)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3932
[1] During: lowering "$0.3 = call $0.2()" at /home/graham/pypy/numba/numba/tests/test_sort.py (45)

Failed at nopython (nopython mode backend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x000000000bfd1d38>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x000000000d48dd30>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3932)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3932

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x000000000bfd1d38>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x000000000d48dd30>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3932)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3932
[1] During: lowering "$0.3 = call $0.2()" at /home/graham/pypy/numba/numba/tests/test_sort.py (45)

======================================================================
ERROR: test_array_sort_float (numba.tests.test_sort.TestNumpySort)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 780, in test_array_sort_float
    self.check_sort_inplace(pyfunc, cfunc, orig)
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 743, in check_sort_inplace
    cfunc(got)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 308, in _compile_for_args
    raise e
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 845, in native_lowering_stage
    lower.lower()
  File "/home/graham/pypy/numba/numba/lowering.py", line 125, in lower
    self.lower_normal_function(self.fndesc)
  File "/home/graham/pypy/numba/numba/lowering.py", line 160, in lower_normal_function
    entry_block_tail = self.lower_function_body()
  File "/home/graham/pypy/numba/numba/lowering.py", line 185, in lower_function_body
    self.lower_block(block)
  File "/home/graham/pypy/numba/numba/lowering.py", line 200, in lower_block
    self.lower_inst(inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 237, in lower_inst
    val = self.lower_assign(ty, inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 382, in lower_assign
    return self.lower_expr(ty, value)
  File "/home/graham/pypy/numba/numba/lowering.py", line 695, in lower_expr
    res = self.lower_call(resty, expr)
  File "/home/graham/pypy/numba/numba/lowering.py", line 661, in lower_call
    res = impl(self.builder, argvals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 961, in __call__
    return self._imp(self._context, builder, self._sig, args)
  File "/home/graham/pypy/numba/numba/targets/arrayobj.py", line 3912, in array_sort
    return context.compile_internal(builder, array_sort_impl, sig, args)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 779, in compile_internal
    ty = self.compile_subroutine(builder, impl, sig, locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 769, in compile_subroutine
    locals=locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 749, in compile_subroutine_no_cache
    locals=locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 753, in compile_internal
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x0000000006c90250>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x00000000094f4cc8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3910)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3910

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x0000000006c90250>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x00000000094f4cc8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3910)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3910
[1] During: lowering "$0.3 = call $0.2()" at /home/graham/pypy/numba/numba/tests/test_sort.py (42)

Failed at nopython (nopython mode backend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x0000000006c90250>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x00000000094f4cc8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3910)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3910

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x0000000006c90250>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x00000000094f4cc8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3910)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3910
[1] During: lowering "$0.3 = call $0.2()" at /home/graham/pypy/numba/numba/tests/test_sort.py (42)

======================================================================
ERROR: test_array_sort_int (numba.tests.test_sort.TestNumpySort)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 772, in test_array_sort_int
    self.check_sort_inplace(pyfunc, cfunc, orig)
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 743, in check_sort_inplace
    cfunc(got)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 308, in _compile_for_args
    raise e
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 845, in native_lowering_stage
    lower.lower()
  File "/home/graham/pypy/numba/numba/lowering.py", line 125, in lower
    self.lower_normal_function(self.fndesc)
  File "/home/graham/pypy/numba/numba/lowering.py", line 160, in lower_normal_function
    entry_block_tail = self.lower_function_body()
  File "/home/graham/pypy/numba/numba/lowering.py", line 185, in lower_function_body
    self.lower_block(block)
  File "/home/graham/pypy/numba/numba/lowering.py", line 200, in lower_block
    self.lower_inst(inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 237, in lower_inst
    val = self.lower_assign(ty, inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 382, in lower_assign
    return self.lower_expr(ty, value)
  File "/home/graham/pypy/numba/numba/lowering.py", line 695, in lower_expr
    res = self.lower_call(resty, expr)
  File "/home/graham/pypy/numba/numba/lowering.py", line 661, in lower_call
    res = impl(self.builder, argvals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 961, in __call__
    return self._imp(self._context, builder, self._sig, args)
  File "/home/graham/pypy/numba/numba/targets/arrayobj.py", line 3912, in array_sort
    return context.compile_internal(builder, array_sort_impl, sig, args)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 779, in compile_internal
    ty = self.compile_subroutine(builder, impl, sig, locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 769, in compile_subroutine
    locals=locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 749, in compile_subroutine_no_cache
    locals=locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 753, in compile_internal
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x00000000071c24b8>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000009523268>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3910)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3910

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x00000000071c24b8>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000009523268>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3910)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3910
[1] During: lowering "$0.3 = call $0.2()" at /home/graham/pypy/numba/numba/tests/test_sort.py (42)

Failed at nopython (nopython mode backend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x00000000071c24b8>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000009523268>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3910)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3910

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x00000000071c24b8>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000009523268>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3910)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3910
[1] During: lowering "$0.3 = call $0.2()" at /home/graham/pypy/numba/numba/tests/test_sort.py (42)

======================================================================
ERROR: test_np_sort_float (numba.tests.test_sort.TestNumpySort)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 796, in test_np_sort_float
    self.check_sort_copy(pyfunc, cfunc, orig)
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 749, in check_sort_copy
    got = cfunc(val)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 308, in _compile_for_args
    raise e
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 845, in native_lowering_stage
    lower.lower()
  File "/home/graham/pypy/numba/numba/lowering.py", line 125, in lower
    self.lower_normal_function(self.fndesc)
  File "/home/graham/pypy/numba/numba/lowering.py", line 160, in lower_normal_function
    entry_block_tail = self.lower_function_body()
  File "/home/graham/pypy/numba/numba/lowering.py", line 185, in lower_function_body
    self.lower_block(block)
  File "/home/graham/pypy/numba/numba/lowering.py", line 200, in lower_block
    self.lower_inst(inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 237, in lower_inst
    val = self.lower_assign(ty, inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 382, in lower_assign
    return self.lower_expr(ty, value)
  File "/home/graham/pypy/numba/numba/lowering.py", line 695, in lower_expr
    res = self.lower_call(resty, expr)
  File "/home/graham/pypy/numba/numba/lowering.py", line 661, in lower_call
    res = impl(self.builder, argvals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 961, in __call__
    return self._imp(self._context, builder, self._sig, args)
  File "/home/graham/pypy/numba/numba/targets/arrayobj.py", line 3922, in np_sort
    return context.compile_internal(builder, np_sort_impl, sig, args)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 779, in compile_internal
    ty = self.compile_subroutine(builder, impl, sig, locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 769, in compile_subroutine
    locals=locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 749, in compile_subroutine_no_cache
    locals=locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 753, in compile_internal
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 845, in native_lowering_stage
    lower.lower()
  File "/home/graham/pypy/numba/numba/lowering.py", line 125, in lower
    self.lower_normal_function(self.fndesc)
  File "/home/graham/pypy/numba/numba/lowering.py", line 160, in lower_normal_function
    entry_block_tail = self.lower_function_body()
  File "/home/graham/pypy/numba/numba/lowering.py", line 185, in lower_function_body
    self.lower_block(block)
  File "/home/graham/pypy/numba/numba/lowering.py", line 200, in lower_block
    self.lower_inst(inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 237, in lower_inst
    val = self.lower_assign(ty, inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 382, in lower_assign
    return self.lower_expr(ty, value)
  File "/home/graham/pypy/numba/numba/lowering.py", line 695, in lower_expr
    res = self.lower_call(resty, expr)
  File "/home/graham/pypy/numba/numba/lowering.py", line 661, in lower_call
    res = impl(self.builder, argvals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 961, in __call__
    return self._imp(self._context, builder, self._sig, args)
  File "/home/graham/pypy/numba/numba/targets/arrayobj.py", line 3912, in array_sort
    return context.compile_internal(builder, array_sort_impl, sig, args)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 779, in compile_internal
    ty = self.compile_subroutine(builder, impl, sig, locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 769, in compile_subroutine
    locals=locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 749, in compile_subroutine_no_cache
    locals=locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 753, in compile_internal
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x00000000082bc288>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x00000000094f4cc8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3910)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3910

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x00000000082bc288>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x00000000094f4cc8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3910)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3910
[1] During: lowering "$0.6 = call $0.5()" at /home/graham/pypy/numba/numba/targets/arrayobj.py (3919)

Failed at nopython (nopython mode backend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x00000000082bc288>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x00000000094f4cc8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3910)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3910

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x00000000082bc288>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x00000000094f4cc8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3910)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3910
[1] During: lowering "$0.6 = call $0.5()" at /home/graham/pypy/numba/numba/targets/arrayobj.py (3919)
[2] During: lowering "$0.4 = call $0.2(val)" at /home/graham/pypy/numba/numba/tests/test_sort.py (54)

Failed at nopython (nopython mode backend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 845, in native_lowering_stage
    lower.lower()
  File "/home/graham/pypy/numba/numba/lowering.py", line 125, in lower
    self.lower_normal_function(self.fndesc)
  File "/home/graham/pypy/numba/numba/lowering.py", line 160, in lower_normal_function
    entry_block_tail = self.lower_function_body()
  File "/home/graham/pypy/numba/numba/lowering.py", line 185, in lower_function_body
    self.lower_block(block)
  File "/home/graham/pypy/numba/numba/lowering.py", line 200, in lower_block
    self.lower_inst(inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 237, in lower_inst
    val = self.lower_assign(ty, inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 382, in lower_assign
    return self.lower_expr(ty, value)
  File "/home/graham/pypy/numba/numba/lowering.py", line 695, in lower_expr
    res = self.lower_call(resty, expr)
  File "/home/graham/pypy/numba/numba/lowering.py", line 661, in lower_call
    res = impl(self.builder, argvals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 961, in __call__
    return self._imp(self._context, builder, self._sig, args)
  File "/home/graham/pypy/numba/numba/targets/arrayobj.py", line 3912, in array_sort
    return context.compile_internal(builder, array_sort_impl, sig, args)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 779, in compile_internal
    ty = self.compile_subroutine(builder, impl, sig, locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 769, in compile_subroutine
    locals=locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 749, in compile_subroutine_no_cache
    locals=locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 753, in compile_internal
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x00000000082bc288>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x00000000094f4cc8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3910)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3910

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x00000000082bc288>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x00000000094f4cc8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3910)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3910
[1] During: lowering "$0.6 = call $0.5()" at /home/graham/pypy/numba/numba/targets/arrayobj.py (3919)

Failed at nopython (nopython mode backend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x00000000082bc288>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x00000000094f4cc8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3910)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3910

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x00000000082bc288>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x00000000094f4cc8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3910)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3910
[1] During: lowering "$0.6 = call $0.5()" at /home/graham/pypy/numba/numba/targets/arrayobj.py (3919)
[2] During: lowering "$0.4 = call $0.2(val)" at /home/graham/pypy/numba/numba/tests/test_sort.py (54)

======================================================================
ERROR: test_np_sort_int (numba.tests.test_sort.TestNumpySort)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 787, in test_np_sort_int
    self.check_sort_copy(pyfunc, cfunc, orig)
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 749, in check_sort_copy
    got = cfunc(val)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 308, in _compile_for_args
    raise e
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 845, in native_lowering_stage
    lower.lower()
  File "/home/graham/pypy/numba/numba/lowering.py", line 125, in lower
    self.lower_normal_function(self.fndesc)
  File "/home/graham/pypy/numba/numba/lowering.py", line 160, in lower_normal_function
    entry_block_tail = self.lower_function_body()
  File "/home/graham/pypy/numba/numba/lowering.py", line 185, in lower_function_body
    self.lower_block(block)
  File "/home/graham/pypy/numba/numba/lowering.py", line 200, in lower_block
    self.lower_inst(inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 237, in lower_inst
    val = self.lower_assign(ty, inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 382, in lower_assign
    return self.lower_expr(ty, value)
  File "/home/graham/pypy/numba/numba/lowering.py", line 695, in lower_expr
    res = self.lower_call(resty, expr)
  File "/home/graham/pypy/numba/numba/lowering.py", line 661, in lower_call
    res = impl(self.builder, argvals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 961, in __call__
    return self._imp(self._context, builder, self._sig, args)
  File "/home/graham/pypy/numba/numba/targets/arrayobj.py", line 3922, in np_sort
    return context.compile_internal(builder, np_sort_impl, sig, args)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 779, in compile_internal
    ty = self.compile_subroutine(builder, impl, sig, locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 769, in compile_subroutine
    locals=locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 749, in compile_subroutine_no_cache
    locals=locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 753, in compile_internal
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 845, in native_lowering_stage
    lower.lower()
  File "/home/graham/pypy/numba/numba/lowering.py", line 125, in lower
    self.lower_normal_function(self.fndesc)
  File "/home/graham/pypy/numba/numba/lowering.py", line 160, in lower_normal_function
    entry_block_tail = self.lower_function_body()
  File "/home/graham/pypy/numba/numba/lowering.py", line 185, in lower_function_body
    self.lower_block(block)
  File "/home/graham/pypy/numba/numba/lowering.py", line 200, in lower_block
    self.lower_inst(inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 237, in lower_inst
    val = self.lower_assign(ty, inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 382, in lower_assign
    return self.lower_expr(ty, value)
  File "/home/graham/pypy/numba/numba/lowering.py", line 695, in lower_expr
    res = self.lower_call(resty, expr)
  File "/home/graham/pypy/numba/numba/lowering.py", line 661, in lower_call
    res = impl(self.builder, argvals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 961, in __call__
    return self._imp(self._context, builder, self._sig, args)
  File "/home/graham/pypy/numba/numba/targets/arrayobj.py", line 3912, in array_sort
    return context.compile_internal(builder, array_sort_impl, sig, args)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 779, in compile_internal
    ty = self.compile_subroutine(builder, impl, sig, locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 769, in compile_subroutine
    locals=locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 749, in compile_subroutine_no_cache
    locals=locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 753, in compile_internal
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x000000000ce84f00>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000009523268>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3910)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3910

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x000000000ce84f00>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000009523268>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3910)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3910
[1] During: lowering "$0.6 = call $0.5()" at /home/graham/pypy/numba/numba/targets/arrayobj.py (3919)

Failed at nopython (nopython mode backend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x000000000ce84f00>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000009523268>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3910)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3910

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x000000000ce84f00>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000009523268>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3910)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3910
[1] During: lowering "$0.6 = call $0.5()" at /home/graham/pypy/numba/numba/targets/arrayobj.py (3919)
[2] During: lowering "$0.4 = call $0.2(val)" at /home/graham/pypy/numba/numba/tests/test_sort.py (54)

Failed at nopython (nopython mode backend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 845, in native_lowering_stage
    lower.lower()
  File "/home/graham/pypy/numba/numba/lowering.py", line 125, in lower
    self.lower_normal_function(self.fndesc)
  File "/home/graham/pypy/numba/numba/lowering.py", line 160, in lower_normal_function
    entry_block_tail = self.lower_function_body()
  File "/home/graham/pypy/numba/numba/lowering.py", line 185, in lower_function_body
    self.lower_block(block)
  File "/home/graham/pypy/numba/numba/lowering.py", line 200, in lower_block
    self.lower_inst(inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 237, in lower_inst
    val = self.lower_assign(ty, inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 382, in lower_assign
    return self.lower_expr(ty, value)
  File "/home/graham/pypy/numba/numba/lowering.py", line 695, in lower_expr
    res = self.lower_call(resty, expr)
  File "/home/graham/pypy/numba/numba/lowering.py", line 661, in lower_call
    res = impl(self.builder, argvals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 961, in __call__
    return self._imp(self._context, builder, self._sig, args)
  File "/home/graham/pypy/numba/numba/targets/arrayobj.py", line 3912, in array_sort
    return context.compile_internal(builder, array_sort_impl, sig, args)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 779, in compile_internal
    ty = self.compile_subroutine(builder, impl, sig, locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 769, in compile_subroutine
    locals=locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 749, in compile_subroutine_no_cache
    locals=locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 753, in compile_internal
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x000000000ce84f00>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000009523268>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3910)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3910

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x000000000ce84f00>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000009523268>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3910)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3910
[1] During: lowering "$0.6 = call $0.5()" at /home/graham/pypy/numba/numba/targets/arrayobj.py (3919)

Failed at nopython (nopython mode backend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x000000000ce84f00>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000009523268>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3910)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3910

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x000000000ce84f00>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000009523268>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arrayobj.py (3910)
--%<-----------------------------------------------------------------

File "numba/targets/arrayobj.py", line 3910
[1] During: lowering "$0.6 = call $0.5()" at /home/graham/pypy/numba/numba/targets/arrayobj.py (3919)
[2] During: lowering "$0.4 = call $0.2(val)" at /home/graham/pypy/numba/numba/tests/test_sort.py (54)

======================================================================
ERROR: test_list_sort (numba.tests.test_sort.TestPythonSort)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 826, in test_list_sort
    orig, ret = cfunc(size)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 308, in _compile_for_args
    raise e
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 845, in native_lowering_stage
    lower.lower()
  File "/home/graham/pypy/numba/numba/lowering.py", line 125, in lower
    self.lower_normal_function(self.fndesc)
  File "/home/graham/pypy/numba/numba/lowering.py", line 160, in lower_normal_function
    entry_block_tail = self.lower_function_body()
  File "/home/graham/pypy/numba/numba/lowering.py", line 185, in lower_function_body
    self.lower_block(block)
  File "/home/graham/pypy/numba/numba/lowering.py", line 200, in lower_block
    self.lower_inst(inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 237, in lower_inst
    val = self.lower_assign(ty, inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 382, in lower_assign
    return self.lower_expr(ty, value)
  File "/home/graham/pypy/numba/numba/lowering.py", line 695, in lower_expr
    res = self.lower_call(resty, expr)
  File "/home/graham/pypy/numba/numba/lowering.py", line 661, in lower_call
    res = impl(self.builder, argvals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 961, in __call__
    return self._imp(self._context, builder, self._sig, args)
  File "/home/graham/pypy/numba/numba/targets/listobj.py", line 950, in list_sort
    return context.compile_internal(builder, list_sort_impl, sig, args)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 779, in compile_internal
    ty = self.compile_subroutine(builder, impl, sig, locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 769, in compile_subroutine
    locals=locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 749, in compile_subroutine_no_cache
    locals=locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 753, in compile_internal
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x0000000008493e18>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000005f63880>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/listobj.py (946)
--%<-----------------------------------------------------------------

File "numba/targets/listobj.py", line 946

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x0000000008493e18>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000005f63880>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/listobj.py (946)
--%<-----------------------------------------------------------------

File "numba/targets/listobj.py", line 946
[1] During: lowering "$67.8 = call $67.7()" at /home/graham/pypy/numba/numba/tests/test_sort.py (65)

Failed at nopython (nopython mode backend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x0000000008493e18>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000005f63880>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/listobj.py (946)
--%<-----------------------------------------------------------------

File "numba/targets/listobj.py", line 946

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x0000000008493e18>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000005f63880>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/listobj.py (946)
--%<-----------------------------------------------------------------

File "numba/targets/listobj.py", line 946
[1] During: lowering "$67.8 = call $67.7()" at /home/graham/pypy/numba/numba/tests/test_sort.py (65)

======================================================================
ERROR: test_list_sort_reverse (numba.tests.test_sort.TestPythonSort)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 836, in test_list_sort_reverse
    orig, ret = cfunc(size, b)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 308, in _compile_for_args
    raise e
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 845, in native_lowering_stage
    lower.lower()
  File "/home/graham/pypy/numba/numba/lowering.py", line 125, in lower
    self.lower_normal_function(self.fndesc)
  File "/home/graham/pypy/numba/numba/lowering.py", line 160, in lower_normal_function
    entry_block_tail = self.lower_function_body()
  File "/home/graham/pypy/numba/numba/lowering.py", line 185, in lower_function_body
    self.lower_block(block)
  File "/home/graham/pypy/numba/numba/lowering.py", line 200, in lower_block
    self.lower_inst(inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 237, in lower_inst
    val = self.lower_assign(ty, inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 382, in lower_assign
    return self.lower_expr(ty, value)
  File "/home/graham/pypy/numba/numba/lowering.py", line 695, in lower_expr
    res = self.lower_call(resty, expr)
  File "/home/graham/pypy/numba/numba/lowering.py", line 661, in lower_call
    res = impl(self.builder, argvals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 961, in __call__
    return self._imp(self._context, builder, self._sig, args)
  File "/home/graham/pypy/numba/numba/targets/listobj.py", line 950, in list_sort
    return context.compile_internal(builder, list_sort_impl, sig, args)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 779, in compile_internal
    ty = self.compile_subroutine(builder, impl, sig, locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 769, in compile_subroutine
    locals=locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 749, in compile_subroutine_no_cache
    locals=locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 753, in compile_internal
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x00000000080e0608>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000005f63880>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/listobj.py (946)
--%<-----------------------------------------------------------------

File "numba/targets/listobj.py", line 946

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x00000000080e0608>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000005f63880>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/listobj.py (946)
--%<-----------------------------------------------------------------

File "numba/targets/listobj.py", line 946
[1] During: lowering "$67.10 = call $67.7(reverse=b)" at /home/graham/pypy/numba/numba/tests/test_sort.py (74)

Failed at nopython (nopython mode backend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x00000000080e0608>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000005f63880>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/listobj.py (946)
--%<-----------------------------------------------------------------

File "numba/targets/listobj.py", line 946

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x00000000080e0608>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000005f63880>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/listobj.py (946)
--%<-----------------------------------------------------------------

File "numba/targets/listobj.py", line 946
[1] During: lowering "$67.10 = call $67.7(reverse=b)" at /home/graham/pypy/numba/numba/tests/test_sort.py (74)

======================================================================
ERROR: test_sorted (numba.tests.test_sort.TestPythonSort)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 847, in test_sorted
    got = cfunc(orig)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 308, in _compile_for_args
    raise e
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 845, in native_lowering_stage
    lower.lower()
  File "/home/graham/pypy/numba/numba/lowering.py", line 125, in lower
    self.lower_normal_function(self.fndesc)
  File "/home/graham/pypy/numba/numba/lowering.py", line 160, in lower_normal_function
    entry_block_tail = self.lower_function_body()
  File "/home/graham/pypy/numba/numba/lowering.py", line 185, in lower_function_body
    self.lower_block(block)
  File "/home/graham/pypy/numba/numba/lowering.py", line 200, in lower_block
    self.lower_inst(inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 237, in lower_inst
    val = self.lower_assign(ty, inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 382, in lower_assign
    return self.lower_expr(ty, value)
  File "/home/graham/pypy/numba/numba/lowering.py", line 695, in lower_expr
    res = self.lower_call(resty, expr)
  File "/home/graham/pypy/numba/numba/lowering.py", line 661, in lower_call
    res = impl(self.builder, argvals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 961, in __call__
    return self._imp(self._context, builder, self._sig, args)
  File "/home/graham/pypy/numba/numba/targets/listobj.py", line 964, in sorted_impl
    return context.compile_internal(builder, sorted_impl, sig, args)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 779, in compile_internal
    ty = self.compile_subroutine(builder, impl, sig, locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 769, in compile_subroutine
    locals=locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 749, in compile_subroutine_no_cache
    locals=locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 753, in compile_internal
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 845, in native_lowering_stage
    lower.lower()
  File "/home/graham/pypy/numba/numba/lowering.py", line 125, in lower
    self.lower_normal_function(self.fndesc)
  File "/home/graham/pypy/numba/numba/lowering.py", line 160, in lower_normal_function
    entry_block_tail = self.lower_function_body()
  File "/home/graham/pypy/numba/numba/lowering.py", line 185, in lower_function_body
    self.lower_block(block)
  File "/home/graham/pypy/numba/numba/lowering.py", line 200, in lower_block
    self.lower_inst(inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 237, in lower_inst
    val = self.lower_assign(ty, inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 382, in lower_assign
    return self.lower_expr(ty, value)
  File "/home/graham/pypy/numba/numba/lowering.py", line 695, in lower_expr
    res = self.lower_call(resty, expr)
  File "/home/graham/pypy/numba/numba/lowering.py", line 661, in lower_call
    res = impl(self.builder, argvals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 961, in __call__
    return self._imp(self._context, builder, self._sig, args)
  File "/home/graham/pypy/numba/numba/targets/listobj.py", line 950, in list_sort
    return context.compile_internal(builder, list_sort_impl, sig, args)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 779, in compile_internal
    ty = self.compile_subroutine(builder, impl, sig, locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 769, in compile_subroutine
    locals=locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 749, in compile_subroutine_no_cache
    locals=locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 753, in compile_internal
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x000000000643ad08>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000005f63880>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/listobj.py (946)
--%<-----------------------------------------------------------------

File "numba/targets/listobj.py", line 946

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x000000000643ad08>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000005f63880>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/listobj.py (946)
--%<-----------------------------------------------------------------

File "numba/targets/listobj.py", line 946
[1] During: lowering "$0.8 = call $0.5(reverse=reverse)" at /home/graham/pypy/numba/numba/targets/listobj.py (961)

Failed at nopython (nopython mode backend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x000000000643ad08>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000005f63880>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/listobj.py (946)
--%<-----------------------------------------------------------------

File "numba/targets/listobj.py", line 946

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x000000000643ad08>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000005f63880>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/listobj.py (946)
--%<-----------------------------------------------------------------

File "numba/targets/listobj.py", line 946
[1] During: lowering "$0.8 = call $0.5(reverse=reverse)" at /home/graham/pypy/numba/numba/targets/listobj.py (961)
[2] During: lowering "$0.3 = call $0.1(val)" at /home/graham/pypy/numba/numba/tests/test_sort.py (48)

Failed at nopython (nopython mode backend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 845, in native_lowering_stage
    lower.lower()
  File "/home/graham/pypy/numba/numba/lowering.py", line 125, in lower
    self.lower_normal_function(self.fndesc)
  File "/home/graham/pypy/numba/numba/lowering.py", line 160, in lower_normal_function
    entry_block_tail = self.lower_function_body()
  File "/home/graham/pypy/numba/numba/lowering.py", line 185, in lower_function_body
    self.lower_block(block)
  File "/home/graham/pypy/numba/numba/lowering.py", line 200, in lower_block
    self.lower_inst(inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 237, in lower_inst
    val = self.lower_assign(ty, inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 382, in lower_assign
    return self.lower_expr(ty, value)
  File "/home/graham/pypy/numba/numba/lowering.py", line 695, in lower_expr
    res = self.lower_call(resty, expr)
  File "/home/graham/pypy/numba/numba/lowering.py", line 661, in lower_call
    res = impl(self.builder, argvals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 961, in __call__
    return self._imp(self._context, builder, self._sig, args)
  File "/home/graham/pypy/numba/numba/targets/listobj.py", line 950, in list_sort
    return context.compile_internal(builder, list_sort_impl, sig, args)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 779, in compile_internal
    ty = self.compile_subroutine(builder, impl, sig, locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 769, in compile_subroutine
    locals=locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 749, in compile_subroutine_no_cache
    locals=locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 753, in compile_internal
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x000000000643ad08>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000005f63880>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/listobj.py (946)
--%<-----------------------------------------------------------------

File "numba/targets/listobj.py", line 946

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x000000000643ad08>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000005f63880>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/listobj.py (946)
--%<-----------------------------------------------------------------

File "numba/targets/listobj.py", line 946
[1] During: lowering "$0.8 = call $0.5(reverse=reverse)" at /home/graham/pypy/numba/numba/targets/listobj.py (961)

Failed at nopython (nopython mode backend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x000000000643ad08>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000005f63880>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/listobj.py (946)
--%<-----------------------------------------------------------------

File "numba/targets/listobj.py", line 946

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x000000000643ad08>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000005f63880>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/listobj.py (946)
--%<-----------------------------------------------------------------

File "numba/targets/listobj.py", line 946
[1] During: lowering "$0.8 = call $0.5(reverse=reverse)" at /home/graham/pypy/numba/numba/targets/listobj.py (961)
[2] During: lowering "$0.3 = call $0.1(val)" at /home/graham/pypy/numba/numba/tests/test_sort.py (48)

======================================================================
ERROR: test_sorted_reverse (numba.tests.test_sort.TestPythonSort)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 859, in test_sorted_reverse
    got = cfunc(orig, b)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 308, in _compile_for_args
    raise e
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 845, in native_lowering_stage
    lower.lower()
  File "/home/graham/pypy/numba/numba/lowering.py", line 125, in lower
    self.lower_normal_function(self.fndesc)
  File "/home/graham/pypy/numba/numba/lowering.py", line 160, in lower_normal_function
    entry_block_tail = self.lower_function_body()
  File "/home/graham/pypy/numba/numba/lowering.py", line 185, in lower_function_body
    self.lower_block(block)
  File "/home/graham/pypy/numba/numba/lowering.py", line 200, in lower_block
    self.lower_inst(inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 237, in lower_inst
    val = self.lower_assign(ty, inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 382, in lower_assign
    return self.lower_expr(ty, value)
  File "/home/graham/pypy/numba/numba/lowering.py", line 695, in lower_expr
    res = self.lower_call(resty, expr)
  File "/home/graham/pypy/numba/numba/lowering.py", line 661, in lower_call
    res = impl(self.builder, argvals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 961, in __call__
    return self._imp(self._context, builder, self._sig, args)
  File "/home/graham/pypy/numba/numba/targets/listobj.py", line 964, in sorted_impl
    return context.compile_internal(builder, sorted_impl, sig, args)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 779, in compile_internal
    ty = self.compile_subroutine(builder, impl, sig, locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 769, in compile_subroutine
    locals=locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 749, in compile_subroutine_no_cache
    locals=locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 753, in compile_internal
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 845, in native_lowering_stage
    lower.lower()
  File "/home/graham/pypy/numba/numba/lowering.py", line 125, in lower
    self.lower_normal_function(self.fndesc)
  File "/home/graham/pypy/numba/numba/lowering.py", line 160, in lower_normal_function
    entry_block_tail = self.lower_function_body()
  File "/home/graham/pypy/numba/numba/lowering.py", line 185, in lower_function_body
    self.lower_block(block)
  File "/home/graham/pypy/numba/numba/lowering.py", line 200, in lower_block
    self.lower_inst(inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 237, in lower_inst
    val = self.lower_assign(ty, inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 382, in lower_assign
    return self.lower_expr(ty, value)
  File "/home/graham/pypy/numba/numba/lowering.py", line 695, in lower_expr
    res = self.lower_call(resty, expr)
  File "/home/graham/pypy/numba/numba/lowering.py", line 661, in lower_call
    res = impl(self.builder, argvals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 961, in __call__
    return self._imp(self._context, builder, self._sig, args)
  File "/home/graham/pypy/numba/numba/targets/listobj.py", line 950, in list_sort
    return context.compile_internal(builder, list_sort_impl, sig, args)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 779, in compile_internal
    ty = self.compile_subroutine(builder, impl, sig, locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 769, in compile_subroutine
    locals=locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 749, in compile_subroutine_no_cache
    locals=locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 753, in compile_internal
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x000000000cedcdb0>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000005f63880>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/listobj.py (946)
--%<-----------------------------------------------------------------

File "numba/targets/listobj.py", line 946

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x000000000cedcdb0>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000005f63880>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/listobj.py (946)
--%<-----------------------------------------------------------------

File "numba/targets/listobj.py", line 946
[1] During: lowering "$0.8 = call $0.5(reverse=reverse)" at /home/graham/pypy/numba/numba/targets/listobj.py (961)

Failed at nopython (nopython mode backend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x000000000cedcdb0>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000005f63880>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/listobj.py (946)
--%<-----------------------------------------------------------------

File "numba/targets/listobj.py", line 946

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x000000000cedcdb0>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000005f63880>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/listobj.py (946)
--%<-----------------------------------------------------------------

File "numba/targets/listobj.py", line 946
[1] During: lowering "$0.8 = call $0.5(reverse=reverse)" at /home/graham/pypy/numba/numba/targets/listobj.py (961)
[2] During: lowering "$0.5 = call $0.1(val, reverse=b)" at /home/graham/pypy/numba/numba/tests/test_sort.py (51)

Failed at nopython (nopython mode backend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 845, in native_lowering_stage
    lower.lower()
  File "/home/graham/pypy/numba/numba/lowering.py", line 125, in lower
    self.lower_normal_function(self.fndesc)
  File "/home/graham/pypy/numba/numba/lowering.py", line 160, in lower_normal_function
    entry_block_tail = self.lower_function_body()
  File "/home/graham/pypy/numba/numba/lowering.py", line 185, in lower_function_body
    self.lower_block(block)
  File "/home/graham/pypy/numba/numba/lowering.py", line 200, in lower_block
    self.lower_inst(inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 237, in lower_inst
    val = self.lower_assign(ty, inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 382, in lower_assign
    return self.lower_expr(ty, value)
  File "/home/graham/pypy/numba/numba/lowering.py", line 695, in lower_expr
    res = self.lower_call(resty, expr)
  File "/home/graham/pypy/numba/numba/lowering.py", line 661, in lower_call
    res = impl(self.builder, argvals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 961, in __call__
    return self._imp(self._context, builder, self._sig, args)
  File "/home/graham/pypy/numba/numba/targets/listobj.py", line 950, in list_sort
    return context.compile_internal(builder, list_sort_impl, sig, args)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 779, in compile_internal
    ty = self.compile_subroutine(builder, impl, sig, locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 769, in compile_subroutine
    locals=locals)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 749, in compile_subroutine_no_cache
    locals=locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 753, in compile_internal
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x000000000cedcdb0>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000005f63880>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/listobj.py (946)
--%<-----------------------------------------------------------------

File "numba/targets/listobj.py", line 946

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x000000000cedcdb0>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000005f63880>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/listobj.py (946)
--%<-----------------------------------------------------------------

File "numba/targets/listobj.py", line 946
[1] During: lowering "$0.8 = call $0.5(reverse=reverse)" at /home/graham/pypy/numba/numba/targets/listobj.py (961)

Failed at nopython (nopython mode backend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x000000000cedcdb0>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000005f63880>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/listobj.py (946)
--%<-----------------------------------------------------------------

File "numba/targets/listobj.py", line 946

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x000000000cedcdb0>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_quicksort at 0x0000000005f63880>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/listobj.py (946)
--%<-----------------------------------------------------------------

File "numba/targets/listobj.py", line 946
[1] During: lowering "$0.8 = call $0.5(reverse=reverse)" at /home/graham/pypy/numba/numba/targets/listobj.py (961)
[2] During: lowering "$0.5 = call $0.1(val, reverse=b)" at /home/graham/pypy/numba/numba/tests/test_sort.py (51)

======================================================================
ERROR: test_insertion_sort (numba.tests.test_sort.TestQuicksortArrays)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 571, in test_insertion_sort
    check(l, n)
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 564, in check
    f(res, res, 1, n)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
NotImplementedError: offset=0 opcode=0xcc opname=JUMP_IF_NOT_DEBUG

======================================================================
ERROR: test_partition (numba.tests.test_sort.TestQuicksortArrays)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 598, in test_partition
    check(l, n)
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 587, in check
    index = f(res, res, 1, n)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
NotImplementedError: offset=0 opcode=0xcc opname=JUMP_IF_NOT_DEBUG

======================================================================
ERROR: test_run_quicksort (numba.tests.test_sort.TestQuicksortArrays)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 652, in test_run_quicksort
    f(keys)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
NotImplementedError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG

======================================================================
ERROR: test_run_quicksort_lt (numba.tests.test_sort.TestQuicksortArrays)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 670, in test_run_quicksort_lt
    f(keys)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
NotImplementedError: offset=151 opcode=0xcc opname=JUMP_IF_NOT_DEBUG

======================================================================
ERROR: test_binarysort (numba.tests.test_sort.TestTimsortArrays)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 174, in test_binarysort
    check(l, n)
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 169, in check
    f(res, res, 0, n, start)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
NotImplementedError: offset=0 opcode=0xcc opname=JUMP_IF_NOT_DEBUG

======================================================================
ERROR: test_binarysort_with_values (numba.tests.test_sort.TestTimsortArrays)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 200, in test_binarysort_with_values
    check(l, n)
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 195, in check
    f(res, res_v, 0, n, start)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
NotImplementedError: offset=0 opcode=0xcc opname=JUMP_IF_NOT_DEBUG

======================================================================
ERROR: test_count_run (numba.tests.test_sort.TestTimsortArrays)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 236, in test_count_run
    check(l, 0, n)
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 219, in check
    n, desc = f(self.array_factory(l), lo, hi)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
NotImplementedError: offset=0 opcode=0xcc opname=JUMP_IF_NOT_DEBUG

======================================================================
ERROR: test_gallop_left (numba.tests.test_sort.TestTimsortArrays)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 277, in test_gallop_left
    check_sorted_list(l)
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 272, in check_sorted_list
    check_all_hints(l, key, 0, n)
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 267, in check_all_hints
    check(l, key, start, stop, hint)
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 256, in check
    k = f(key, l, start, stop, hint)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
NotImplementedError: offset=0 opcode=0xcc opname=JUMP_IF_NOT_DEBUG

======================================================================
ERROR: test_gallop_right (numba.tests.test_sort.TestTimsortArrays)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 307, in test_gallop_right
    check_sorted_list(l)
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 302, in check_sorted_list
    check_all_hints(l, key, 0, n)
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 297, in check_all_hints
    check(l, key, start, stop, hint)
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 286, in check
    k = f(key, l, start, stop, hint)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
NotImplementedError: offset=0 opcode=0xcc opname=JUMP_IF_NOT_DEBUG

======================================================================
ERROR: test_merge_compute_minrun (numba.tests.test_sort.TestTimsortArrays)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 315, in test_merge_compute_minrun
    self.assertEqual(f(i), i)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
NotImplementedError: offset=6 opcode=0xcc opname=JUMP_IF_NOT_DEBUG

======================================================================
ERROR: test_merge_lo_hi (numba.tests.test_sort.TestTimsortArrays)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 365, in test_merge_lo_hi
    self.check_merge_lo_hi(f_lo, a, b)
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 549, in check_merge_lo_hi
    new_ms = func(keys, keys, ssa, na, ssb, nb)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 308, in _compile_for_args
    raise e
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x0000000007a97600>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=0 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function merge_lo at 0x00000000026fff10>))
[2] During: typing of call at /home/graham/pypy/numba/numba/tests/test_sort.py (525)
--%<-----------------------------------------------------------------

File "numba/tests/test_sort.py", line 525

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x0000000007a97600>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=0 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function merge_lo at 0x00000000026fff10>))
[2] During: typing of call at /home/graham/pypy/numba/numba/tests/test_sort.py (525)
--%<-----------------------------------------------------------------

File "numba/tests/test_sort.py", line 525

======================================================================
ERROR: test_run_timsort (numba.tests.test_sort.TestTimsortArrays)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 464, in test_run_timsort
    f(keys)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 308, in _compile_for_args
    raise e
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x0000000006401600>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=271 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_timsort_with_mergestate at 0x00007f760a675da8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/tests/timsort.py (918)
--%<-----------------------------------------------------------------

File "numba/tests/timsort.py", line 918

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x0000000006401600>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=271 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_timsort_with_mergestate at 0x00007f760a675da8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/tests/timsort.py (918)
--%<-----------------------------------------------------------------

File "numba/tests/timsort.py", line 918

======================================================================
ERROR: test_run_timsort_with_values (numba.tests.test_sort.TestTimsortArrays)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_sort.py", line 482, in test_run_timsort_with_values
    f(keys, values)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 308, in _compile_for_args
    raise e
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x000000000643ef70>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=271 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_timsort_with_mergestate at 0x00007f760a675da8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/tests/timsort.py (927)
--%<-----------------------------------------------------------------

File "numba/tests/timsort.py", line 927

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x000000000643ef70>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=271 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function run_timsort_with_mergestate at 0x00007f760a675da8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/tests/timsort.py (927)
--%<-----------------------------------------------------------------

File "numba/tests/timsort.py", line 927

======================================================================
ERROR: test_len (numba.tests.test_extending.TestHighLevelExtending)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_extending.py", line 432, in test_len
    self.assertPreciseEqual(cfunc([4, 5]), 2)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
RuntimeError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy

======================================================================
ERROR: test_array_T (numba.tests.test_array_methods.TestArrayMethods)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 8L != 2L

======================================================================
ERROR: test_array_astype (numba.tests.test_array_methods.TestArrayMethods)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 12L != 6L

======================================================================
ERROR: test_array_copy (numba.tests.test_array_methods.TestArrayMethods)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 16L != 8L

======================================================================
ERROR: test_array_nonzero (numba.tests.test_array_methods.TestArrayMethods)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 33L != 12L

======================================================================
ERROR: test_array_transpose (numba.tests.test_array_methods.TestArrayMethods)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 8L != 2L

======================================================================
ERROR: test_array_view (numba.tests.test_array_methods.TestArrayMethods)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_np_asfortranarray (numba.tests.test_array_methods.TestArrayMethods)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 12L != 7L

======================================================================
ERROR: test_np_copy (numba.tests.test_array_methods.TestArrayMethods)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 16L != 8L

======================================================================
ERROR: test_np_frombuffer (numba.tests.test_array_methods.TestArrayMethods)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_array_methods.py", line 393, in test_np_frombuffer
    self.check_np_frombuffer(np_frombuffer)
  File "/home/graham/pypy/numba/numba/tests/test_array_methods.py", line 376, in check_np_frombuffer
    check(b)
  File "/home/graham/pypy/numba/numba/tests/test_array_methods.py", line 364, in check
    old_refcnt = sys.getrefcount(buf)
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_np_frombuffer_allocated (numba.tests.test_array_methods.TestArrayMethods)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 3L != 0L

======================================================================
ERROR: test_np_frombuffer_dtype (numba.tests.test_array_methods.TestArrayMethods)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_array_methods.py", line 396, in test_np_frombuffer_dtype
    self.check_np_frombuffer(np_frombuffer_dtype)
  File "/home/graham/pypy/numba/numba/tests/test_array_methods.py", line 376, in check_np_frombuffer
    check(b)
  File "/home/graham/pypy/numba/numba/tests/test_array_methods.py", line 364, in check
    old_refcnt = sys.getrefcount(buf)
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_np_nonzero (numba.tests.test_array_methods.TestArrayMethods)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 33L != 12L

======================================================================
ERROR: test_np_where_1 (numba.tests.test_array_methods.TestArrayMethods)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 33L != 12L

======================================================================
ERROR: test_np_where_3 (numba.tests.test_array_methods.TestArrayMethods)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 54L != 50L

======================================================================
ERROR: test_unpack_nrt (numba.tests.test_unpack_sequence.TestUnpack)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 2L != 0L

======================================================================
ERROR: test_array_reshape (numba.tests.test_array_manipulation.TestArrayManipulation)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_as_strided (numba.tests.test_array_manipulation.TestArrayManipulation)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 6L != 0L

======================================================================
ERROR: test_flatten_array_npm (numba.tests.test_array_manipulation.TestArrayManipulation)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 6L != 3L

======================================================================
ERROR: test_ravel_array_npm (numba.tests.test_array_manipulation.TestArrayManipulation)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 20L != 15L

======================================================================
ERROR: test_transpose_array_npm (numba.tests.test_array_manipulation.TestArrayManipulation)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_1d_slicing_set_list_npm (numba.tests.test_indexing.TestSetItem)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_indexing.py", line 891, in test_1d_slicing_set_list_npm
    self.test_1d_slicing_set_list(flags=Noflags)
  File "/home/graham/pypy/numba/numba/tests/test_indexing.py", line 848, in test_1d_slicing_set_list
    flags, types.List(types.int16), [8, -42])
  File "/home/graham/pypy/numba/numba/tests/test_indexing.py", line 819, in check_1d_slicing_set_sequence
    cr = compile_isolated(pyfunc, argtys, flags=flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 179, in compile_isolated
    flags, locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
RuntimeError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy

======================================================================
ERROR: test_chain1 (numba.tests.test_chained_assign.TestChainedAssign)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 6L != 4L

======================================================================
ERROR: test_global_complex_arr (numba.tests.test_globals.TestGlobals)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_globals.py", line 100, in test_global_complex_arr
    self.check_global_complex_arr(forceobj=True)
  File "/home/graham/pypy/numba/numba/tests/test_globals.py", line 96, in check_global_complex_arr
    ctestfunc(arr)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 608, in compile
    lifted_from=self.lifted_from)
  File "/home/graham/pypy/numba/numba/compiler.py", line 743, in compile_ir
    return pipeline.compile_ir(interp=interp, lifted=lifted, lifted_from=lifted_from, func_attr=func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 389, in compile_ir
    return self._compile_ir()
  File "/home/graham/pypy/numba/numba/compiler.py", line 697, in _compile_ir
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
SystemError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 595, in stage_objectmode_backend
    self._backend(lowerfn, objectmode=True)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 546, in backend_object_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 882, in py_lowering_stage
    cfunc = targetctx.get_executable(library, fndesc, env)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 163, in get_executable
    (library,)
SystemError: An exception was set, but function returned a value

Failed at object (object mode backend)
An exception was set, but function returned a value

======================================================================
ERROR: test_global_ndarray (numba.tests.test_globals.TestGlobals)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_globals.py", line 86, in test_global_ndarray
    self.check_global_ndarray(forceobj=True)
  File "/home/graham/pypy/numba/numba/tests/test_globals.py", line 81, in check_global_ndarray
    self.assertEqual(ctestfunc(1), 11)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
SystemError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 595, in stage_objectmode_backend
    self._backend(lowerfn, objectmode=True)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 546, in backend_object_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 882, in py_lowering_stage
    cfunc = targetctx.get_executable(library, fndesc, env)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 163, in get_executable
    (library,)
SystemError: An exception was set, but function returned a value

Failed at object (object mode backend)
An exception was set, but function returned a value

======================================================================
ERROR: test_global_rec_arr (numba.tests.test_globals.TestGlobals)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_globals.py", line 114, in test_global_rec_arr
    self.check_global_rec_arr(forceobj=True)
  File "/home/graham/pypy/numba/numba/tests/test_globals.py", line 110, in check_global_rec_arr
    ctestfunc(arr)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 608, in compile
    lifted_from=self.lifted_from)
  File "/home/graham/pypy/numba/numba/compiler.py", line 743, in compile_ir
    return pipeline.compile_ir(interp=interp, lifted=lifted, lifted_from=lifted_from, func_attr=func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 389, in compile_ir
    return self._compile_ir()
  File "/home/graham/pypy/numba/numba/compiler.py", line 697, in _compile_ir
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
SystemError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 595, in stage_objectmode_backend
    self._backend(lowerfn, objectmode=True)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 546, in backend_object_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 882, in py_lowering_stage
    cfunc = targetctx.get_executable(library, fndesc, env)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 163, in get_executable
    (library,)
SystemError: An exception was set, but function returned a value

Failed at object (object mode backend)
An exception was set, but function returned a value

======================================================================
ERROR: test_global_rec_arr_extract_npm (numba.tests.test_globals.TestGlobals)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_globals.py", line 134, in test_global_rec_arr_extract_npm
    self.check_global_rec_arr_extract(nopython=True)
  File "/home/graham/pypy/numba/numba/tests/test_globals.py", line 125, in check_global_rec_arr_extract
    ctestfunc(arr1, arr2)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
LoweringError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 845, in native_lowering_stage
    lower.lower()
  File "/home/graham/pypy/numba/numba/lowering.py", line 125, in lower
    self.lower_normal_function(self.fndesc)
  File "/home/graham/pypy/numba/numba/lowering.py", line 160, in lower_normal_function
    entry_block_tail = self.lower_function_body()
  File "/home/graham/pypy/numba/numba/lowering.py", line 185, in lower_function_body
    self.lower_block(block)
  File "/home/graham/pypy/numba/numba/lowering.py", line 200, in lower_block
    self.lower_inst(inst)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/lowering.py", line 200, in lower_block
    self.lower_inst(inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 237, in lower_inst
    val = self.lower_assign(ty, inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 377, in lower_assign
    value.value)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 437, in get_constant_generic
    return impl(self, builder, ty, val)
  File "/home/graham/pypy/numba/numba/targets/arrayobj.py", line 1945, in constant_record
    return context.make_constant_array(builder, ty, pyval)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 880, in make_constant_array
    consts = Constant.array(Type.int(8), bytearray(flat.data))
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 437, in __getattribute__
    return object.__getattribute__(self, attr)
LoweringError: buffer object expected
File "numba/tests/test_globals.py", line 41
[1] During: lowering "$22.2 = global(rec_X: [(0, 0.5) (1, 1.5) (2, 2.5) (3, 3.5) (4, 4.5) (5, 5.5) (6, 6.5) (7, 7.5)
 (8, 8.5) (9, 9.5)])" at /home/graham/pypy/numba/numba/tests/test_globals.py (41)

Failed at nopython (nopython mode backend)
buffer object expected
File "numba/tests/test_globals.py", line 41
[1] During: lowering "$22.2 = global(rec_X: [(0, 0.5) (1, 1.5) (2, 2.5) (3, 3.5) (4, 4.5) (5, 5.5) (6, 6.5) (7, 7.5)
 (8, 8.5) (9, 9.5)])" at /home/graham/pypy/numba/numba/tests/test_globals.py (41)

======================================================================
ERROR: test_global_rec_arr_npm (numba.tests.test_globals.TestGlobals)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_globals.py", line 117, in test_global_rec_arr_npm
    self.check_global_rec_arr(nopython=True)
  File "/home/graham/pypy/numba/numba/tests/test_globals.py", line 110, in check_global_rec_arr
    ctestfunc(arr)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
LoweringError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 845, in native_lowering_stage
    lower.lower()
  File "/home/graham/pypy/numba/numba/lowering.py", line 125, in lower
    self.lower_normal_function(self.fndesc)
  File "/home/graham/pypy/numba/numba/lowering.py", line 160, in lower_normal_function
    entry_block_tail = self.lower_function_body()
  File "/home/graham/pypy/numba/numba/lowering.py", line 185, in lower_function_body
    self.lower_block(block)
  File "/home/graham/pypy/numba/numba/lowering.py", line 200, in lower_block
    self.lower_inst(inst)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/lowering.py", line 200, in lower_block
    self.lower_inst(inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 237, in lower_inst
    val = self.lower_assign(ty, inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 377, in lower_assign
    value.value)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 437, in get_constant_generic
    return impl(self, builder, ty, val)
  File "/home/graham/pypy/numba/numba/targets/arrayobj.py", line 1945, in constant_record
    return context.make_constant_array(builder, ty, pyval)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 880, in make_constant_array
    consts = Constant.array(Type.int(8), bytearray(flat.data))
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 437, in __getattribute__
    return object.__getattribute__(self, attr)
LoweringError: buffer object expected
File "numba/tests/test_globals.py", line 36
[1] During: lowering "$22.2 = global(rec_X: [(0, 0.5) (1, 1.5) (2, 2.5) (3, 3.5) (4, 4.5) (5, 5.5) (6, 6.5) (7, 7.5)
 (8, 8.5) (9, 9.5)])" at /home/graham/pypy/numba/numba/tests/test_globals.py (36)

Failed at nopython (nopython mode backend)
buffer object expected
File "numba/tests/test_globals.py", line 36
[1] During: lowering "$22.2 = global(rec_X: [(0, 0.5) (1, 1.5) (2, 2.5) (3, 3.5) (4, 4.5) (5, 5.5) (6, 6.5) (7, 7.5)
 (8, 8.5) (9, 9.5)])" at /home/graham/pypy/numba/numba/tests/test_globals.py (36)

======================================================================
ERROR: test_global_record (numba.tests.test_globals.TestGlobals)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_globals.py", line 165, in test_global_record
    res = global_record_func(x)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_two_global_rec_arrs (numba.tests.test_globals.TestGlobals)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_globals.py", line 151, in test_two_global_rec_arrs
    self.check_two_global_rec_arrs(forceobj=True)
  File "/home/graham/pypy/numba/numba/tests/test_globals.py", line 144, in check_two_global_rec_arrs
    ctestfunc(arr1, arr2, arr3, arr4)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 608, in compile
    lifted_from=self.lifted_from)
  File "/home/graham/pypy/numba/numba/compiler.py", line 743, in compile_ir
    return pipeline.compile_ir(interp=interp, lifted=lifted, lifted_from=lifted_from, func_attr=func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 389, in compile_ir
    return self._compile_ir()
  File "/home/graham/pypy/numba/numba/compiler.py", line 697, in _compile_ir
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
SystemError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 595, in stage_objectmode_backend
    self._backend(lowerfn, objectmode=True)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 546, in backend_object_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 882, in py_lowering_stage
    cfunc = targetctx.get_executable(library, fndesc, env)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 163, in get_executable
    (library,)
SystemError: An exception was set, but function returned a value

Failed at object (object mode backend)
An exception was set, but function returned a value

======================================================================
ERROR: test_two_global_rec_arrs_npm (numba.tests.test_globals.TestGlobals)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_globals.py", line 154, in test_two_global_rec_arrs_npm
    self.check_two_global_rec_arrs(nopython=True)
  File "/home/graham/pypy/numba/numba/tests/test_globals.py", line 144, in check_two_global_rec_arrs
    ctestfunc(arr1, arr2, arr3, arr4)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
LoweringError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 845, in native_lowering_stage
    lower.lower()
  File "/home/graham/pypy/numba/numba/lowering.py", line 125, in lower
    self.lower_normal_function(self.fndesc)
  File "/home/graham/pypy/numba/numba/lowering.py", line 160, in lower_normal_function
    entry_block_tail = self.lower_function_body()
  File "/home/graham/pypy/numba/numba/lowering.py", line 185, in lower_function_body
    self.lower_block(block)
  File "/home/graham/pypy/numba/numba/lowering.py", line 200, in lower_block
    self.lower_inst(inst)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/lowering.py", line 200, in lower_block
    self.lower_inst(inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 237, in lower_inst
    val = self.lower_assign(ty, inst)
  File "/home/graham/pypy/numba/numba/lowering.py", line 377, in lower_assign
    value.value)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 437, in get_constant_generic
    return impl(self, builder, ty, val)
  File "/home/graham/pypy/numba/numba/targets/arrayobj.py", line 1945, in constant_record
    return context.make_constant_array(builder, ty, pyval)
  File "/home/graham/pypy/numba/numba/targets/base.py", line 880, in make_constant_array
    consts = Constant.array(Type.int(8), bytearray(flat.data))
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 437, in __getattribute__
    return object.__getattribute__(self, attr)
LoweringError: buffer object expected
File "numba/tests/test_globals.py", line 55
[1] During: lowering "$22.2 = global(rec_X: [(0, 0.5) (1, 1.5) (2, 2.5) (3, 3.5) (4, 4.5) (5, 5.5) (6, 6.5) (7, 7.5)
 (8, 8.5) (9, 9.5)])" at /home/graham/pypy/numba/numba/tests/test_globals.py (55)

Failed at nopython (nopython mode backend)
buffer object expected
File "numba/tests/test_globals.py", line 55
[1] During: lowering "$22.2 = global(rec_X: [(0, 0.5) (1, 1.5) (2, 2.5) (3, 3.5) (4, 4.5) (5, 5.5) (6, 6.5) (7, 7.5)
 (8, 8.5) (9, 9.5)])" at /home/graham/pypy/numba/numba/tests/test_globals.py (55)

======================================================================
ERROR: test_print_values (numba.tests.test_print.TestPrint)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_print.py", line 89, in test_print_values
    with self.assertRefCount(x):
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 17, in __enter__
    return self.gen.next()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 114, in assertRefCount
    old_refcounts = [sys.getrefcount(x) for x in objects]
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_carray (numba.tests.test_cfunc.TestCArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_cfunc.py", line 312, in test_carray
    self.check_carray_farray(carray, 'C')
  File "/home/graham/pypy/numba/numba/tests/test_cfunc.py", line 277, in check_carray_farray
    a = func(self.make_float32_pointer(base), base.shape)
  File "/home/graham/pypy/numba/numba/numpy_support.py", line 453, in carray
    return _get_array_from_ptr(p, nbytes, dtype).reshape(shape)
  File "/home/graham/pypy/numba/numba/numpy_support.py", line 415, in _get_array_from_ptr
    return np.frombuffer(_get_bytes_buffer(ptr, nbytes), dtype)
TypeError: expected a readable buffer object

======================================================================
ERROR: test_farray (numba.tests.test_cfunc.TestCArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_cfunc.py", line 318, in test_farray
    self.check_carray_farray(farray, 'F')
  File "/home/graham/pypy/numba/numba/tests/test_cfunc.py", line 277, in check_carray_farray
    a = func(self.make_float32_pointer(base), base.shape)
  File "/home/graham/pypy/numba/numba/numpy_support.py", line 464, in farray
    return carray(ptr, shape, dtype).T
  File "/home/graham/pypy/numba/numba/numpy_support.py", line 453, in carray
    return _get_array_from_ptr(p, nbytes, dtype).reshape(shape)
  File "/home/graham/pypy/numba/numba/numpy_support.py", line 415, in _get_array_from_ptr
    return np.frombuffer(_get_bytes_buffer(ptr, nbytes), dtype)
TypeError: expected a readable buffer object

======================================================================
ERROR: test_numba_carray (numba.tests.test_cfunc.TestCArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_cfunc.py", line 360, in test_numba_carray
    self.check_numba_carray_farray(carray_usecase, carray_dtype_usecase)
  File "/home/graham/pypy/numba/numba/tests/test_cfunc.py", line 336, in check_numba_carray_farray
    self.check_carray_usecase(self.make_float32_pointer, pyfunc, f.ctypes)
  File "/home/graham/pypy/numba/numba/tests/test_cfunc.py", line 254, in check_carray_usecase
    expected = self.run_carray_usecase(pointer_factory, pyfunc)
  File "/home/graham/pypy/numba/numba/tests/test_cfunc.py", line 250, in run_carray_usecase
    func(pointer_factory(a), pointer_factory(out), *a.shape)
  File "/home/graham/pypy/numba/numba/tests/test_cfunc.py", line 49, in cfarray_usecase
    in_ = func(in_ptr, (m, n))
  File "/home/graham/pypy/numba/numba/numpy_support.py", line 453, in carray
    return _get_array_from_ptr(p, nbytes, dtype).reshape(shape)
  File "/home/graham/pypy/numba/numba/numpy_support.py", line 415, in _get_array_from_ptr
    return np.frombuffer(_get_bytes_buffer(ptr, nbytes), dtype)
TypeError: expected a readable buffer object

======================================================================
ERROR: test_numba_farray (numba.tests.test_cfunc.TestCArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_cfunc.py", line 366, in test_numba_farray
    self.check_numba_carray_farray(farray_usecase, farray_dtype_usecase)
  File "/home/graham/pypy/numba/numba/tests/test_cfunc.py", line 336, in check_numba_carray_farray
    self.check_carray_usecase(self.make_float32_pointer, pyfunc, f.ctypes)
  File "/home/graham/pypy/numba/numba/tests/test_cfunc.py", line 254, in check_carray_usecase
    expected = self.run_carray_usecase(pointer_factory, pyfunc)
  File "/home/graham/pypy/numba/numba/tests/test_cfunc.py", line 250, in run_carray_usecase
    func(pointer_factory(a), pointer_factory(out), *a.shape)
  File "/home/graham/pypy/numba/numba/tests/test_cfunc.py", line 49, in cfarray_usecase
    in_ = func(in_ptr, (m, n))
  File "/home/graham/pypy/numba/numba/numpy_support.py", line 464, in farray
    return carray(ptr, shape, dtype).T
  File "/home/graham/pypy/numba/numba/numpy_support.py", line 453, in carray
    return _get_array_from_ptr(p, nbytes, dtype).reshape(shape)
  File "/home/graham/pypy/numba/numba/numpy_support.py", line 415, in _get_array_from_ptr
    return np.frombuffer(_get_bytes_buffer(ptr, nbytes), dtype)
TypeError: expected a readable buffer object

======================================================================
ERROR: test_getitem (numba.tests.test_buffer_protocol.TestBufferProtocol)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_buffer_protocol.py", line 196, in test_getitem
    self.check_getitem(bytearray(b"abc"))
  File "/home/graham/pypy/numba/numba/tests/test_buffer_protocol.py", line 168, in check_getitem
    self.assertPreciseEqual(getitem_usecase(obj, i), expected)
TypeError: PyPy does not yet implement the new buffer interface

======================================================================
ERROR: test_iter (numba.tests.test_buffer_protocol.TestBufferProtocol)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_buffer_protocol.py", line 235, in test_iter
    self.check_iter(bytearray(b"abc"))
  File "/home/graham/pypy/numba/numba/tests/test_buffer_protocol.py", line 140, in check_iter
    self._check_unary(iter_usecase, obj)
  File "/home/graham/pypy/numba/numba/tests/test_buffer_protocol.py", line 134, in _check_unary
    self.assertPreciseEqual(jitfunc(*args), pyfunc(*args))
TypeError: PyPy does not yet implement the new buffer interface

======================================================================
ERROR: test_len (numba.tests.test_buffer_protocol.TestBufferProtocol)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_buffer_protocol.py", line 184, in test_len
    self.check_len(bytearray(5))
  File "/home/graham/pypy/numba/numba/tests/test_buffer_protocol.py", line 137, in check_len
    self._check_unary(len_usecase, obj)
  File "/home/graham/pypy/numba/numba/tests/test_buffer_protocol.py", line 134, in _check_unary
    self.assertPreciseEqual(jitfunc(*args), pyfunc(*args))
TypeError: PyPy does not yet implement the new buffer interface

======================================================================
ERROR: test_setitem (numba.tests.test_buffer_protocol.TestBufferProtocol)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_buffer_protocol.py", line 222, in test_setitem
    self.check_setitem(bytearray(b"abcdefghi"))
  File "/home/graham/pypy/numba/numba/tests/test_buffer_protocol.py", line 174, in check_setitem
    setitem_usecase(obj, i, val)
TypeError: PyPy does not yet implement the new buffer interface

======================================================================
ERROR: test_itemsize (numba.tests.test_buffer_protocol.TestMemoryView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_buffer_protocol.py", line 283, in test_itemsize
    self.assertPreciseEqual(itemsize_usecase(m), arr.itemsize)
TypeError: PyPy does not yet implement the new buffer interface

======================================================================
ERROR: test_nbytes (numba.tests.test_buffer_protocol.TestMemoryView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_buffer_protocol.py", line 288, in test_nbytes
    self.assertPreciseEqual(nbytes_usecase(m), arr.size * arr.itemsize)
TypeError: PyPy does not yet implement the new buffer interface

======================================================================
ERROR: test_ndim (numba.tests.test_buffer_protocol.TestMemoryView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_buffer_protocol.py", line 268, in test_ndim
    self.assertPreciseEqual(ndim_usecase(m), arr.ndim)
TypeError: PyPy does not yet implement the new buffer interface

======================================================================
ERROR: test_readonly (numba.tests.test_buffer_protocol.TestMemoryView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_buffer_protocol.py", line 293, in test_readonly
    self.assertIs(readonly_usecase(m), not arr.flags.writeable)
TypeError: PyPy does not yet implement the new buffer interface

======================================================================
ERROR: test_shape (numba.tests.test_buffer_protocol.TestMemoryView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_buffer_protocol.py", line 273, in test_shape
    self.assertPreciseEqual(shape_usecase(m), arr.shape)
TypeError: PyPy does not yet implement the new buffer interface

======================================================================
ERROR: test_strides (numba.tests.test_buffer_protocol.TestMemoryView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_buffer_protocol.py", line 278, in test_strides
    self.assertPreciseEqual(strides_usecase(m), arr.strides)
TypeError: PyPy does not yet implement the new buffer interface

======================================================================
ERROR: test_from_buffer_float32 (numba.tests.test_cffi.TestCFFI)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_cffi.py", line 104, in test_from_buffer_float32
    self._test_from_buffer_numpy_array(mod.vector_sin_float32, np.float32)
  File "/home/graham/pypy/numba/numba/tests/test_cffi.py", line 100, in _test_from_buffer_numpy_array
    self.check_vector_sin(cfunc, x, y)
  File "/home/graham/pypy/numba/numba/tests/test_cffi.py", line 93, in check_vector_sin
    cfunc(x, y)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 308, in _compile_for_args
    raise e
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 827, in type_inference_stage
    infer.build_constraint()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 701, in build_constraint
    self.constrain_statement(inst)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 830, in constrain_statement
    self.typeof_assign(inst)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 888, in typeof_assign
    self.typeof_global(inst, inst.target, value)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 976, in typeof_global
    typ = self.resolve_value_type(inst, gvar.value)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 907, in resolve_value_type
    raise TypingError(msg, loc=inst.loc)
TypingError: Untyped global name 'vsSin': cannot determine Numba type of value <FFIFunctionWrapper 'void vsSin(int, float *, float *)'>
File "numba/tests/cffi_usecases.py", line 165

Failed at nopython (nopython frontend)
Untyped global name 'vsSin': cannot determine Numba type of value <FFIFunctionWrapper 'void vsSin(int, float *, float *)'>
File "numba/tests/cffi_usecases.py", line 165

======================================================================
ERROR: test_from_buffer_float64 (numba.tests.test_cffi.TestCFFI)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_cffi.py", line 107, in test_from_buffer_float64
    self._test_from_buffer_numpy_array(mod.vector_sin_float64, np.float64)
  File "/home/graham/pypy/numba/numba/tests/test_cffi.py", line 100, in _test_from_buffer_numpy_array
    self.check_vector_sin(cfunc, x, y)
  File "/home/graham/pypy/numba/numba/tests/test_cffi.py", line 93, in check_vector_sin
    cfunc(x, y)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 308, in _compile_for_args
    raise e
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 827, in type_inference_stage
    infer.build_constraint()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 701, in build_constraint
    self.constrain_statement(inst)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 830, in constrain_statement
    self.typeof_assign(inst)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 888, in typeof_assign
    self.typeof_global(inst, inst.target, value)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 976, in typeof_global
    typ = self.resolve_value_type(inst, gvar.value)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 907, in resolve_value_type
    raise TypingError(msg, loc=inst.loc)
TypingError: Untyped global name 'vdSin': cannot determine Numba type of value <FFIFunctionWrapper 'void vdSin(int, double *, double *)'>
File "numba/tests/cffi_usecases.py", line 168

Failed at nopython (nopython frontend)
Untyped global name 'vdSin': cannot determine Numba type of value <FFIFunctionWrapper 'void vdSin(int, double *, double *)'>
File "numba/tests/cffi_usecases.py", line 168

======================================================================
ERROR: test_from_buffer_struct (numba.tests.test_cffi.TestCFFI)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_cffi.py", line 114, in test_from_buffer_struct
    real_cfunc(x, y)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 308, in _compile_for_args
    raise e
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 827, in type_inference_stage
    infer.build_constraint()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 701, in build_constraint
    self.constrain_statement(inst)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 830, in constrain_statement
    self.typeof_assign(inst)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 888, in typeof_assign
    self.typeof_global(inst, inst.target, value)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 976, in typeof_global
    typ = self.resolve_value_type(inst, gvar.value)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 907, in resolve_value_type
    raise TypingError(msg, loc=inst.loc)
TypingError: Untyped global name 'vector_real': cannot determine Numba type of value <FFIFunctionWrapper 'void vector_real(struct _numba_complex *, double *, int)'>
File "numba/tests/cffi_usecases.py", line 174

Failed at nopython (nopython frontend)
Untyped global name 'vector_real': cannot determine Numba type of value <FFIFunctionWrapper 'void vector_real(struct _numba_complex *, double *, int)'>
File "numba/tests/cffi_usecases.py", line 174

======================================================================
ERROR: test_function_pointer (numba.tests.test_cffi.TestCFFI)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_cffi.py", line 82, in test_function_pointer
    got = cfunc(fa, fb, x)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 308, in _compile_for_args
    raise e
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Invalid usage of pyobject with parameters (float64)
No type info available for pyobject as a callable.
File "numba/tests/cffi_usecases.py", line 153
[1] During: resolving callee type: pyobject
[2] During: typing of call at /home/graham/pypy/numba/numba/tests/cffi_usecases.py (153)

Failed at nopython (nopython frontend)
Invalid usage of pyobject with parameters (float64)
No type info available for pyobject as a callable.
File "numba/tests/cffi_usecases.py", line 153
[1] During: resolving callee type: pyobject
[2] During: typing of call at /home/graham/pypy/numba/numba/tests/cffi_usecases.py (153)

This error may have been caused by the following argument(s):
- argument 0: cannot determine Numba type of value <FFIFunctionWrapper 'double sin(double)'>
- argument 1: cannot determine Numba type of value <FFIFunctionWrapper 'double cos(double)'>


======================================================================
ERROR: test_sin_function_npm_ool (numba.tests.test_cffi.TestCFFI)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_cffi.py", line 56, in test_sin_function_npm_ool
    self._test_function(mod.use_cffi_sin_ool, flags=no_pyobj_flags)
  File "/home/graham/pypy/numba/numba/tests/test_cffi.py", line 39, in _test_function
    cres = compile_isolated(pyfunc, [types.double], flags=flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 179, in compile_isolated
    flags, locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 827, in type_inference_stage
    infer.build_constraint()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 701, in build_constraint
    self.constrain_statement(inst)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 830, in constrain_statement
    self.typeof_assign(inst)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 888, in typeof_assign
    self.typeof_global(inst, inst.target, value)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 976, in typeof_global
    typ = self.resolve_value_type(inst, gvar.value)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 907, in resolve_value_type
    raise TypingError(msg, loc=inst.loc)
TypingError: Untyped global name 'cffi_sin_ool': cannot determine Numba type of value <FFIFunctionWrapper 'double sin(double)'>
File "numba/tests/cffi_usecases.py", line 146

Failed at nopython (nopython frontend)
Untyped global name 'cffi_sin_ool': cannot determine Numba type of value <FFIFunctionWrapper 'double sin(double)'>
File "numba/tests/cffi_usecases.py", line 146

======================================================================
ERROR: test_user_defined_symbols (numba.tests.test_cffi.TestCFFI)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_cffi.py", line 90, in test_user_defined_symbols
    self.assertEqual(pyfunc(), cfunc())
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 308, in _compile_for_args
    raise e
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 827, in type_inference_stage
    infer.build_constraint()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 701, in build_constraint
    self.constrain_statement(inst)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 830, in constrain_statement
    self.typeof_assign(inst)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 888, in typeof_assign
    self.typeof_global(inst, inst.target, value)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 976, in typeof_global
    typ = self.resolve_value_type(inst, gvar.value)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 907, in resolve_value_type
    raise TypingError(msg, loc=inst.loc)
TypingError: Untyped global name 'cffi_foo': cannot determine Numba type of value <FFIFunctionWrapper 'int foo(int, int, int)'>
File "numba/tests/cffi_usecases.py", line 158

Failed at nopython (nopython frontend)
Untyped global name 'cffi_foo': cannot determine Numba type of value <FFIFunctionWrapper 'int foo(int, int, int)'>
File "numba/tests/cffi_usecases.py", line 158

======================================================================
ERROR: test_base_class (numba.tests.test_jitclasses.TestJitClass)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 310, in test_base_class
    class Test(Base):
  File "/home/graham/pypy/numba/numba/jitclass/decorators.py", line 27, in wrap
    return register_class_type(cls, spec, types.ClassType, ClassBuilder)
  File "/home/graham/pypy/numba/numba/jitclass/base.py", line 168, in register_class_type
    raise TypeError(msg.format(members))
TypeError: class members are not yet supported: __new__, __subclasshook__, __class__

======================================================================
ERROR: test_c_structure (numba.tests.test_jitclasses.TestJitClass)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 254, in test_c_structure
    class Struct(object):
  File "/home/graham/pypy/numba/numba/jitclass/decorators.py", line 27, in wrap
    return register_class_type(cls, spec, types.ClassType, ClassBuilder)
  File "/home/graham/pypy/numba/numba/jitclass/base.py", line 168, in register_class_type
    raise TypeError(msg.format(members))
TypeError: class members are not yet supported: __new__, __subclasshook__, __class__

======================================================================
ERROR: test_deferred_type (numba.tests.test_jitclasses.TestJitClass)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 213, in test_deferred_type
    class LinkedNode(object):
  File "/home/graham/pypy/numba/numba/jitclass/decorators.py", line 27, in wrap
    return register_class_type(cls, spec, types.ClassType, ClassBuilder)
  File "/home/graham/pypy/numba/numba/jitclass/base.py", line 168, in register_class_type
    raise TypeError(msg.format(members))
TypeError: class members are not yet supported: __new__, __subclasshook__, __class__

======================================================================
ERROR: test_distinct_classes (numba.tests.test_jitclasses.TestJitClass)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 414, in test_distinct_classes
    class Foo(object):
  File "/home/graham/pypy/numba/numba/jitclass/decorators.py", line 27, in wrap
    return register_class_type(cls, spec, types.ClassType, ClassBuilder)
  File "/home/graham/pypy/numba/numba/jitclass/base.py", line 168, in register_class_type
    raise TypeError(msg.format(members))
TypeError: class members are not yet supported: __new__, __subclasshook__, __class__

======================================================================
ERROR: test_docstring (numba.tests.test_jitclasses.TestJitClass)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 570, in test_docstring
    class Apple(object):
  File "/home/graham/pypy/numba/numba/jitclass/decorators.py", line 27, in wrap
    return register_class_type(cls, spec, types.ClassType, ClassBuilder)
  File "/home/graham/pypy/numba/numba/jitclass/base.py", line 168, in register_class_type
    raise TypeError(msg.format(members))
TypeError: class members are not yet supported: __new__, __subclasshook__, __class__

======================================================================
ERROR: test_is (numba.tests.test_jitclasses.TestJitClass)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 277, in test_is
    Vector = self._make_Vector2()
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 100, in _make_Vector2
    class Vector2(object):
  File "/home/graham/pypy/numba/numba/jitclass/decorators.py", line 27, in wrap
    return register_class_type(cls, spec, types.ClassType, ClassBuilder)
  File "/home/graham/pypy/numba/numba/jitclass/base.py", line 168, in register_class_type
    raise TypeError(msg.format(members))
TypeError: class members are not yet supported: __new__, __subclasshook__, __class__

======================================================================
ERROR: test_isinstance (numba.tests.test_jitclasses.TestJitClass)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 291, in test_isinstance
    Vector2 = self._make_Vector2()
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 100, in _make_Vector2
    class Vector2(object):
  File "/home/graham/pypy/numba/numba/jitclass/decorators.py", line 27, in wrap
    return register_class_type(cls, spec, types.ClassType, ClassBuilder)
  File "/home/graham/pypy/numba/numba/jitclass/base.py", line 168, in register_class_type
    raise TypeError(msg.format(members))
TypeError: class members are not yet supported: __new__, __subclasshook__, __class__

======================================================================
ERROR: test_jit_class_1 (numba.tests.test_jitclasses.TestJitClass)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 110, in test_jit_class_1
    Float2AndArray = self._make_Float2AndArray()
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 80, in _make_Float2AndArray
    class Float2AndArray(object):
  File "/home/graham/pypy/numba/numba/jitclass/decorators.py", line 27, in wrap
    return register_class_type(cls, spec, types.ClassType, ClassBuilder)
  File "/home/graham/pypy/numba/numba/jitclass/base.py", line 168, in register_class_type
    raise TypeError(msg.format(members))
TypeError: class members are not yet supported: __new__, __subclasshook__, __class__

======================================================================
ERROR: test_jitclass_datalayout (numba.tests.test_jitclasses.TestJitClass)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 192, in test_jitclass_datalayout
    class Foo(object):
  File "/home/graham/pypy/numba/numba/jitclass/decorators.py", line 27, in wrap
    return register_class_type(cls, spec, types.ClassType, ClassBuilder)
  File "/home/graham/pypy/numba/numba/jitclass/base.py", line 168, in register_class_type
    raise TypeError(msg.format(members))
TypeError: class members are not yet supported: __new__, __subclasshook__, __class__

======================================================================
ERROR: test_jitclass_usage_from_python (numba.tests.test_jitclasses.TestJitClass)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 133, in test_jitclass_usage_from_python
    Float2AndArray = self._make_Float2AndArray()
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 80, in _make_Float2AndArray
    class Float2AndArray(object):
  File "/home/graham/pypy/numba/numba/jitclass/decorators.py", line 27, in wrap
    return register_class_type(cls, spec, types.ClassType, ClassBuilder)
  File "/home/graham/pypy/numba/numba/jitclass/base.py", line 168, in register_class_type
    raise TypeError(msg.format(members))
TypeError: class members are not yet supported: __new__, __subclasshook__, __class__

======================================================================
ERROR: test_list_spec (numba.tests.test_jitclasses.TestJitClass)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 53, in test_list_spec
    self._check_spec(spec)
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 31, in _check_spec
    class Test(object):
  File "/home/graham/pypy/numba/numba/jitclass/decorators.py", line 27, in wrap
    return register_class_type(cls, spec, types.ClassType, ClassBuilder)
  File "/home/graham/pypy/numba/numba/jitclass/base.py", line 168, in register_class_type
    raise TypeError(msg.format(members))
TypeError: class members are not yet supported: __new__, __subclasshook__, __class__

======================================================================
ERROR: test_ordereddict_spec (numba.tests.test_jitclasses.TestJitClass)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 48, in test_ordereddict_spec
    self._check_spec(spec)
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 31, in _check_spec
    class Test(object):
  File "/home/graham/pypy/numba/numba/jitclass/decorators.py", line 27, in wrap
    return register_class_type(cls, spec, types.ClassType, ClassBuilder)
  File "/home/graham/pypy/numba/numba/jitclass/base.py", line 168, in register_class_type
    raise TypeError(msg.format(members))
TypeError: class members are not yet supported: __new__, __subclasshook__, __class__

======================================================================
ERROR: test_parameterized (numba.tests.test_jitclasses.TestJitClass)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 451, in test_parameterized
    a = create_my_class(123)
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 448, in create_my_class
    cls = jitclass([('value', typeof(value))])(MyClass)
  File "/home/graham/pypy/numba/numba/jitclass/decorators.py", line 27, in wrap
    return register_class_type(cls, spec, types.ClassType, ClassBuilder)
  File "/home/graham/pypy/numba/numba/jitclass/base.py", line 168, in register_class_type
    raise TypeError(msg.format(members))
TypeError: class members are not yet supported: __new__, __subclasshook__, __class__

======================================================================
ERROR: test_protected_attrs (numba.tests.test_jitclasses.TestJitClass)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 473, in test_protected_attrs
    class MyClass(object):
  File "/home/graham/pypy/numba/numba/jitclass/decorators.py", line 27, in wrap
    return register_class_type(cls, spec, types.ClassType, ClassBuilder)
  File "/home/graham/pypy/numba/numba/jitclass/base.py", line 168, in register_class_type
    raise TypeError(msg.format(members))
TypeError: class members are not yet supported: __new__, __subclasshook__, __class__

======================================================================
ERROR: test_subclassing (numba.tests.test_jitclasses.TestJitClass)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 296, in test_subclassing
    Vector2 = self._make_Vector2()
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 100, in _make_Vector2
    class Vector2(object):
  File "/home/graham/pypy/numba/numba/jitclass/decorators.py", line 27, in wrap
    return register_class_type(cls, spec, types.ClassType, ClassBuilder)
  File "/home/graham/pypy/numba/numba/jitclass/base.py", line 168, in register_class_type
    raise TypeError(msg.format(members))
TypeError: class members are not yet supported: __new__, __subclasshook__, __class__

======================================================================
ERROR: test_user_getter_setter (numba.tests.test_jitclasses.TestJitClass)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 335, in test_user_getter_setter
    class Foo(object):
  File "/home/graham/pypy/numba/numba/jitclass/decorators.py", line 27, in wrap
    return register_class_type(cls, spec, types.ClassType, ClassBuilder)
  File "/home/graham/pypy/numba/numba/jitclass/base.py", line 168, in register_class_type
    raise TypeError(msg.format(members))
TypeError: class members are not yet supported: __new__, __subclasshook__, __class__

======================================================================
ERROR: test_global_func_lifetime (numba.tests.test_func_lifetime.TestFuncLifetime)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_func_lifetime.py", line 76, in test_global_func_lifetime
    self.check_global_func_lifetime(forceobj=True)
  File "/home/graham/pypy/numba/numba/tests/test_func_lifetime.py", line 70, in check_global_func_lifetime
    refs = [weakref.ref(obj) for obj in (c_f, cfunc.__self__)]
AttributeError: 'builtin_function_or_method' object has no attribute '__self__'

======================================================================
ERROR: test_global_func_lifetime_npm (numba.tests.test_func_lifetime.TestFuncLifetime)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_func_lifetime.py", line 79, in test_global_func_lifetime_npm
    self.check_global_func_lifetime(nopython=True)
  File "/home/graham/pypy/numba/numba/tests/test_func_lifetime.py", line 70, in check_global_func_lifetime
    refs = [weakref.ref(obj) for obj in (c_f, cfunc.__self__)]
AttributeError: 'builtin_function_or_method' object has no attribute '__self__'

======================================================================
ERROR: test_inner_function_lifetime (numba.tests.test_func_lifetime.TestFuncLifetime)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_func_lifetime.py", line 128, in test_inner_function_lifetime
    self.check_inner_function_lifetime(forceobj=True)
  File "/home/graham/pypy/numba/numba/tests/test_func_lifetime.py", line 120, in check_inner_function_lifetime
    self.get_impl(c_mult_10).__self__,
AttributeError: 'builtin_function_or_method' object has no attribute '__self__'

======================================================================
ERROR: test_inner_function_lifetime_npm (numba.tests.test_func_lifetime.TestFuncLifetime)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_func_lifetime.py", line 131, in test_inner_function_lifetime_npm
    self.check_inner_function_lifetime(nopython=True)
  File "/home/graham/pypy/numba/numba/tests/test_func_lifetime.py", line 120, in check_inner_function_lifetime
    self.get_impl(c_mult_10).__self__,
AttributeError: 'builtin_function_or_method' object has no attribute '__self__'

======================================================================
ERROR: test_local_func_lifetime (numba.tests.test_func_lifetime.TestFuncLifetime)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_func_lifetime.py", line 58, in test_local_func_lifetime
    self.check_local_func_lifetime(forceobj=True)
  File "/home/graham/pypy/numba/numba/tests/test_func_lifetime.py", line 52, in check_local_func_lifetime
    refs = [weakref.ref(obj) for obj in (f, c_f, cfunc.__self__)]
AttributeError: 'builtin_function_or_method' object has no attribute '__self__'

======================================================================
ERROR: test_local_func_lifetime_npm (numba.tests.test_func_lifetime.TestFuncLifetime)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_func_lifetime.py", line 61, in test_local_func_lifetime_npm
    self.check_local_func_lifetime(nopython=True)
  File "/home/graham/pypy/numba/numba/tests/test_func_lifetime.py", line 52, in check_local_func_lifetime
    refs = [weakref.ref(obj) for obj in (f, c_f, cfunc.__self__)]
AttributeError: 'builtin_function_or_method' object has no attribute '__self__'

======================================================================
ERROR: test_incref_after_cast (numba.tests.test_nrt.TestNRTIssue)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_issue_with_refct_op_pruning (numba.tests.test_nrt.TestNRTIssue)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 32L != 21L

======================================================================
ERROR: test_refct_pruning_issue_1511 (numba.tests.test_nrt.TestNRTIssue)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 2L != 0L

======================================================================
ERROR: test_all (numba.tests.test_runtests.TestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_runtests.py", line 46, in test_all
    self.check_all(['numba.tests'])
  File "/home/graham/pypy/numba/numba/tests/test_runtests.py", line 36, in check_all
    lines = self.check_testsuite_size(ids, 5000, 8000)
  File "/home/graham/pypy/numba/numba/tests/test_runtests.py", line 20, in check_testsuite_size
    lines = subprocess.check_output(cmd).decode().splitlines()
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/subprocess.py", line 573, in check_output
    raise CalledProcessError(retcode, cmd, output=output)
CalledProcessError: Command '['python', '-m', 'numba.runtests', '-l', 'numba.tests']' returned non-zero exit status 1

======================================================================
ERROR: test_cuda (numba.tests.test_runtests.TestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_runtests.py", line 51, in test_cuda
    self.check_testsuite_size(['numba.cuda.tests'], 1, 400)
  File "/home/graham/pypy/numba/numba/tests/test_runtests.py", line 20, in check_testsuite_size
    lines = subprocess.check_output(cmd).decode().splitlines()
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/subprocess.py", line 573, in check_output
    raise CalledProcessError(retcode, cmd, output=output)
CalledProcessError: Command '['python', '-m', 'numba.runtests', '-l', 'numba.cuda.tests']' returned non-zero exit status 1

======================================================================
ERROR: test_default (numba.tests.test_runtests.TestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_runtests.py", line 43, in test_default
    self.check_all([])
  File "/home/graham/pypy/numba/numba/tests/test_runtests.py", line 36, in check_all
    lines = self.check_testsuite_size(ids, 5000, 8000)
  File "/home/graham/pypy/numba/numba/tests/test_runtests.py", line 20, in check_testsuite_size
    lines = subprocess.check_output(cmd).decode().splitlines()
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/subprocess.py", line 573, in check_output
    raise CalledProcessError(retcode, cmd, output=output)
CalledProcessError: Command '['python', '-m', 'numba.runtests', '-l']' returned non-zero exit status 1

======================================================================
ERROR: test_module (numba.tests.test_runtests.TestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_runtests.py", line 54, in test_module
    self.check_testsuite_size(['numba.tests.test_utils'], 5, 15)
  File "/home/graham/pypy/numba/numba/tests/test_runtests.py", line 20, in check_testsuite_size
    lines = subprocess.check_output(cmd).decode().splitlines()
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/subprocess.py", line 573, in check_output
    raise CalledProcessError(retcode, cmd, output=output)
CalledProcessError: Command '['python', '-m', 'numba.runtests', '-l', 'numba.tests.test_utils']' returned non-zero exit status 1

======================================================================
ERROR: test_subpackage (numba.tests.test_runtests.TestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_runtests.py", line 61, in test_subpackage
    self.check_testsuite_size(['numba.tests.npyufunc'], 50, 200)
  File "/home/graham/pypy/numba/numba/tests/test_runtests.py", line 20, in check_testsuite_size
    lines = subprocess.check_output(cmd).decode().splitlines()
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/subprocess.py", line 573, in check_output
    raise CalledProcessError(retcode, cmd, output=output)
CalledProcessError: Command '['python', '-m', 'numba.runtests', '-l', 'numba.tests.npyufunc']' returned non-zero exit status 1

======================================================================
ERROR: test_generator1 (numba.tests.test_obj_lifetime.TestObjLifetime)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_obj_lifetime.py", line 348, in test_generator1
    self.exercise_generator(generator_usecase1)
  File "/home/graham/pypy/numba/numba/tests/test_obj_lifetime.py", line 326, in exercise_generator
    with self.assertRefCount(rec):
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 17, in __enter__
    return self.gen.next()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 114, in assertRefCount
    old_refcounts = [sys.getrefcount(x) for x in objects]
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_generator2 (numba.tests.test_obj_lifetime.TestObjLifetime)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_obj_lifetime.py", line 351, in test_generator2
    self.exercise_generator(generator_usecase2)
  File "/home/graham/pypy/numba/numba/tests/test_obj_lifetime.py", line 326, in exercise_generator
    with self.assertRefCount(rec):
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 17, in __enter__
    return self.gen.next()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 114, in assertRefCount
    old_refcounts = [sys.getrefcount(x) for x in objects]
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_raising1 (numba.tests.test_obj_lifetime.TestObjLifetime)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_obj_lifetime.py", line 358, in test_raising1
    with self.assertRefCount(do_raise):
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 17, in __enter__
    return self.gen.next()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 114, in assertRefCount
    old_refcounts = [sys.getrefcount(x) for x in objects]
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_raising2 (numba.tests.test_obj_lifetime.TestObjLifetime)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_obj_lifetime.py", line 363, in test_raising2
    with self.assertRefCount(do_raise):
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 17, in __enter__
    return self.gen.next()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 114, in assertRefCount
    old_refcounts = [sys.getrefcount(x) for x in objects]
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_raising3 (numba.tests.test_obj_lifetime.TestObjLifetime)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_obj_lifetime.py", line 368, in test_raising3
    with self.assertRefCount(MyError):
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 17, in __enter__
    return self.gen.next()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 114, in assertRefCount
    old_refcounts = [sys.getrefcount(x) for x in objects]
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_allocation_mt (numba.tests.test_dyn_array.TestDynArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 695L != 693L

======================================================================
ERROR: test_array_pass_through_sliced (numba.tests.test_dyn_array.TestDynArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_dyn_array.py", line 233, in test_array_pass_through_sliced
    initrefct = sys.getrefcount(arr)
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_empty_0d (numba.tests.test_dyn_array.TestDynArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_empty_1d (numba.tests.test_dyn_array.TestDynArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_empty_2d (numba.tests.test_dyn_array.TestDynArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_empty_2d_sliced (numba.tests.test_dyn_array.TestDynArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_empty_3d (numba.tests.test_dyn_array.TestDynArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_issue_with_return_leak (numba.tests.test_dyn_array.TestDynArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_dyn_array.py", line 496, in test_issue_with_return_leak
    old_refct = sys.getrefcount(arr)
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_refct_mt (numba.tests.test_dyn_array.TestDynArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_dyn_array.py", line 367, in test_refct_mt
    expected_refct = sys.getrefcount(input)
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_return_global_array (numba.tests.test_dyn_array.TestDynArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_dyn_array.py", line 171, in test_return_global_array
    initrefct = sys.getrefcount(y)
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_return_tuple_of_array (numba.tests.test_dyn_array.TestDynArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_dyn_array.py", line 448, in test_return_tuple_of_array
    initrefct = sys.getrefcount(x)
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_return_tuple_of_array_created (numba.tests.test_dyn_array.TestDynArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_dyn_array.py", line 477, in test_return_tuple_of_array_created
    self.assertEqual(2, sys.getrefcount(got_y))
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_return_tuple_of_array_created (numba.tests.test_dyn_array.TestDynArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 2L != 1L

======================================================================
ERROR: test_swap (numba.tests.test_dyn_array.TestDynArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_dyn_array.py", line 429, in test_swap
    initrefct = sys.getrefcount(x), sys.getrefcount(y)
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_ufunc_with_allocated_output (numba.tests.test_dyn_array.TestDynArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 18L != 12L

======================================================================
ERROR: test_0d (numba.tests.test_dyn_array.TestNdFull)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_1d (numba.tests.test_dyn_array.TestNdFull)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_1d_dtype (numba.tests.test_dyn_array.TestNdFull)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_1d_dtype_instance (numba.tests.test_dyn_array.TestNdFull)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_2d (numba.tests.test_dyn_array.TestNdFull)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_2d_dtype_kwarg (numba.tests.test_dyn_array.TestNdFull)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_0d (numba.tests.test_dyn_array.TestNdOnes)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_1d (numba.tests.test_dyn_array.TestNdOnes)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_1d_dtype (numba.tests.test_dyn_array.TestNdOnes)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_1d_dtype_instance (numba.tests.test_dyn_array.TestNdOnes)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_2d (numba.tests.test_dyn_array.TestNdOnes)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_2d_dtype_kwarg (numba.tests.test_dyn_array.TestNdOnes)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_0d (numba.tests.test_dyn_array.TestNdZeros)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_1d (numba.tests.test_dyn_array.TestNdZeros)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_1d_dtype (numba.tests.test_dyn_array.TestNdZeros)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_1d_dtype_instance (numba.tests.test_dyn_array.TestNdZeros)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_2d (numba.tests.test_dyn_array.TestNdZeros)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_2d_dtype_kwarg (numba.tests.test_dyn_array.TestNdZeros)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_0d (numba.tests.test_dyn_array.TestNpArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 2L != 0L

======================================================================
ERROR: test_0d_with_dtype (numba.tests.test_dyn_array.TestNpArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 2L != 0L

======================================================================
ERROR: test_1d (numba.tests.test_dyn_array.TestNpArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_dyn_array.py", line 1030, in test_1d
    got = cfunc([2, 3, 42])
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
RuntimeError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy

======================================================================
ERROR: test_1d_with_dtype (numba.tests.test_dyn_array.TestNpArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_dyn_array.py", line 1047, in test_1d_with_dtype
    ((),),
  File "/home/graham/pypy/numba/numba/tests/test_dyn_array.py", line 38, in check_outputs
    ret = cfunc(*args)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
RuntimeError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy

======================================================================
ERROR: test_2d (numba.tests.test_dyn_array.TestNpArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_dyn_array.py", line 1057, in test_2d
    got = cfunc([(1, 2), (3, 4)])
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
RuntimeError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy

======================================================================
ERROR: test_2d_with_dtype (numba.tests.test_dyn_array.TestNpArray)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_dyn_array.py", line 1077, in test_2d_with_dtype
    got = cfunc([(1, 2.5), (3, 4.5)])
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
RuntimeError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy

======================================================================
ERROR: test_0d (numba.tests.test_dyn_array.TestNpStack)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 4L != 3L

======================================================================
ERROR: test_add_array_op (numba.tests.test_ufuncs.TestArrayOperators)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 50L != 28L

======================================================================
ERROR: test_bitwise_and_array_op (numba.tests.test_ufuncs.TestArrayOperators)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 39L != 22L

======================================================================
ERROR: test_bitwise_or_array_op (numba.tests.test_ufuncs.TestArrayOperators)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 39L != 22L

======================================================================
ERROR: test_bitwise_xor_array_op (numba.tests.test_ufuncs.TestArrayOperators)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 39L != 22L

======================================================================
ERROR: test_divide_array_op (numba.tests.test_ufuncs.TestArrayOperators)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 50L != 28L

======================================================================
ERROR: test_equal_array_op (numba.tests.test_ufuncs.TestArrayOperators)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 50L != 28L

======================================================================
ERROR: test_floor_divide_array_op (numba.tests.test_ufuncs.TestArrayOperators)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 38L != 22L

======================================================================
ERROR: test_greater_array_op (numba.tests.test_ufuncs.TestArrayOperators)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 50L != 28L

======================================================================
ERROR: test_greater_equal_array_op (numba.tests.test_ufuncs.TestArrayOperators)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 50L != 28L

======================================================================
ERROR: test_left_shift_array_op (numba.tests.test_ufuncs.TestArrayOperators)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 22L != 12L

======================================================================
ERROR: test_less_array_op (numba.tests.test_ufuncs.TestArrayOperators)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 50L != 28L

======================================================================
ERROR: test_less_equal_array_op (numba.tests.test_ufuncs.TestArrayOperators)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 50L != 28L

======================================================================
ERROR: test_multiply_array_op (numba.tests.test_ufuncs.TestArrayOperators)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 50L != 28L

======================================================================
ERROR: test_not_equal_array_op (numba.tests.test_ufuncs.TestArrayOperators)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 50L != 28L

======================================================================
ERROR: test_power_array_op (numba.tests.test_ufuncs.TestArrayOperators)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 50L != 28L

======================================================================
ERROR: test_remainder_array_op (numba.tests.test_ufuncs.TestArrayOperators)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 50L != 28L

======================================================================
ERROR: test_right_shift_array_op (numba.tests.test_ufuncs.TestArrayOperators)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 22L != 12L

======================================================================
ERROR: test_subtract_array_op (numba.tests.test_ufuncs.TestArrayOperators)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 50L != 28L

======================================================================
ERROR: test_unary_invert_array_op (numba.tests.test_ufuncs.TestArrayOperators)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 10L != 5L

======================================================================
ERROR: test_unary_negative_array_op (numba.tests.test_ufuncs.TestArrayOperators)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 12L != 6L

======================================================================
ERROR: test_unary_positive_array_op (numba.tests.test_ufuncs.TestArrayOperators)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 2L != 1L

======================================================================
ERROR: test_add_Mm_M (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1517, in test_template
    self._check_loop(fn, ufunc, loop)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1474, in _check_loop
    self._check_ufunc_with_dtypes(fn, ufunc, letter_types)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1501, in _check_ufunc_with_dtypes
    msg = msg.format(ufunc.__name__, c_args, prec, py_arg, c_arg)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/numeric.py", line 1807, in array_repr
    ', ', "array(")
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 447, in array2string
    separator, prefix, formatter=formatter)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 325, in _array2string
    _summaryEdgeItems, summary_insert)[:-1]
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 493, in _formatArray
    word = format_function(a[-i]) + separator
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 731, in __call__
    casting=self.casting)
TypeError: ufunc 'remainder' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''

======================================================================
ERROR: test_add_mM_M (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1517, in test_template
    self._check_loop(fn, ufunc, loop)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1474, in _check_loop
    self._check_ufunc_with_dtypes(fn, ufunc, letter_types)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1501, in _check_ufunc_with_dtypes
    msg = msg.format(ufunc.__name__, c_args, prec, py_arg, c_arg)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/numeric.py", line 1807, in array_repr
    ', ', "array(")
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 447, in array2string
    separator, prefix, formatter=formatter)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 325, in _array2string
    _summaryEdgeItems, summary_insert)[:-1]
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 493, in _formatArray
    word = format_function(a[-i]) + separator
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 731, in __call__
    casting=self.casting)
TypeError: ufunc 'remainder' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''

======================================================================
ERROR: test_comparisons (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1776, in test_comparisons
    self._check_comparison(ufunc)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1770, in _check_comparison
    self._check_ufunc_with_dtypes(fn, ufunc, ['M8[m]', 'M8[s]', '?'])
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1501, in _check_ufunc_with_dtypes
    msg = msg.format(ufunc.__name__, c_args, prec, py_arg, c_arg)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/numeric.py", line 1807, in array_repr
    ', ', "array(")
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 447, in array2string
    separator, prefix, formatter=formatter)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 325, in _array2string
    _summaryEdgeItems, summary_insert)[:-1]
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 493, in _formatArray
    word = format_function(a[-i]) + separator
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 731, in __call__
    casting=self.casting)
TypeError: ufunc 'remainder' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''

======================================================================
ERROR: test_equal_MM_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1517, in test_template
    self._check_loop(fn, ufunc, loop)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1474, in _check_loop
    self._check_ufunc_with_dtypes(fn, ufunc, letter_types)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1501, in _check_ufunc_with_dtypes
    msg = msg.format(ufunc.__name__, c_args, prec, py_arg, c_arg)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/numeric.py", line 1807, in array_repr
    ', ', "array(")
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 447, in array2string
    separator, prefix, formatter=formatter)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 325, in _array2string
    _summaryEdgeItems, summary_insert)[:-1]
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 493, in _formatArray
    word = format_function(a[-i]) + separator
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 731, in __call__
    casting=self.casting)
TypeError: ufunc 'remainder' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''

======================================================================
ERROR: test_fmax_MM_M (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1517, in test_template
    self._check_loop(fn, ufunc, loop)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1474, in _check_loop
    self._check_ufunc_with_dtypes(fn, ufunc, letter_types)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1501, in _check_ufunc_with_dtypes
    msg = msg.format(ufunc.__name__, c_args, prec, py_arg, c_arg)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/numeric.py", line 1807, in array_repr
    ', ', "array(")
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 447, in array2string
    separator, prefix, formatter=formatter)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 325, in _array2string
    _summaryEdgeItems, summary_insert)[:-1]
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 493, in _formatArray
    word = format_function(a[-i]) + separator
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 731, in __call__
    casting=self.casting)
TypeError: ufunc 'remainder' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''

======================================================================
ERROR: test_fmin_MM_M (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1517, in test_template
    self._check_loop(fn, ufunc, loop)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1474, in _check_loop
    self._check_ufunc_with_dtypes(fn, ufunc, letter_types)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1501, in _check_ufunc_with_dtypes
    msg = msg.format(ufunc.__name__, c_args, prec, py_arg, c_arg)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/numeric.py", line 1807, in array_repr
    ', ', "array(")
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 447, in array2string
    separator, prefix, formatter=formatter)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 325, in _array2string
    _summaryEdgeItems, summary_insert)[:-1]
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 493, in _formatArray
    word = format_function(a[-i]) + separator
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 731, in __call__
    casting=self.casting)
TypeError: ufunc 'remainder' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''

======================================================================
ERROR: test_greater_MM_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1517, in test_template
    self._check_loop(fn, ufunc, loop)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1474, in _check_loop
    self._check_ufunc_with_dtypes(fn, ufunc, letter_types)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1501, in _check_ufunc_with_dtypes
    msg = msg.format(ufunc.__name__, c_args, prec, py_arg, c_arg)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/numeric.py", line 1807, in array_repr
    ', ', "array(")
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 447, in array2string
    separator, prefix, formatter=formatter)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 325, in _array2string
    _summaryEdgeItems, summary_insert)[:-1]
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 493, in _formatArray
    word = format_function(a[-i]) + separator
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 731, in __call__
    casting=self.casting)
TypeError: ufunc 'remainder' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''

======================================================================
ERROR: test_greater_equal_MM_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1517, in test_template
    self._check_loop(fn, ufunc, loop)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1474, in _check_loop
    self._check_ufunc_with_dtypes(fn, ufunc, letter_types)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1501, in _check_ufunc_with_dtypes
    msg = msg.format(ufunc.__name__, c_args, prec, py_arg, c_arg)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/numeric.py", line 1807, in array_repr
    ', ', "array(")
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 447, in array2string
    separator, prefix, formatter=formatter)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 325, in _array2string
    _summaryEdgeItems, summary_insert)[:-1]
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 493, in _formatArray
    word = format_function(a[-i]) + separator
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 731, in __call__
    casting=self.casting)
TypeError: ufunc 'remainder' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''

======================================================================
ERROR: test_less_MM_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1517, in test_template
    self._check_loop(fn, ufunc, loop)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1474, in _check_loop
    self._check_ufunc_with_dtypes(fn, ufunc, letter_types)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1501, in _check_ufunc_with_dtypes
    msg = msg.format(ufunc.__name__, c_args, prec, py_arg, c_arg)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/numeric.py", line 1807, in array_repr
    ', ', "array(")
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 447, in array2string
    separator, prefix, formatter=formatter)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 325, in _array2string
    _summaryEdgeItems, summary_insert)[:-1]
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 493, in _formatArray
    word = format_function(a[-i]) + separator
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 731, in __call__
    casting=self.casting)
TypeError: ufunc 'remainder' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''

======================================================================
ERROR: test_less_equal_MM_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1517, in test_template
    self._check_loop(fn, ufunc, loop)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1474, in _check_loop
    self._check_ufunc_with_dtypes(fn, ufunc, letter_types)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1501, in _check_ufunc_with_dtypes
    msg = msg.format(ufunc.__name__, c_args, prec, py_arg, c_arg)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/numeric.py", line 1807, in array_repr
    ', ', "array(")
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 447, in array2string
    separator, prefix, formatter=formatter)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 325, in _array2string
    _summaryEdgeItems, summary_insert)[:-1]
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 493, in _formatArray
    word = format_function(a[-i]) + separator
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 731, in __call__
    casting=self.casting)
TypeError: ufunc 'remainder' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''

======================================================================
ERROR: test_maximum_MM_M (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1517, in test_template
    self._check_loop(fn, ufunc, loop)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1474, in _check_loop
    self._check_ufunc_with_dtypes(fn, ufunc, letter_types)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1501, in _check_ufunc_with_dtypes
    msg = msg.format(ufunc.__name__, c_args, prec, py_arg, c_arg)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/numeric.py", line 1807, in array_repr
    ', ', "array(")
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 447, in array2string
    separator, prefix, formatter=formatter)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 325, in _array2string
    _summaryEdgeItems, summary_insert)[:-1]
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 493, in _formatArray
    word = format_function(a[-i]) + separator
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 731, in __call__
    casting=self.casting)
TypeError: ufunc 'remainder' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''

======================================================================
ERROR: test_minimum_MM_M (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1517, in test_template
    self._check_loop(fn, ufunc, loop)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1474, in _check_loop
    self._check_ufunc_with_dtypes(fn, ufunc, letter_types)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1501, in _check_ufunc_with_dtypes
    msg = msg.format(ufunc.__name__, c_args, prec, py_arg, c_arg)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/numeric.py", line 1807, in array_repr
    ', ', "array(")
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 447, in array2string
    separator, prefix, formatter=formatter)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 325, in _array2string
    _summaryEdgeItems, summary_insert)[:-1]
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 493, in _formatArray
    word = format_function(a[-i]) + separator
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 731, in __call__
    casting=self.casting)
TypeError: ufunc 'remainder' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''

======================================================================
ERROR: test_not_equal_MM_? (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1517, in test_template
    self._check_loop(fn, ufunc, loop)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1474, in _check_loop
    self._check_ufunc_with_dtypes(fn, ufunc, letter_types)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1501, in _check_ufunc_with_dtypes
    msg = msg.format(ufunc.__name__, c_args, prec, py_arg, c_arg)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/numeric.py", line 1807, in array_repr
    ', ', "array(")
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 447, in array2string
    separator, prefix, formatter=formatter)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 325, in _array2string
    _summaryEdgeItems, summary_insert)[:-1]
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 493, in _formatArray
    word = format_function(a[-i]) + separator
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 731, in __call__
    casting=self.casting)
TypeError: ufunc 'remainder' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''

======================================================================
ERROR: test_subtract (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1719, in test_subtract
    self._check_ufunc_with_dtypes(fn, ufunc, ['M8[s]', 'M8[m]', 'm8[s]'])
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1501, in _check_ufunc_with_dtypes
    msg = msg.format(ufunc.__name__, c_args, prec, py_arg, c_arg)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/numeric.py", line 1807, in array_repr
    ', ', "array(")
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 447, in array2string
    separator, prefix, formatter=formatter)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 325, in _array2string
    _summaryEdgeItems, summary_insert)[:-1]
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 493, in _formatArray
    word = format_function(a[-i]) + separator
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 731, in __call__
    casting=self.casting)
TypeError: ufunc 'remainder' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''

======================================================================
ERROR: test_subtract_MM_m (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1517, in test_template
    self._check_loop(fn, ufunc, loop)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1474, in _check_loop
    self._check_ufunc_with_dtypes(fn, ufunc, letter_types)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1501, in _check_ufunc_with_dtypes
    msg = msg.format(ufunc.__name__, c_args, prec, py_arg, c_arg)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/numeric.py", line 1807, in array_repr
    ', ', "array(")
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 447, in array2string
    separator, prefix, formatter=formatter)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 325, in _array2string
    _summaryEdgeItems, summary_insert)[:-1]
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 493, in _formatArray
    word = format_function(a[-i]) + separator
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 731, in __call__
    casting=self.casting)
TypeError: ufunc 'remainder' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''

======================================================================
ERROR: test_subtract_Mm_M (numba.tests.test_ufuncs.TestLoopTypesDatetimeNoPython)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1517, in test_template
    self._check_loop(fn, ufunc, loop)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1474, in _check_loop
    self._check_ufunc_with_dtypes(fn, ufunc, letter_types)
  File "/home/graham/pypy/numba/numba/tests/test_ufuncs.py", line 1501, in _check_ufunc_with_dtypes
    msg = msg.format(ufunc.__name__, c_args, prec, py_arg, c_arg)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/numeric.py", line 1807, in array_repr
    ', ', "array(")
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 447, in array2string
    separator, prefix, formatter=formatter)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 325, in _array2string
    _summaryEdgeItems, summary_insert)[:-1]
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 493, in _formatArray
    word = format_function(a[-i]) + separator
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/arrayprint.py", line 731, in __call__
    casting=self.casting)
TypeError: ufunc 'remainder' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''

======================================================================
ERROR: test_broadcast_implicit_output_npm_nrt (numba.tests.test_ufuncs.TestUFuncs)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 243L != 162L

======================================================================
ERROR: test_implicit_output_layout_binary (numba.tests.test_ufuncs.TestUFuncs)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 27L != 18L

======================================================================
ERROR: test_implicit_output_layout_unary (numba.tests.test_ufuncs.TestUFuncs)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 6L != 3L

======================================================================
ERROR: test_float_fields (numba.tests.test_cgutils.StructureTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_cgutils.py", line 121, in test_float_fields
    inst.b = lc.Constant.real(lc.Type.float(), 4.56)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 24, in __exit__
    self.gen.next()
  File "/home/graham/pypy/numba/numba/tests/test_cgutils.py", line 95, in run_simple_struct_test
    yield context, builder, inst
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 24, in __exit__
    self.gen.next()
  File "/home/graham/pypy/numba/numba/tests/test_cgutils.py", line 83, in run_struct_access
    call(self.get_bytearray_addr(buf))
  File "/home/graham/pypy/numba/numba/tests/test_cgutils.py", line 60, in get_bytearray_addr
    ba_as_string.argtypes = [ctypes.py_object]
NameError: global name 'ba_as_string' is not defined

======================================================================
ERROR: test_int_fields (numba.tests.test_cgutils.StructureTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_cgutils.py", line 110, in test_int_fields
    inst.b = lc.Constant.int(lc.Type.int(16), 0xABCD)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 24, in __exit__
    self.gen.next()
  File "/home/graham/pypy/numba/numba/tests/test_cgutils.py", line 95, in run_simple_struct_test
    yield context, builder, inst
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 24, in __exit__
    self.gen.next()
  File "/home/graham/pypy/numba/numba/tests/test_cgutils.py", line 83, in run_struct_access
    call(self.get_bytearray_addr(buf))
  File "/home/graham/pypy/numba/numba/tests/test_cgutils.py", line 60, in get_bytearray_addr
    ba_as_string.argtypes = [ctypes.py_object]
NameError: global name 'ba_as_string' is not defined

======================================================================
ERROR: test_reflect_clean (numba.tests.test_lists.TestListReflection)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_lists.py", line 864, in test_reflect_clean
    cfunc(l)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
RuntimeError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy

======================================================================
ERROR: test_reflect_conditional (numba.tests.test_lists.TestListReflection)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_lists.py", line 825, in test_reflect_conditional
    self.check_reflection(reflect_conditional)
  File "/home/graham/pypy/numba/numba/tests/test_lists.py", line 814, in check_reflection
    with self.assertRefCount(got, src):
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 17, in __enter__
    return self.gen.next()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 114, in assertRefCount
    old_refcounts = [sys.getrefcount(x) for x in objects]
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_reflect_exception (numba.tests.test_lists.TestListReflection)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_lists.py", line 835, in test_reflect_exception
    with self.assertRefCount(l):
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 17, in __enter__
    return self.gen.next()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 114, in assertRefCount
    old_refcounts = [sys.getrefcount(x) for x in objects]
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_reflect_same_list (numba.tests.test_lists.TestListReflection)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_lists.py", line 851, in test_reflect_same_list
    got = cfunc(clist, clist)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
RuntimeError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy

======================================================================
ERROR: test_reflect_simple (numba.tests.test_lists.TestListReflection)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_lists.py", line 822, in test_reflect_simple
    self.check_reflection(reflect_simple)
  File "/home/graham/pypy/numba/numba/tests/test_lists.py", line 814, in check_reflection
    with self.assertRefCount(got, src):
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 17, in __enter__
    return self.gen.next()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 114, in assertRefCount
    old_refcounts = [sys.getrefcount(x) for x in objects]
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_list_passing (numba.tests.test_lists.TestLists)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_lists.py", line 688, in test_list_passing
    self.assertPreciseEqual(outer(5), (5, 4))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 308, in _compile_for_args
    raise e
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x00000000163f84b8>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
InternalError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy
[1] During: resolving callee type: type(CPUDispatcher(<function inner at 0x000000001a2e4020>))
[2] During: typing of call at /home/graham/pypy/numba/numba/tests/test_lists.py (686)
--%<-----------------------------------------------------------------

File "numba/tests/test_lists.py", line 686

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x00000000163f84b8>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
InternalError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy
[1] During: resolving callee type: type(CPUDispatcher(<function inner at 0x000000001a2e4020>))
[2] During: typing of call at /home/graham/pypy/numba/numba/tests/test_lists.py (686)
--%<-----------------------------------------------------------------

File "numba/tests/test_lists.py", line 686

======================================================================
ERROR: test_errors (numba.tests.test_lists.TestUnboxing)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_lists.py", line 781, in test_errors
    cfunc(lst)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
RuntimeError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy

======================================================================
ERROR: test_list_inside_tuple (numba.tests.test_lists.TestUnboxing)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_lists.py", line 767, in test_list_inside_tuple
    check((1, [2, 3, 4]))
  File "/home/graham/pypy/numba/numba/tests/test_lists.py", line 749, in check
    got = cfunc(arg)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
RuntimeError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 489, in unbox_tuple
    native = c.unbox(eltype, elem)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 68, in unbox
    return self.pyapi.to_native_value(typ, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy

======================================================================
ERROR: test_list_of_tuples_inside_tuple (numba.tests.test_lists.TestUnboxing)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_lists.py", line 771, in test_list_of_tuples_inside_tuple
    check((1, [(2,), (3,)]))
  File "/home/graham/pypy/numba/numba/tests/test_lists.py", line 749, in check
    got = cfunc(arg)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
RuntimeError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 489, in unbox_tuple
    native = c.unbox(eltype, elem)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 68, in unbox
    return self.pyapi.to_native_value(typ, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy

======================================================================
ERROR: test_numbers (numba.tests.test_lists.TestUnboxing)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_lists.py", line 755, in test_numbers
    check([1, 2])
  File "/home/graham/pypy/numba/numba/tests/test_lists.py", line 749, in check
    got = cfunc(arg)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
RuntimeError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy

======================================================================
ERROR: test_tuples (numba.tests.test_lists.TestUnboxing)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_lists.py", line 760, in test_tuples
    check([(1, 2), (3, 4)])
  File "/home/graham/pypy/numba/numba/tests/test_lists.py", line 749, in check
    got = cfunc(arg)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 369, in compile_extra
    return self.compile_bytecode(bc, func_attr=self.func_attr)
  File "/home/graham/pypy/numba/numba/compiler.py", line 378, in compile_bytecode
    return self._compile_bytecode()
  File "/home/graham/pypy/numba/numba/compiler.py", line 690, in _compile_bytecode
    return self._compile_core()
  File "/home/graham/pypy/numba/numba/compiler.py", line 677, in _compile_core
    res = pm.run(self.status)
  File "/home/graham/pypy/numba/numba/compiler.py", line 257, in run
    raise patched_exception
RuntimeError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 617, in stage_nopython_backend
    self._backend(lowerfn, objectmode=False)
  File "/home/graham/pypy/numba/numba/compiler.py", line 572, in _backend
    lowered = lowerfn()
  File "/home/graham/pypy/numba/numba/compiler.py", line 559, in backend_nopython_mode
    self.flags)
  File "/home/graham/pypy/numba/numba/compiler.py", line 847, in native_lowering_stage
    lower.create_cpython_wrapper(flags.release_gil)
  File "/home/graham/pypy/numba/numba/lowering.py", line 213, in create_cpython_wrapper
    release_gil=release_gil)
  File "/home/graham/pypy/numba/numba/targets/cpu.py", line 136, in create_cpython_wrapper
    builder.build()
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 122, in build
    self.build_wrapper(api, builder, closure, args, kws)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 155, in build_wrapper
    val = cleanup_manager.add_arg(builder.load(obj), ty)
  File "/home/graham/pypy/numba/numba/callwrapper.py", line 32, in add_arg
    native = self.api.to_native_value(ty, obj)
  File "/home/graham/pypy/numba/numba/pythonapi.py", line 1335, in to_native_value
    return impl(typ, obj, c)
  File "/home/graham/pypy/numba/numba/targets/boxing.py", line 606, in unbox_list
    raise RuntimeError('Not supported on PyPy')
RuntimeError: Not supported on PyPy

Failed at nopython (nopython mode backend)
Not supported on PyPy

======================================================================
ERROR: test_cleanup_buffer (numba.tests.test_conversion.TestConversion)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_conversion.py", line 202, in test_cleanup_buffer
    self.check_argument_cleanup(types.Buffer(types.intc, 1, 'C'), mem)
  File "/home/graham/pypy/numba/numba/tests/test_conversion.py", line 187, in check_argument_cleanup
    with self.assertRefCount(*objects):
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 17, in __enter__
    return self.gen.next()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 114, in assertRefCount
    old_refcounts = [sys.getrefcount(x) for x in objects]
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_cleanup_optional (numba.tests.test_conversion.TestConversion)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_conversion.py", line 217, in test_cleanup_optional
    self.check_argument_cleanup(tp, mem)
  File "/home/graham/pypy/numba/numba/tests/test_conversion.py", line 187, in check_argument_cleanup
    with self.assertRefCount(*objects):
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 17, in __enter__
    return self.gen.next()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 114, in assertRefCount
    old_refcounts = [sys.getrefcount(x) for x in objects]
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_cleanup_record (numba.tests.test_conversion.TestConversion)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_conversion.py", line 207, in test_cleanup_record
    self.check_argument_cleanup(numpy_support.from_dtype(dtype), recarr[0])
  File "/home/graham/pypy/numba/numba/tests/test_conversion.py", line 187, in check_argument_cleanup
    with self.assertRefCount(*objects):
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 17, in __enter__
    return self.gen.next()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 114, in assertRefCount
    old_refcounts = [sys.getrefcount(x) for x in objects]
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_cleanup_tuple (numba.tests.test_conversion.TestConversion)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_conversion.py", line 212, in test_cleanup_tuple
    self.check_argument_cleanup(tp, (mem, mem))
  File "/home/graham/pypy/numba/numba/tests/test_conversion.py", line 187, in check_argument_cleanup
    with self.assertRefCount(*objects):
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 17, in __enter__
    return self.gen.next()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 114, in assertRefCount
    old_refcounts = [sys.getrefcount(x) for x in objects]
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_multiple_args_records (numba.tests.test_conversion.TestConversion)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_conversion.py", line 154, in test_multiple_args_records
    with self.assertRefCount(st1):
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 17, in __enter__
    return self.gen.next()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 114, in assertRefCount
    old_refcounts = [sys.getrefcount(x) for x in objects]
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_overlap1 (numba.tests.test_overlap.TestArrayOverlap)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 98, in test_overlap1
    self.check_overlap_with_k(array_overlap1, min_ndim=1)
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 95, in check_overlap_with_k
    self.check_overlap(pyfunc, min_ndim=min_ndim, have_k_argument=True)
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 90, in check_overlap
    check(pyfunc, cfunc, pydest, cdest, dict(k=k))
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 77, in check
    cfunc(cdest, cdest, **kwargs)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
NotImplementedError: offset=0 opcode=0xcc opname=JUMP_IF_NOT_DEBUG

======================================================================
ERROR: test_overlap11 (numba.tests.test_overlap.TestArrayOverlap)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 116, in test_overlap11
    self.check_overlap(array_overlap11, min_ndim=1)
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 92, in check_overlap
    check(pyfunc, cfunc, pydest, cdest, {})
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 77, in check
    cfunc(cdest, cdest, **kwargs)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
NotImplementedError: offset=0 opcode=0xcc opname=JUMP_IF_NOT_DEBUG

======================================================================
ERROR: test_overlap12 (numba.tests.test_overlap.TestArrayOverlap)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 119, in test_overlap12
    self.check_overlap(array_overlap12, min_ndim=1)
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 92, in check_overlap
    check(pyfunc, cfunc, pydest, cdest, {})
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 77, in check
    cfunc(cdest, cdest, **kwargs)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
NotImplementedError: offset=0 opcode=0xcc opname=JUMP_IF_NOT_DEBUG

======================================================================
ERROR: test_overlap13 (numba.tests.test_overlap.TestArrayOverlap)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 122, in test_overlap13
    self.check_overlap(array_overlap13, min_ndim=2)
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 92, in check_overlap
    check(pyfunc, cfunc, pydest, cdest, {})
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 77, in check
    cfunc(cdest, cdest, **kwargs)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
NotImplementedError: offset=0 opcode=0xcc opname=JUMP_IF_NOT_DEBUG

======================================================================
ERROR: test_overlap14 (numba.tests.test_overlap.TestArrayOverlap)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 125, in test_overlap14
    self.check_overlap(array_overlap14, min_ndim=2)
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 92, in check_overlap
    check(pyfunc, cfunc, pydest, cdest, {})
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 77, in check
    cfunc(cdest, cdest, **kwargs)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
NotImplementedError: offset=0 opcode=0xcc opname=JUMP_IF_NOT_DEBUG

======================================================================
ERROR: test_overlap15 (numba.tests.test_overlap.TestArrayOverlap)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 128, in test_overlap15
    self.check_overlap(array_overlap15, min_ndim=1)
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 92, in check_overlap
    check(pyfunc, cfunc, pydest, cdest, {})
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 77, in check
    cfunc(cdest, cdest, **kwargs)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
NotImplementedError: offset=0 opcode=0xcc opname=JUMP_IF_NOT_DEBUG

======================================================================
ERROR: test_overlap16 (numba.tests.test_overlap.TestArrayOverlap)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 131, in test_overlap16
    self.check_overlap(array_overlap16, min_ndim=1)
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 92, in check_overlap
    check(pyfunc, cfunc, pydest, cdest, {})
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 77, in check
    cfunc(cdest, cdest, **kwargs)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
NotImplementedError: offset=0 opcode=0xcc opname=JUMP_IF_NOT_DEBUG

======================================================================
ERROR: test_overlap2 (numba.tests.test_overlap.TestArrayOverlap)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 101, in test_overlap2
    self.check_overlap_with_k(array_overlap2, min_ndim=1)
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 95, in check_overlap_with_k
    self.check_overlap(pyfunc, min_ndim=min_ndim, have_k_argument=True)
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 90, in check_overlap
    check(pyfunc, cfunc, pydest, cdest, dict(k=k))
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 77, in check
    cfunc(cdest, cdest, **kwargs)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
NotImplementedError: offset=0 opcode=0xcc opname=JUMP_IF_NOT_DEBUG

======================================================================
ERROR: test_overlap3 (numba.tests.test_overlap.TestArrayOverlap)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 104, in test_overlap3
    self.check_overlap_with_k(array_overlap3, min_ndim=2)
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 95, in check_overlap_with_k
    self.check_overlap(pyfunc, min_ndim=min_ndim, have_k_argument=True)
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 90, in check_overlap
    check(pyfunc, cfunc, pydest, cdest, dict(k=k))
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 77, in check
    cfunc(cdest, cdest, **kwargs)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
NotImplementedError: offset=0 opcode=0xcc opname=JUMP_IF_NOT_DEBUG

======================================================================
ERROR: test_overlap4 (numba.tests.test_overlap.TestArrayOverlap)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 107, in test_overlap4
    self.check_overlap_with_k(array_overlap4, min_ndim=2)
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 95, in check_overlap_with_k
    self.check_overlap(pyfunc, min_ndim=min_ndim, have_k_argument=True)
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 90, in check_overlap
    check(pyfunc, cfunc, pydest, cdest, dict(k=k))
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 77, in check
    cfunc(cdest, cdest, **kwargs)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
NotImplementedError: offset=0 opcode=0xcc opname=JUMP_IF_NOT_DEBUG

======================================================================
ERROR: test_overlap5 (numba.tests.test_overlap.TestArrayOverlap)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 110, in test_overlap5
    self.check_overlap_with_k(array_overlap5, min_ndim=1)
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 95, in check_overlap_with_k
    self.check_overlap(pyfunc, min_ndim=min_ndim, have_k_argument=True)
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 90, in check_overlap
    check(pyfunc, cfunc, pydest, cdest, dict(k=k))
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 77, in check
    cfunc(cdest, cdest, **kwargs)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
NotImplementedError: offset=0 opcode=0xcc opname=JUMP_IF_NOT_DEBUG

======================================================================
ERROR: test_overlap6 (numba.tests.test_overlap.TestArrayOverlap)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 113, in test_overlap6
    self.check_overlap_with_k(array_overlap6, min_ndim=1)
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 95, in check_overlap_with_k
    self.check_overlap(pyfunc, min_ndim=min_ndim, have_k_argument=True)
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 90, in check_overlap
    check(pyfunc, cfunc, pydest, cdest, dict(k=k))
  File "/home/graham/pypy/numba/numba/tests/test_overlap.py", line 77, in check
    cfunc(cdest, cdest, **kwargs)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 285, in _compile_for_args
    return self.compile(tuple(argtypes))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
NotImplementedError: offset=0 opcode=0xcc opname=JUMP_IF_NOT_DEBUG

======================================================================
ERROR: test_jit_inner_function (numba.tests.test_closure.TestClosure)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_closure.py", line 89, in test_jit_inner_function
    self.run_jit_inner_function(forceobj=True)
  File "/home/graham/pypy/numba/numba/tests/test_closure.py", line 85, in run_jit_inner_function
    with self.assertRefCount(c_do_math, c_mult_10):
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 17, in __enter__
    return self.gen.next()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 114, in assertRefCount
    old_refcounts = [sys.getrefcount(x) for x in objects]
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_jit_inner_function_npm (numba.tests.test_closure.TestClosure)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_closure.py", line 92, in test_jit_inner_function_npm
    self.run_jit_inner_function(nopython=True)
  File "/home/graham/pypy/numba/numba/tests/test_closure.py", line 85, in run_jit_inner_function
    with self.assertRefCount(c_do_math, c_mult_10):
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 17, in __enter__
    return self.gen.next()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 114, in assertRefCount
    old_refcounts = [sys.getrefcount(x) for x in objects]
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_assertRefCount (numba.tests.test_support.TestMisc)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_support.py", line 326, in test_assertRefCount
    with self.assertRefCount(x, y):
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 17, in __enter__
    return self.gen.next()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 114, in assertRefCount
    old_refcounts = [sys.getrefcount(x) for x in objects]
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_record_args (numba.tests.test_record_dtype.TestRecordDtype)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 481, in test_record_args
    self._test_record_args(False)
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 441, in _test_record_args
    old_refcnt = sys.getrefcount(nbval)
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_record_args_reverse (numba.tests.test_record_dtype.TestRecordDtype)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 484, in test_record_args_reverse
    self._test_record_args(True)
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 441, in _test_record_args
    old_refcnt = sys.getrefcount(nbval)
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_record_read_2d_array (numba.tests.test_record_dtype.TestRecordDtype)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 585, in test_record_read_2d_array
    res = cfunc(nbval[0])
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_record_read_array (numba.tests.test_record_dtype.TestRecordDtype)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 567, in test_record_read_array
    res = cfunc(nbval[0])
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_record_return (numba.tests.test_record_dtype.TestRecordDtype)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 611, in test_record_return
    old_refcnt = sys.getrefcount(nbary)
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_record_two_arrays (numba.tests.test_record_dtype.TestRecordDtype)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 660, in test_record_two_arrays
    self.assertEqual(cfunc(rec), pyfunc(rec))
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_record_write_2d_array (numba.tests.test_record_dtype.TestRecordDtype)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 549, in test_record_write_2d_array
    cfunc(nbval[0])
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_record_write_array (numba.tests.test_record_dtype.TestRecordDtype)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 532, in test_record_write_array
    cfunc(nbval[0])
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_set_record (numba.tests.test_record_dtype.TestRecordDtype)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 422, in test_set_record
    pyfunc(expect, i, j)
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 110, in set_record
    ary[i] = ary[j]
TypeError: expected a readable buffer object

======================================================================
ERROR: test_two_distinct_records (numba.tests.test_record_dtype.TestRecordDtype)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 521, in test_two_distinct_records
    got = cfunc(nbval1, nbval2)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_two_records (numba.tests.test_record_dtype.TestRecordDtype)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 505, in test_two_records
    got = cfunc(nbval1, nbval2)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_record_args (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 481, in test_record_args
    self._test_record_args(False)
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 441, in _test_record_args
    old_refcnt = sys.getrefcount(nbval)
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_record_args_reverse (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 484, in test_record_args_reverse
    self._test_record_args(True)
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 441, in _test_record_args
    old_refcnt = sys.getrefcount(nbval)
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_record_read_2d_array (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 585, in test_record_read_2d_array
    res = cfunc(nbval[0])
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_record_read_array (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 567, in test_record_read_array
    res = cfunc(nbval[0])
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_record_return (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 611, in test_record_return
    old_refcnt = sys.getrefcount(nbary)
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_record_two_arrays (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 660, in test_record_two_arrays
    self.assertEqual(cfunc(rec), pyfunc(rec))
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_record_write_2d_array (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 549, in test_record_write_2d_array
    cfunc(nbval[0])
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_record_write_array (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 532, in test_record_write_array
    cfunc(nbval[0])
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_set_record (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 422, in test_set_record
    pyfunc(expect, i, j)
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 110, in set_record
    ary[i] = ary[j]
TypeError: expected a readable buffer object

======================================================================
ERROR: test_two_distinct_records (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 521, in test_two_distinct_records
    got = cfunc(nbval1, nbval2)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_two_records (numba.tests.test_record_dtype.TestRecordDtypeWithDispatcher)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 505, in test_two_records
    got = cfunc(nbval1, nbval2)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_record_args (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 481, in test_record_args
    self._test_record_args(False)
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 441, in _test_record_args
    old_refcnt = sys.getrefcount(nbval)
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_record_args_reverse (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 484, in test_record_args_reverse
    self._test_record_args(True)
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 441, in _test_record_args
    old_refcnt = sys.getrefcount(nbval)
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_record_read_2d_array (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 585, in test_record_read_2d_array
    res = cfunc(nbval[0])
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_record_read_array (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 567, in test_record_read_array
    res = cfunc(nbval[0])
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_record_return (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 611, in test_record_return
    old_refcnt = sys.getrefcount(nbary)
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_record_two_arrays (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 660, in test_record_two_arrays
    self.assertEqual(cfunc(rec), pyfunc(rec))
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_record_write_2d_array (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 549, in test_record_write_2d_array
    cfunc(nbval[0])
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_record_write_array (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 532, in test_record_write_array
    cfunc(nbval[0])
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_set_record (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 422, in test_set_record
    pyfunc(expect, i, j)
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 110, in set_record
    ary[i] = ary[j]
TypeError: expected a readable buffer object

======================================================================
ERROR: test_two_distinct_records (numba.tests.test_record_dtype.TestRecordDtypeWithStructArrays)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 521, in test_two_distinct_records
    got = cfunc(nbval1, nbval2)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_record_args (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 481, in test_record_args
    self._test_record_args(False)
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 441, in _test_record_args
    old_refcnt = sys.getrefcount(nbval)
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_record_args_reverse (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 484, in test_record_args_reverse
    self._test_record_args(True)
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 441, in _test_record_args
    old_refcnt = sys.getrefcount(nbval)
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_record_read_2d_array (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 585, in test_record_read_2d_array
    res = cfunc(nbval[0])
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_record_read_array (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 567, in test_record_read_array
    res = cfunc(nbval[0])
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_record_return (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 611, in test_record_return
    old_refcnt = sys.getrefcount(nbary)
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_record_two_arrays (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 660, in test_record_two_arrays
    self.assertEqual(cfunc(rec), pyfunc(rec))
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_record_write_2d_array (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 549, in test_record_write_2d_array
    cfunc(nbval[0])
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_record_write_array (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 532, in test_record_write_array
    cfunc(nbval[0])
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_set_record (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 422, in test_set_record
    pyfunc(expect, i, j)
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 110, in set_record
    ary[i] = ary[j]
TypeError: expected a readable buffer object

======================================================================
ERROR: test_two_distinct_records (numba.tests.test_record_dtype.TestRecordDtypeWithStructArraysAndDispatcher)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_record_dtype.py", line 521, in test_two_distinct_records
    got = cfunc(nbval1, nbval2)
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_nrt_gen0_no_iter (numba.tests.test_generators.TestNrtArrayGen)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_generators.py", line 447, in test_nrt_gen0_no_iter
    self.assertEqual(sys.getrefcount(py_ary),
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_nrt_gen0_no_iter (numba.tests.test_generators.TestNrtArrayGen)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
ERROR: test_nrt_nested_gen (numba.tests.test_generators.TestNrtNestedGen)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_generators.py", line 480, in test_nrt_nested_gen
    self.assertEqual(sys.getrefcount(py_res),
AttributeError: 'module' object has no attribute 'getrefcount'

======================================================================
ERROR: test_cmp_op (numba.tests.test_array_exprs.TestArrayExpressions)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 12L != 10L

======================================================================
ERROR: test_common_subexpressions (numba.tests.test_array_exprs.TestArrayExpressions)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 19L != 17L

======================================================================
ERROR: test_complex_subexpression (numba.tests.test_array_exprs.TestArrayExpressions)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 20L != 18L

======================================================================
ERROR: test_complicated_expr (numba.tests.test_array_exprs.TestArrayExpressions)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 16L != 14L

======================================================================
ERROR: test_simple_expr (numba.tests.test_array_exprs.TestArrayExpressions)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 14L != 11L

======================================================================
ERROR: test_trivial_expr (numba.tests.test_array_exprs.TestArrayExpressions)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 4L != 2L

======================================================================
ERROR: test_ufunc_and_dufunc_calls (numba.tests.test_array_exprs.TestArrayExpressions)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 9L != 7L

======================================================================
ERROR: test_bitwise_arrayexpr (numba.tests.test_array_exprs.TestRewriteIssues)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 3L != 2L

======================================================================
ERROR: test_issue_1264 (numba.tests.test_array_exprs.TestRewriteIssues)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 5052L != 5051L

======================================================================
ERROR: test_unary_arrayexpr (numba.tests.test_array_exprs.TestRewriteIssues)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 2L != 1L

======================================================================
ERROR: test_division_by_zero (numba.tests.test_array_exprs.TestSemantics)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 4L != 3L

======================================================================
ERROR: test_buffers (numba.tests.test_typeof.TestFingerprint)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_typeof.py", line 450, in test_buffers
    distinct.add(compute_fingerprint(memoryview(b'')))
NotImplementedError: cannot compute type fingerprint for value

======================================================================
ERROR: test_array_cumprod (numba.tests.test_array_reductions.TestArrayReductions)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 6L != 3L

======================================================================
ERROR: test_array_cumprod_global (numba.tests.test_array_reductions.TestArrayReductions)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 6L != 3L

======================================================================
ERROR: test_array_cumsum (numba.tests.test_array_reductions.TestArrayReductions)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 6L != 3L

======================================================================
ERROR: test_array_cumsum_global (numba.tests.test_array_reductions.TestArrayReductions)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 6L != 3L

======================================================================
ERROR: test_cumprod_magnitude (numba.tests.test_array_reductions.TestArrayReductions)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 12L != 6L

======================================================================
ERROR: test_cumsum_magnitude (numba.tests.test_array_reductions.TestArrayReductions)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 12L != 6L

======================================================================
ERROR: test_cumsum_npdatetime (numba.tests.test_array_reductions.TestArrayReductions)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 12L != 6L

======================================================================
ERROR: test_median_basic (numba.tests.test_array_reductions.TestArrayReductions)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_array_reductions.py", line 323, in test_median_basic
    self.check_median_basic(pyfunc, variations)
  File "/home/graham/pypy/numba/numba/tests/test_array_reductions.py", line 298, in check_median_basic
    check_odd(a)
  File "/home/graham/pypy/numba/numba/tests/test_array_reductions.py", line 293, in check_odd
    check(a)
  File "/home/graham/pypy/numba/numba/tests/test_array_reductions.py", line 288, in check
    got = cfunc(arr)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 308, in _compile_for_args
    raise e
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x000000000494b168>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=9 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function _select_two at 0x00007f76099a6d40>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (505)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 505

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x000000000494b168>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=9 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function _select_two at 0x00007f76099a6d40>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (505)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 505
[1] During: resolving callee type: type(CPUDispatcher(<function _median_inner at 0x00007f76099a6db8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (520)

Failed at nopython (nopython frontend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x000000000494b168>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=9 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function _select_two at 0x00007f76099a6d40>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (505)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 505

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x000000000494b168>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=9 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function _select_two at 0x00007f76099a6d40>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (505)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 505
[1] During: resolving callee type: type(CPUDispatcher(<function _median_inner at 0x00007f76099a6db8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (520)
[3] During: resolving callee type: Function(<unbound method OverloadTemplate_median.median>)
[4] During: typing of call at /home/graham/pypy/numba/numba/tests/test_array_reductions.py (93)

Failed at nopython (nopython frontend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x000000000494b168>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=9 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function _select_two at 0x00007f76099a6d40>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (505)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 505

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x000000000494b168>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=9 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function _select_two at 0x00007f76099a6d40>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (505)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 505
[1] During: resolving callee type: type(CPUDispatcher(<function _median_inner at 0x00007f76099a6db8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (520)

Failed at nopython (nopython frontend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x000000000494b168>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=9 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function _select_two at 0x00007f76099a6d40>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (505)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 505

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x000000000494b168>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=9 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function _select_two at 0x00007f76099a6d40>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (505)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 505
[1] During: resolving callee type: type(CPUDispatcher(<function _median_inner at 0x00007f76099a6db8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (520)
[3] During: resolving callee type: Function(<unbound method OverloadTemplate_median.median>)
[4] During: typing of call at /home/graham/pypy/numba/numba/tests/test_array_reductions.py (93)

======================================================================
ERROR: test_median_npdatetime (numba.tests.test_array_reductions.TestArrayReductions)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_array_reductions.py", line 503, in test_median_npdatetime
    self.check_nptimedelta(array_median_global)
  File "/home/graham/pypy/numba/numba/tests/test_array_reductions.py", line 484, in check_nptimedelta
    self._do_check_nptimedelta(pyfunc, arr)
  File "/home/graham/pypy/numba/numba/tests/test_array_reductions.py", line 463, in _do_check_nptimedelta
    self.assertPreciseEqual(cfunc(arr), pyfunc(arr))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 308, in _compile_for_args
    raise e
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x0000000019532d40>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=9 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function _select_two at 0x00007f76099a6d40>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (505)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 505

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x0000000019532d40>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=9 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function _select_two at 0x00007f76099a6d40>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (505)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 505
[1] During: resolving callee type: type(CPUDispatcher(<function _median_inner at 0x00007f76099a6db8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (520)

Failed at nopython (nopython frontend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x0000000019532d40>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=9 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function _select_two at 0x00007f76099a6d40>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (505)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 505

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x0000000019532d40>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=9 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function _select_two at 0x00007f76099a6d40>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (505)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 505
[1] During: resolving callee type: type(CPUDispatcher(<function _median_inner at 0x00007f76099a6db8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (520)
[3] During: resolving callee type: Function(<unbound method OverloadTemplate_median.median>)
[4] During: typing of call at /home/graham/pypy/numba/numba/tests/test_array_reductions.py (93)

Failed at nopython (nopython frontend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x0000000019532d40>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=9 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function _select_two at 0x00007f76099a6d40>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (505)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 505

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x0000000019532d40>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=9 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function _select_two at 0x00007f76099a6d40>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (505)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 505
[1] During: resolving callee type: type(CPUDispatcher(<function _median_inner at 0x00007f76099a6db8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (520)

Failed at nopython (nopython frontend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x0000000019532d40>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=9 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function _select_two at 0x00007f76099a6d40>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (505)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 505

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x0000000019532d40>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=9 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function _select_two at 0x00007f76099a6d40>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (505)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 505
[1] During: resolving callee type: type(CPUDispatcher(<function _median_inner at 0x00007f76099a6db8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (520)
[3] During: resolving callee type: Function(<unbound method OverloadTemplate_median.median>)
[4] During: typing of call at /home/graham/pypy/numba/numba/tests/test_array_reductions.py (93)

======================================================================
ERROR: test_nanmedian_basic (numba.tests.test_array_reductions.TestArrayReductions)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_array_reductions.py", line 341, in test_nanmedian_basic
    self.check_median_basic(pyfunc, variations)
  File "/home/graham/pypy/numba/numba/tests/test_array_reductions.py", line 298, in check_median_basic
    check_odd(a)
  File "/home/graham/pypy/numba/numba/tests/test_array_reductions.py", line 293, in check_odd
    check(a)
  File "/home/graham/pypy/numba/numba/tests/test_array_reductions.py", line 288, in check
    got = cfunc(arr)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 308, in _compile_for_args
    raise e
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x0000000013aa0b80>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=9 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function _select_two at 0x00007f76099a6d40>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (505)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 505

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x0000000013aa0b80>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=9 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function _select_two at 0x00007f76099a6d40>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (505)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 505
[1] During: resolving callee type: type(CPUDispatcher(<function _median_inner at 0x00007f76099a6db8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (540)

Failed at nopython (nopython frontend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x0000000013aa0b80>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=9 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function _select_two at 0x00007f76099a6d40>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (505)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 505

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x0000000013aa0b80>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=9 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function _select_two at 0x00007f76099a6d40>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (505)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 505
[1] During: resolving callee type: type(CPUDispatcher(<function _median_inner at 0x00007f76099a6db8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (540)
[3] During: resolving callee type: Function(<unbound method OverloadTemplate_nanmedian.nanmedian>)
[4] During: typing of call at /home/graham/pypy/numba/numba/tests/test_array_reductions.py (114)

Failed at nopython (nopython frontend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x0000000013aa0b80>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=9 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function _select_two at 0x00007f76099a6d40>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (505)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 505

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x0000000013aa0b80>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=9 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function _select_two at 0x00007f76099a6d40>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (505)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 505
[1] During: resolving callee type: type(CPUDispatcher(<function _median_inner at 0x00007f76099a6db8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (540)

Failed at nopython (nopython frontend)
Caused By:
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run
    stage()
  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend
    self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 828, in type_inference_stage
    infer.propagate()
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 717, in propagate
    raise errors[0]
TypingError: Internal error at <numba.typeinfer.CallConstraint object at 0x0000000013aa0b80>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=9 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function _select_two at 0x00007f76099a6d40>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (505)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 505

Failed at nopython (nopython frontend)
Internal error at <numba.typeinfer.CallConstraint object at 0x0000000013aa0b80>:
--%<-----------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 127, in propagate
    constraint(typeinfer)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/pypy-5.4.1-linux/lib-python/2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/home/graham/pypy/numba/numba/errors.py", line 249, in new_error_context
    six.reraise(type(newerr), newerr, sys.exc_info()[2])
  File "/home/graham/pypy/numba/numba/errors.py", line 243, in new_error_context
    yield
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 372, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 385, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typeinfer.py", line 972, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
  File "/home/graham/pypy/numba/numba/typing/context.py", line 124, in resolve_function_type
    return func.get_call_type(self, args, kws)
  File "/home/graham/pypy/numba/numba/types/functions.py", line 159, in get_call_type
    template, pysig, args, kws = self.dispatcher.get_call_template(args, kws)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 247, in get_call_template
    self.compile(tuple(args))
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 531, in compile
    cres = self._compiler.compile(args, return_type)
  File "/home/graham/pypy/numba/numba/dispatcher.py", line 80, in compile
    flags=flags, locals=self.locals)
  File "/home/graham/pypy/numba/numba/compiler.py", line 725, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/graham/pypy/numba/numba/compiler.py", line 367, in compile_extra
    raise e
InternalError: offset=9 opcode=0xcc opname=JUMP_IF_NOT_DEBUG
[1] During: resolving callee type: type(CPUDispatcher(<function _select_two at 0x00007f76099a6d40>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (505)
--%<-----------------------------------------------------------------

File "numba/targets/arraymath.py", line 505
[1] During: resolving callee type: type(CPUDispatcher(<function _median_inner at 0x00007f76099a6db8>))
[2] During: typing of call at /home/graham/pypy/numba/numba/targets/arraymath.py (540)
[3] During: resolving callee type: Function(<unbound method OverloadTemplate_nanmedian.nanmedian>)
[4] During: typing of call at /home/graham/pypy/numba/numba/tests/test_array_reductions.py (114)

======================================================================
ERROR: test_use_dtype (numba.tests.test_array_attr.TestArrayAttr)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/support.py", line 599, in tearDown
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 2L != 1L

======================================================================
ERROR: test_itemsize (numba.tests.test_array_attr.TestNestedArrayAttr)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_array_attr.py", line 205, in test_itemsize
    self.assertEqual(pyfunc(self.a), cfunc(self.a))
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_ndim (numba.tests.test_array_attr.TestNestedArrayAttr)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_array_attr.py", line 193, in test_ndim
    self.assertEqual(pyfunc(self.a), cfunc(self.a))
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_shape (numba.tests.test_array_attr.TestNestedArrayAttr)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_array_attr.py", line 181, in test_shape
    self.assertEqual(pyfunc(self.a), cfunc(self.a))
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_size (numba.tests.test_array_attr.TestNestedArrayAttr)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_array_attr.py", line 199, in test_size
    self.assertEqual(pyfunc(self.a), cfunc(self.a))
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
ERROR: test_strides (numba.tests.test_array_attr.TestNestedArrayAttr)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_array_attr.py", line 187, in test_strides
    self.assertEqual(pyfunc(self.a), cfunc(self.a))
  File "/home/graham/pypy/pypy-5.4.1-linux/site-packages/numpy/core/records.py", line 234, in __getattribute__
    return nt.void.__getattribute__(self, attr)
TypeError: buffer object expected

======================================================================
FAIL: test_invalid_computation_of_lifetime (numba.tests.test_nrt_refct.TestNrtRefCt)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_nrt_refct.py", line 87, in test_invalid_computation_of_lifetime
    cur_stats.free - init_stats.free)
AssertionError: 2L != 1L

======================================================================
FAIL: test_deserialization (numba.tests.test_extending.TestIntrinsic)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_extending.py", line 599, in test_deserialization
    self.assertEqual(memo_size, len(memo))
AssertionError: 0 != 1

======================================================================
FAIL: test_array_view (numba.tests.test_array_methods.TestArrayMethods)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_array_methods.py", line 258, in test_array_view
    check(arr, np.dtype('int16'))
  File "/home/graham/pypy/numba/numba/tests/test_array_methods.py", line 245, in check
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
FAIL: test_array_reshape (numba.tests.test_array_manipulation.TestArrayManipulation)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_array_manipulation.py", line 131, in test_array_reshape
    check(arr, (4, 6))
  File "/home/graham/pypy/numba/numba/tests/test_array_manipulation.py", line 102, in check
    self.memory_leak_teardown()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 574, in memory_leak_teardown
    self.assert_no_memory_leak()
  File "/home/graham/pypy/numba/numba/tests/support.py", line 583, in assert_no_memory_leak
    self.assertEqual(total_alloc, total_free)
AssertionError: 1L != 0L

======================================================================
FAIL: test_var_swapping (numba.tests.test_ir.TestIRDump)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_ir.py", line 140, in test_var_swapping
    self.check_ir_dump(var_swapping)
  File "/home/graham/pypy/numba/numba/tests/test_ir.py", line 136, in check_ir_dump
    "actual dump:\n%s\n" % (out.getvalue()))
AssertionError: dump might need to be refreshed; here is the actual dump:
label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    c = arg(2, name=c)                       ['c']
    d = arg(3, name=d)                       ['d']
    e = arg(4, name=e)                       ['e']
    b.1 = a                                  ['a', 'b.1']
    del a                                    []
    a.1 = b                                  ['a.1', 'b']
    del b                                    []
    e.1 = d                                  ['d', 'e.1']
    del d                                    []
    d.1 = c                                  ['c', 'd.1']
    del c                                    []
    c.1 = e                                  ['c.1', 'e']
    del e                                    []
    $0.8 = a.1 + b.1                         ['$0.8', 'a.1', 'b.1']
    del b.1                                  []
    del a.1                                  []
    $0.10 = $0.8 + c.1                       ['$0.10', '$0.8', 'c.1']
    del c.1                                  []
    del $0.8                                 []
    $0.12 = $0.10 + d.1                      ['$0.10', '$0.12', 'd.1']
    del d.1                                  []
    del $0.10                                []
    $0.14 = $0.12 + e.1                      ['$0.12', '$0.14', 'e.1']
    del e.1                                  []
    del $0.12                                []
    $0.15 = cast(value=$0.14)                ['$0.14', '$0.15']
    del $0.14                                []
    return $0.15                             ['$0.15']



======================================================================
FAIL: test_from_buffer_error (numba.tests.test_cffi.TestCFFI)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_cffi.py", line 139, in test_from_buffer_error
    str(raises.exception))
AssertionError: 'from_buffer() unsupported on non-contiguous buffers' not found in 'Caused By:\nTraceback (most recent call last):\n  File "/home/graham/pypy/numba/numba/compiler.py", line 249, in run\n    stage()\n  File "/home/graham/pypy/numba/numba/compiler.py", line 476, in stage_nopython_frontend\n    self.locals)\n  File "/home/graham/pypy/numba/numba/compiler.py", line 827, in type_inference_stage\n    infer.build_constraint()\n  File "/home/graham/pypy/numba/numba/typeinfer.py", line 701, in build_constraint\n    self.constrain_statement(inst)\n  File "/home/graham/pypy/numba/numba/typeinfer.py", line 830, in constrain_statement\n    self.typeof_assign(inst)\n  File "/home/graham/pypy/numba/numba/typeinfer.py", line 888, in typeof_assign\n    self.typeof_global(inst, inst.target, value)\n  File "/home/graham/pypy/numba/numba/typeinfer.py", line 976, in typeof_global\n    typ = self.resolve_value_type(inst, gvar.value)\n  File "/home/graham/pypy/numba/numba/typeinfer.py", line 907, in resolve_value_type\n    raise TypingError(msg, loc=inst.loc)\nTypingError: Untyped global name \'vsSin\': cannot determine Numba type of value <FFIFunctionWrapper \'void vsSin(int, float *, float *)\'>\nFile "numba/tests/cffi_usecases.py", line 165\n\nFailed at nopython (nopython frontend)\nUntyped global name \'vsSin\': cannot determine Numba type of value <FFIFunctionWrapper \'void vsSin(int, float *, float *)\'>\nFile "numba/tests/cffi_usecases.py", line 165'

======================================================================
FAIL: test_globals (numba.tests.test_jitclasses.TestJitClass)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 330, in test_globals
    "class members are not yet supported: constant")
AssertionError: 'class members are not yet supported: __new__, __subclasshook__, __class__, constant' != 'class members are not yet supported: constant'

======================================================================
FAIL: test_user_deleter_error (numba.tests.test_jitclasses.TestJitClass)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_jitclasses.py", line 388, in test_user_deleter_error
    "deleter is not supported: value")
AssertionError: 'class members are not yet supported: __new__, __subclasshook__, __class__' != 'deleter is not supported: value'

======================================================================
FAIL: test_global_obj_lifetime (numba.tests.test_func_lifetime.TestFuncLifetime)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_func_lifetime.py", line 97, in test_global_obj_lifetime
    self.check_global_obj_lifetime(forceobj=True)
  File "/home/graham/pypy/numba/numba/tests/test_func_lifetime.py", line 94, in check_global_obj_lifetime
    self.assertEqual([wr() for wr in refs], [None] * len(refs))
AssertionError: Lists differ: [None, <numba.tests.test_func_... != [None, None]

First differing element 1:
<numba.tests.test_func_lifetime.Dummy object at 0x0000000007bab050>
None

- [None, <numba.tests.test_func_lifetime.Dummy object at 0x0000000007bab050>]
+ [None, None]

======================================================================
FAIL: test_meminfo_refct_1 (numba.tests.test_nrt.TestNrtMemInfo)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_nrt.py", line 53, in test_meminfo_refct_1
    self.assertEqual(Dummy.alive, 0)
AssertionError: 1 != 0

======================================================================
FAIL: test_meminfo_refct_2 (numba.tests.test_nrt.TestNrtMemInfo)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_nrt.py", line 72, in test_meminfo_refct_2
    self.assertEqual(Dummy.alive, 0)
AssertionError: 1 != 0

======================================================================
FAIL: test_hypot (numba.tests.test_mathlib.TestMathLib)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_mathlib.py", line 547, in test_hypot
    naive_hypot, val, val)
AssertionError: "overflow encountered in .*_scalars" does not match "overflow encountered in multiply"

======================================================================
FAIL: test_hypot_npm (numba.tests.test_mathlib.TestMathLib)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_mathlib.py", line 551, in test_hypot_npm
    self.test_hypot(flags=no_pyobj_flags)
  File "/home/graham/pypy/numba/numba/tests/test_mathlib.py", line 547, in test_hypot
    naive_hypot, val, val)
AssertionError: "overflow encountered in .*_scalars" does not match "overflow encountered in multiply"

======================================================================
FAIL: test_inf_loop_multiple_back_edge (numba.tests.test_obj_lifetime.TestObjLifetime)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_obj_lifetime.py", line 379, in test_inf_loop_multiple_back_edge
    self.assertEqual(rec.alive, [])
AssertionError: Lists differ: [<numba.tests.test_obj_lifetim... != []

First list contains 1 additional elements.
First extra element 0:
<numba.tests.test_obj_lifetime._Dummy object at 0x000000001cced3d0>

- [<numba.tests.test_obj_lifetime._Dummy object at 0x000000001cced3d0>]
+ []

======================================================================
FAIL: test_looping1 (numba.tests.test_obj_lifetime.TestObjLifetime)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_obj_lifetime.py", line 290, in test_looping1
    self.assertFalse(rec.alive)
AssertionError: [<numba.tests.test_obj_lifetime._Dummy object at 0x00000000163f5f30>, <numba.tests.test_obj_lifetime._Dummy object at 0x00000000163f5f68>, <numba.tests.test_obj_lifetime._Dummy object at 0x00000000163f5fa0>, <numba.tests.test_obj_lifetime._DummyIterator object at 0x000000001dcd8020>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001dcd8058>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001dcd8090>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001dcd80c8>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001dcd8100>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001dcd8138>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001dcd8170>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001dcd81a8>] is not false

======================================================================
FAIL: test_looping2 (numba.tests.test_obj_lifetime.TestObjLifetime)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_obj_lifetime.py", line 302, in test_looping2
    self.assertFalse(rec.alive)
AssertionError: [<numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf777c0>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf777f8>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77830>, <numba.tests.test_obj_lifetime._DummyIterator object at 0x000000001bf77868>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf778a0>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf778d8>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77910>, <numba.tests.test_obj_lifetime._DummyIterator object at 0x000000001bf77948>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77980>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf779b8>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf779f0>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77a28>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77a60>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77a98>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77ad0>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77b08>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77b40>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77b78>, <numba.tests.test_obj_lifetime._DummyIterator object at 0x000000001bf77bb0>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77be8>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77c20>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77c58>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77c90>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77cc8>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77d00>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77d38>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77d70>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77da8>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77de0>, <numba.tests.test_obj_lifetime._DummyIterator object at 0x000000001bf77e18>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77e50>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77e88>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77ec0>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77ef8>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77f30>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77f68>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001bf77fa0>] is not false

======================================================================
FAIL: test_simple1 (numba.tests.test_obj_lifetime.TestObjLifetime)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_obj_lifetime.py", line 278, in test_simple1
    self.assertFalse(rec.alive)
AssertionError: [<numba.tests.test_obj_lifetime._Dummy object at 0x000000001a383980>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001a3839b8>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001a3839f0>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001a383a28>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001a383a60>] is not false

======================================================================
FAIL: test_simple2 (numba.tests.test_obj_lifetime.TestObjLifetime)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_obj_lifetime.py", line 285, in test_simple2
    self.assertFalse(rec.alive)
AssertionError: [<numba.tests.test_obj_lifetime._Dummy object at 0x000000001b17fde0>, <numba.tests.test_obj_lifetime._Dummy object at 0x000000001b17fe18>] is not false

======================================================================
FAIL: test_profiler (numba.tests.test_profiler.TestProfiler)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_profiler.py", line 51, in test_profiler
    self.check_profiler_dot(dot)
  File "/home/graham/pypy/numba/numba/tests/test_profiler.py", line 48, in check_profiler_dot
    self.assertIn(expected_key, stats.stats)
AssertionError: ('test_profiler.py', 14, 'dot') not found in {('~', 0, "<method 'disable' of '_lsprof.Profiler' objects>"): (1, 1, 3.195068470532028e-06, 3.195068470532028e-06, {})}

======================================================================
FAIL: test_append_heterogenous (numba.tests.test_lists.TestLists)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_lists.py", line 415, in test_append_heterogenous
    self.check_unary_with_size(list_append_heterogenous, precise=False)
  File "/home/graham/pypy/numba/numba/tests/test_lists.py", line 405, in check_unary_with_size
    eq(cfunc(n), pyfunc(n))
AssertionError: Lists differ: [42.0, 0.0, 5e-324, 1e-323] != [42.0, 0, 1, 2]

First differing element 2:
4.94065645841e-324
1

- [42.0, 0.0, 5e-324, 1e-323]
+ [42.0, 0, 1, 2]

======================================================================
FAIL: test_extend_heterogenous (numba.tests.test_lists.TestLists)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_lists.py", line 422, in test_extend_heterogenous
    self.check_unary_with_size(list_extend_heterogenous, precise=False)
  File "/home/graham/pypy/numba/numba/tests/test_lists.py", line 405, in check_unary_with_size
    eq(cfunc(n), pyfunc(n))
AssertionError: Lists differ: [2.5e-323, 2.08e-322, 123.0] != [5, 42, 123.0]

First differing element 0:
2.47032822921e-323
5

- [2.5e-323, 2.08e-322, 123.0]
+ [5, 42, 123.0]

======================================================================
FAIL: test_library_lifetime (numba.tests.test_codegen.JITCPUCodegenTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_codegen.py", line 157, in test_library_lifetime
    self.assertIs(u(), None)
AssertionError: <Library 'compiled_module' at 0x27b84ad8> is not None

======================================================================
FAIL: test_delattr (numba.tests.test_objects.TestAttributes)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_objects.py", line 60, in test_delattr
    c.x
AssertionError: AttributeError not raised

======================================================================
FAIL: test_delattr_attribute_error (numba.tests.test_objects.TestAttributes)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_objects.py", line 68, in test_delattr_attribute_error
    cfunc(C())
AssertionError: AttributeError not raised

======================================================================
FAIL: test_list_unify1 (numba.tests.test_typeinfer.TestMiscIssues)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_typeinfer.py", line 673, in test_list_unify1
    self.assertPreciseEqual(res, pyfunc(n))
  File "/home/graham/pypy/numba/numba/tests/support.py", line 257, in assertPreciseEqual
    self.fail("when comparing %s and %s: %s" % (first, second, failure_msg))
AssertionError: when comparing 10.0 and 15.0: 10.0 != 15.0

======================================================================
FAIL: test_list_unify2 (numba.tests.test_typeinfer.TestMiscIssues)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_typeinfer.py", line 682, in test_list_unify2
    self.assertEqual(res, pyfunc(3))
AssertionError: Lists differ: [((2+0j), 5e-324), ((1+2j), 1e... != [(2.0, 0), (1, 1.0), (2.0, 2),...

First differing element 0:
((2+0j), 5e-324)
(2.0, 0)

+ [(2.0, 0), (1, 1.0), (2.0, 2), (123j, 42)]
- [((2+0j), 5e-324),
-  ((1+2j), 1e-323),
-  ((6.92403005816824e-310+6.92408477086367e-310j), 4e-322),
-  (123j, 2.08e-322)]

======================================================================
FAIL: test_pow (numba.tests.test_operators.TestMixedInts)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_operators.py", line 1303, in test_pow
    self.run_arith_binop(pyfunc, 'pow', samples)
  File "/home/graham/pypy/numba/numba/tests/test_operators.py", line 1274, in run_arith_binop
    samples, self.signed_pairs, expected_type)
  File "/home/graham/pypy/numba/numba/tests/test_operators.py", line 1251, in run_binary
    **assertPreciseEqualArgs)
  File "/home/graham/pypy/numba/numba/tests/support.py", line 257, in assertPreciseEqual
    self.fail("when comparing %s and %s: %s" % (first, second, failure_msg))
AssertionError: when comparing -1261475310744950487 and -9223372036854775808: -1261475310744950487 != -9223372036854775808 : mismatch for (3, 42) with types (int8, int8)

======================================================================
FAIL: test_pow (numba.tests.test_operators.TestMixedIntsOperatorModule)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/graham/pypy/numba/numba/tests/test_operators.py", line 1303, in test_pow
    self.run_arith_binop(pyfunc, 'pow', samples)
  File "/home/graham/pypy/numba/numba/tests/test_operators.py", line 1274, in run_arith_binop
    samples, self.signed_pairs, expected_type)
  File "/home/graham/pypy/numba/numba/tests/test_operators.py", line 1251, in run_binary
    **assertPreciseEqualArgs)
  File "/home/graham/pypy/numba/numba/tests/support.py", line 257, in assertPreciseEqual
    self.fail("when comparing %s and %s: %s" % (first, second, failure_msg))
AssertionError: when comparing -1261475310744950487 and -9223372036854775808: -1261475310744950487 != -9223372036854775808 : mismatch for (3, 42) with types (int8, int8)

----------------------------------------------------------------------
Ran 6472 tests in 817.539s

FAILED (failures=28, errors=322, skipped=316, expected failures=5)
L1 norm: 0.000000E+00
Max absolute error: 0.000000E+00
L1 norm: 0.000000E+00
Max absolute error: 0.000000E+00
0	0	0
0	0	0
